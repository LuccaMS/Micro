

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 21 16:24:18 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0006                     _PORTBbits	set	6
   184  0010                     _T1CONbits	set	16
   185  0008                     _PORTD	set	8
   186  0007                     _PORTC	set	7
   187  0006                     _PORTB	set	6
   188  0005                     _PORTA	set	5
   189  0008                     _PORTDbits	set	8
   190  000B                     _INTCONbits	set	11
   191  000F                     _TMR1H	set	15
   192  000E                     _TMR1L	set	14
   193  000C                     _PIR1bits	set	12
   194  0060                     _TMR1IF	set	96
   195  003A                     _RC2	set	58
   196  0038                     _RC0	set	56
   197  003F                     _RC7	set	63
   198  003E                     _RC6	set	62
   199  003D                     _RC5	set	61
   200  003C                     _RC4	set	60
   201  008C                     _PIE1bits	set	140
   202  0081                     _OPTION_REG	set	129
   203  0088                     _TRISD	set	136
   204  0087                     _TRISC	set	135
   205  0086                     _TRISB	set	134
   206  0085                     _TRISA	set	133
   207                           
   208                           	psect	strings
   209  021C                     __pstrings:
   210  021C                     stringtab:
   211  021C                     __stringtab:
   212  021C                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215  021C                     stringdir:
   216  021C  3002               	movlw	high stringdir
   217  021D  008A               	movwf	10
   218  021E  0804               	movf	4,w
   219  021F  0A84               	incf	4,f
   220  0220  0782               	addwf	2,f
   221  0221                     __stringbase:
   222  0221  3400               	retlw	0
   223  0222                     __end_of__stringtab:
   224  0222                     STR_1:
   225  0222  3449               	retlw	73	;'I'
   226  0223  344E               	retlw	78	;'N'
   227  0224  3454               	retlw	84	;'T'
   228  0225  3445               	retlw	69	;'E'
   229  0226  3452               	retlw	82	;'R'
   230  0227  3452               	retlw	82	;'R'
   231  0228  344F               	retlw	79	;'O'
   232  0229  344D               	retlw	77	;'M'
   233  022A  3450               	retlw	80	;'P'
   234  022B  3449               	retlw	73	;'I'
   235  022C  3444               	retlw	68	;'D'
   236  022D  344F               	retlw	79	;'O'
   237  022E  342E               	retlw	46	;'.'
   238  022F  342E               	retlw	46	;'.'
   239  0230  342E               	retlw	46	;'.'
   240  0231  3400               	retlw	0
   241  0232                     STR_4:
   242  0232  3444               	retlw	68	;'D'
   243  0233  3445               	retlw	69	;'E'
   244  0234  3453               	retlw	83	;'S'
   245  0235  3450               	retlw	80	;'P'
   246  0236  3445               	retlw	69	;'E'
   247  0237  344A               	retlw	74	;'J'
   248  0238  3441               	retlw	65	;'A'
   249  0239  344E               	retlw	78	;'N'
   250  023A  3444               	retlw	68	;'D'
   251  023B  344F               	retlw	79	;'O'
   252  023C  342E               	retlw	46	;'.'
   253  023D  342E               	retlw	46	;'.'
   254  023E  342E               	retlw	46	;'.'
   255  023F  3400               	retlw	0
   256  0240                     STR_2:
   257  0240  3453               	retlw	83	;'S'
   258  0241  3449               	retlw	73	;'I'
   259  0242  3447               	retlw	71	;'G'
   260  0243  344D               	retlw	77	;'M'
   261  0244  3441               	retlw	65	;'A'
   262  0245  3420               	retlw	32	;' '
   263  0246  3444               	retlw	68	;'D'
   264  0247  344F               	retlw	79	;'O'
   265  0248  3447               	retlw	71	;'G'
   266  0249  3400               	retlw	0
   267  024A                     STR_3:
   268  024A  3447               	retlw	71	;'G'
   269  024B  3452               	retlw	82	;'R'
   270  024C  3449               	retlw	73	;'I'
   271  024D  344E               	retlw	78	;'N'
   272  024E  3444               	retlw	68	;'D'
   273  024F  3453               	retlw	83	;'S'
   274  0250  3445               	retlw	69	;'E'
   275  0251  3454               	retlw	84	;'T'
   276  0252  3400               	retlw	0
   277                           
   278                           	psect	cinit
   279  0015                     start_initialization:	
   280                           ; #config settings
   281                           
   282  0015                     __initialization:
   283                           
   284                           ; Clear objects allocated to COMMON
   285  0015  01FB               	clrf	__pbssCOMMON& (0+127)
   286  0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   287                           
   288                           ; Clear objects allocated to BANK0
   289  0017  1283               	bcf	3,5	;RP0=0, select bank0
   290  0018  1303               	bcf	3,6	;RP1=0, select bank0
   291  0019  01AF               	clrf	__pbssBANK0& (0+127)
   292  001A  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   293  001B  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   294  001C  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   295  001D                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  001D                     __end_of__initialization:
   299  001D  0183               	clrf	3
   300  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  007B                     __pbssCOMMON:
   304  007B                     _valor:
   305  007B                     	ds	2
   306                           
   307                           	psect	bssBANK0
   308  002F                     __pbssBANK0:
   309  002F                     _test:
   310  002F                     	ds	2
   311  0031                     _interrupcao:
   312  0031                     	ds	2
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:
   316  0070                     ?_Lcd_Port:
   317  0070                     ?_Lcd_Cmd:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_Lcd_Clear:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_Lcd_Init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_Lcd_Write_Char:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_Lcd_Write_String:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_tes:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?i1_Lcd_Port:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??i1_Lcd_Port:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?i1_Lcd_Cmd:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?i1_Lcd_Clear:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?i1_Lcd_Write_Char:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?i1_Lcd_Write_String:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     i1Lcd_Port@a:	
   357                           ; 1 bytes @ 0x0
   358                           
   359                           
   360                           ; 1 bytes @ 0x0
   361  0070                     	ds	1
   362  0071                     ??i1_Lcd_Cmd:
   363  0071                     ??i1_Lcd_Write_Char:	
   364                           ; 1 bytes @ 0x1
   365                           
   366                           
   367                           ; 1 bytes @ 0x1
   368  0071                     	ds	1
   369  0072                     i1Lcd_Write_Char@temp:
   370                           
   371                           ; 1 bytes @ 0x2
   372  0072                     	ds	1
   373  0073                     i1Lcd_Cmd@a:
   374  0073                     i1Lcd_Write_Char@y:	
   375                           ; 1 bytes @ 0x3
   376                           
   377                           
   378                           ; 1 bytes @ 0x3
   379  0073                     	ds	1
   380  0074                     ??i1_Lcd_Clear:
   381  0074                     ?i1_Lcd_Set_Cursor:	
   382                           ; 1 bytes @ 0x4
   383                           
   384  0074                     i1Lcd_Set_Cursor@b:	
   385                           ; 1 bytes @ 0x4
   386                           
   387  0074                     i1Lcd_Write_Char@a:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 1 bytes @ 0x4
   392  0074                     	ds	1
   393  0075                     ??i1_Lcd_Set_Cursor:
   394  0075                     ??i1_Lcd_Write_String:	
   395                           ; 1 bytes @ 0x5
   396                           
   397  0075                     i1Lcd_Write_String@a:	
   398                           ; 1 bytes @ 0x5
   399                           
   400                           
   401                           ; 1 bytes @ 0x5
   402  0075                     	ds	1
   403  0076                     i1Lcd_Write_String@i:
   404                           
   405                           ; 2 bytes @ 0x6
   406  0076                     	ds	1
   407  0077                     i1Lcd_Set_Cursor@a:
   408                           
   409                           ; 1 bytes @ 0x7
   410  0077                     	ds	1
   411  0078                     i1Lcd_Set_Cursor@z:
   412                           
   413                           ; 1 bytes @ 0x8
   414  0078                     	ds	1
   415  0079                     i1Lcd_Set_Cursor@y:
   416                           
   417                           ; 1 bytes @ 0x9
   418  0079                     	ds	1
   419  007A                     i1Lcd_Set_Cursor@temp:
   420                           
   421                           ; 1 bytes @ 0xA
   422  007A                     	ds	1
   423                           
   424                           	psect	cstackBANK0
   425  0020                     __pcstackBANK0:
   426  0020                     ??_tes:
   427                           
   428                           ; 1 bytes @ 0x0
   429  0020                     	ds	4
   430  0024                     ??_Lcd_Port:
   431  0024                     Lcd_Port@a:	
   432                           ; 1 bytes @ 0x4
   433                           
   434                           
   435                           ; 1 bytes @ 0x4
   436  0024                     	ds	1
   437  0025                     ??_Lcd_Cmd:
   438  0025                     ??_Lcd_Write_Char:	
   439                           ; 1 bytes @ 0x5
   440                           
   441                           
   442                           ; 1 bytes @ 0x5
   443  0025                     	ds	1
   444  0026                     Lcd_Write_Char@temp:
   445                           
   446                           ; 1 bytes @ 0x6
   447  0026                     	ds	1
   448  0027                     Lcd_Cmd@a:
   449  0027                     Lcd_Write_Char@y:	
   450                           ; 1 bytes @ 0x7
   451                           
   452                           
   453                           ; 1 bytes @ 0x7
   454  0027                     	ds	1
   455  0028                     ??_Lcd_Clear:
   456  0028                     ?_Lcd_Set_Cursor:	
   457                           ; 1 bytes @ 0x8
   458                           
   459  0028                     ??_Lcd_Init:	
   460                           ; 1 bytes @ 0x8
   461                           
   462  0028                     Lcd_Set_Cursor@b:	
   463                           ; 1 bytes @ 0x8
   464                           
   465  0028                     Lcd_Write_Char@a:	
   466                           ; 1 bytes @ 0x8
   467                           
   468                           
   469                           ; 1 bytes @ 0x8
   470  0028                     	ds	1
   471  0029                     ??_Lcd_Set_Cursor:
   472  0029                     ??_Lcd_Write_String:	
   473                           ; 1 bytes @ 0x9
   474                           
   475  0029                     Lcd_Write_String@i:	
   476                           ; 1 bytes @ 0x9
   477                           
   478                           
   479                           ; 2 bytes @ 0x9
   480  0029                     	ds	2
   481  002B                     Lcd_Set_Cursor@a:
   482  002B                     Lcd_Write_String@a:	
   483                           ; 1 bytes @ 0xB
   484                           
   485                           
   486                           ; 1 bytes @ 0xB
   487  002B                     	ds	1
   488  002C                     Lcd_Set_Cursor@z:
   489                           
   490                           ; 1 bytes @ 0xC
   491  002C                     	ds	1
   492  002D                     Lcd_Set_Cursor@y:
   493                           
   494                           ; 1 bytes @ 0xD
   495  002D                     	ds	1
   496  002E                     Lcd_Set_Cursor@temp:
   497                           
   498                           ; 1 bytes @ 0xE
   499  002E                     	ds	1
   500  002F                     ??_main:
   501                           
   502                           	psect	maintext
   503  0021                     __pmaintext:	
   504                           ; 1 bytes @ 0xF
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 66 in file "newmain.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels required when called: 7
   530 ;; This function calls:
   531 ;;		_Lcd_Clear
   532 ;;		_Lcd_Init
   533 ;;		_Lcd_Set_Cursor
   534 ;;		_Lcd_Write_String
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540  0021                     _main:	
   541                           ;psect for function _main
   542                           
   543  0021                     l1107:	
   544                           ;incstack = 0
   545                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   546                           
   547                           
   548                           ;newmain.c: 67:     TRISA = 0b11111111;
   549  0021  30FF               	movlw	255
   550  0022  1683               	bsf	3,5	;RP0=1, select bank1
   551  0023  1303               	bcf	3,6	;RP1=0, select bank1
   552  0024  0085               	movwf	5	;volatile
   553                           
   554                           ;newmain.c: 68:     TRISB = 0b00000011;
   555  0025  3003               	movlw	3
   556  0026  0086               	movwf	6	;volatile
   557  0027                     l1109:
   558                           
   559                           ;newmain.c: 69:     TRISC = 0;
   560  0027  0187               	clrf	7	;volatile
   561  0028                     l1111:
   562                           
   563                           ;newmain.c: 70:     TRISD = 0;
   564  0028  0188               	clrf	8	;volatile
   565                           
   566                           ;newmain.c: 71:     OPTION_REG = 0b00111111;
   567  0029  303F               	movlw	63
   568  002A  0081               	movwf	1	;volatile
   569  002B                     l1113:
   570                           
   571                           ;newmain.c: 72:     PORTA = 0;
   572  002B  1283               	bcf	3,5	;RP0=0, select bank0
   573  002C  1303               	bcf	3,6	;RP1=0, select bank0
   574  002D  0185               	clrf	5	;volatile
   575  002E                     l1115:
   576                           
   577                           ;newmain.c: 73:     PORTB = 0;
   578  002E  0186               	clrf	6	;volatile
   579  002F                     l1117:
   580                           
   581                           ;newmain.c: 74:     PORTC = 0;
   582  002F  0187               	clrf	7	;volatile
   583  0030                     l1119:
   584                           
   585                           ;newmain.c: 75:     PORTD = 0;
   586  0030  0188               	clrf	8	;volatile
   587  0031                     l1121:
   588                           
   589                           ;newmain.c: 77:     INTCONbits.GIE = 1;
   590  0031  178B               	bsf	11,7	;volatile
   591  0032                     l1123:
   592                           
   593                           ;newmain.c: 78:     INTCONbits.PEIE = 1;
   594  0032  170B               	bsf	11,6	;volatile
   595  0033                     l1125:
   596                           
   597                           ;newmain.c: 79:     INTCONbits.INTE=1;
   598  0033  160B               	bsf	11,4	;volatile
   599  0034                     l1127:
   600                           
   601                           ;newmain.c: 85:     PIE1bits.TMR1IE = 1;
   602  0034  1683               	bsf	3,5	;RP0=1, select bank1
   603  0035  1303               	bcf	3,6	;RP1=0, select bank1
   604  0036  140C               	bsf	12,0	;volatile
   605  0037                     l1129:
   606                           
   607                           ;newmain.c: 86:     T1CONbits.TMR1CS = 0 ;
   608  0037  1283               	bcf	3,5	;RP0=0, select bank0
   609  0038  1303               	bcf	3,6	;RP1=0, select bank0
   610  0039  1090               	bcf	16,1	;volatile
   611  003A                     l1131:
   612                           
   613                           ;newmain.c: 87:     T1CONbits.T1CKPS0 = 1;
   614  003A  1610               	bsf	16,4	;volatile
   615  003B                     l1133:
   616                           
   617                           ;newmain.c: 88:     T1CONbits.T1CKPS1 = 1;
   618  003B  1690               	bsf	16,5	;volatile
   619                           
   620                           ;newmain.c: 90:     TMR1L = 0xDC;
   621  003C  30DC               	movlw	220
   622  003D  008E               	movwf	14	;volatile
   623                           
   624                           ;newmain.c: 91:     TMR1H = 0X0B;
   625  003E  300B               	movlw	11
   626  003F  008F               	movwf	15	;volatile
   627  0040                     l1135:
   628                           
   629                           ;newmain.c: 124:     Lcd_Init();
   630  0040  120A  118A  2098  120A  118A  	fcall	_Lcd_Init
   631  0045                     l1137:
   632                           
   633                           ;newmain.c: 125:     Lcd_Clear();
   634  0045  120A  118A  2350  120A  118A  	fcall	_Lcd_Clear
   635  004A                     l1139:
   636                           
   637                           ;newmain.c: 126:     Lcd_Set_Cursor(1,1);
   638  004A  1283               	bcf	3,5	;RP0=0, select bank0
   639  004B  1303               	bcf	3,6	;RP1=0, select bank0
   640  004C  01A8               	clrf	Lcd_Set_Cursor@b
   641  004D  0AA8               	incf	Lcd_Set_Cursor@b,f
   642  004E  3001               	movlw	1
   643  004F  120A  118A  20FB  120A  118A  	fcall	_Lcd_Set_Cursor
   644  0054                     l1141:
   645                           
   646                           ;newmain.c: 127:     Lcd_Write_String("SIGMA DOG");
   647  0054  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   648  0055  120A  118A  228A  120A  118A  	fcall	_Lcd_Write_String
   649  005A                     l1143:
   650                           
   651                           ;newmain.c: 128:     Lcd_Set_Cursor(2,1);
   652  005A  1283               	bcf	3,5	;RP0=0, select bank0
   653  005B  1303               	bcf	3,6	;RP1=0, select bank0
   654  005C  01A8               	clrf	Lcd_Set_Cursor@b
   655  005D  0AA8               	incf	Lcd_Set_Cursor@b,f
   656  005E  3002               	movlw	2
   657  005F  120A  118A  20FB  120A  118A  	fcall	_Lcd_Set_Cursor
   658  0064                     l1145:
   659                           
   660                           ;newmain.c: 129:     Lcd_Write_String("GRINDSET");
   661  0064  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   662  0065  120A  118A  228A  120A  118A  	fcall	_Lcd_Write_String
   663  006A                     l1147:
   664                           
   665                           ;newmain.c: 130:     PORTDbits.RD5 = 1;
   666  006A  1283               	bcf	3,5	;RP0=0, select bank0
   667  006B  1303               	bcf	3,6	;RP1=0, select bank0
   668  006C  1688               	bsf	8,5	;volatile
   669  006D                     l1149:
   670                           
   671                           ;newmain.c: 132:         if(interrupcao == 1){
   672  006D  0331               	decf	_interrupcao,w
   673  006E  0432               	iorwf	_interrupcao+1,w
   674  006F  1D03               	btfss	3,2
   675  0070  2872               	goto	u471
   676  0071  2873               	goto	u470
   677  0072                     u471:
   678  0072  2875               	goto	l1153
   679  0073                     u470:
   680  0073                     l1151:
   681                           
   682                           ;newmain.c: 133:             interrupcao = 0;
   683  0073  01B1               	clrf	_interrupcao
   684  0074  01B2               	clrf	_interrupcao+1
   685  0075                     l1153:
   686                           
   687                           ;newmain.c: 135:         PORTDbits.RD7 = 0;
   688  0075  1388               	bcf	8,7	;volatile
   689  0076                     l1155:
   690                           
   691                           ;newmain.c: 136:         if(PORTBbits.RB1 == 0){
   692  0076  1886               	btfsc	6,1	;volatile
   693  0077  2879               	goto	u481
   694  0078  287A               	goto	u480
   695  0079                     u481:
   696  0079  286D               	goto	l1149
   697  007A                     u480:
   698  007A                     l1157:
   699                           
   700                           ;newmain.c: 137:             Lcd_Clear();
   701  007A  120A  118A  2350  120A  118A  	fcall	_Lcd_Clear
   702                           
   703                           ;newmain.c: 138:             Lcd_Set_Cursor(1,1);
   704  007F  1283               	bcf	3,5	;RP0=0, select bank0
   705  0080  1303               	bcf	3,6	;RP1=0, select bank0
   706  0081  01A8               	clrf	Lcd_Set_Cursor@b
   707  0082  0AA8               	incf	Lcd_Set_Cursor@b,f
   708  0083  3001               	movlw	1
   709  0084  120A  118A  20FB  120A  118A  	fcall	_Lcd_Set_Cursor
   710  0089                     l1159:
   711                           
   712                           ;newmain.c: 139:             Lcd_Write_String("DESPEJANDO...");
   713  0089  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   714  008A  120A  118A  228A  120A  118A  	fcall	_Lcd_Write_String
   715  008F                     l1161:
   716                           
   717                           ;newmain.c: 140:             PORTDbits.RD7 = 1;
   718  008F  1283               	bcf	3,5	;RP0=0, select bank0
   719  0090  1303               	bcf	3,6	;RP1=0, select bank0
   720  0091  1788               	bsf	8,7	;volatile
   721  0092                     l1163:
   722                           
   723                           ;newmain.c: 141:             T1CONbits.TMR1ON = 1;
   724  0092  1410               	bsf	16,0	;volatile
   725  0093                     l1165:
   726                           
   727                           ;newmain.c: 142:             PORTDbits.RD7 = 0;
   728  0093  1388               	bcf	8,7	;volatile
   729  0094  286D               	goto	l1149
   730  0095  120A  118A  2812   	ljmp	start
   731  0098                     __end_of_main:
   732                           
   733                           	psect	text1
   734  028A                     __ptext1:	
   735 ;; *************** function _Lcd_Write_String *****************
   736 ;; Defined at:
   737 ;;		line 96 in file "./LCD.h"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  a               1    wreg     PTR unsigned char 
   740 ;;		 -> STR_4(14), STR_3(9), STR_2(10), STR_1(16), 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  a               1   11[BANK0 ] PTR unsigned char 
   743 ;;		 -> STR_4(14), STR_3(9), STR_2(10), STR_1(16), 
   744 ;;  i               2    9[BANK0 ] int 
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   754 ;;      Params:         0       0       0       0       0
   755 ;;      Locals:         0       3       0       0       0
   756 ;;      Temps:          0       0       0       0       0
   757 ;;      Totals:         0       3       0       0       0
   758 ;;Total ram usage:        3 bytes
   759 ;; Hardware stack levels used: 1
   760 ;; Hardware stack levels required when called: 6
   761 ;; This function calls:
   762 ;;		_Lcd_Write_Char
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768  028A                     _Lcd_Write_String:	
   769                           ;psect for function _Lcd_Write_String
   770                           
   771                           
   772                           ;incstack = 0
   773                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   774                           ;Lcd_Write_String@a stored from wreg
   775  028A  1283               	bcf	3,5	;RP0=0, select bank0
   776  028B  1303               	bcf	3,6	;RP1=0, select bank0
   777  028C  00AB               	movwf	Lcd_Write_String@a
   778  028D                     l1049:
   779                           
   780                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
   781  028D  01A9               	clrf	Lcd_Write_String@i
   782  028E  01AA               	clrf	Lcd_Write_String@i+1
   783  028F  2AA5               	goto	l1055
   784  0290                     l1051:
   785                           
   786                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
   787  0290  0829               	movf	Lcd_Write_String@i,w
   788  0291  072B               	addwf	Lcd_Write_String@a,w
   789  0292  0084               	movwf	4
   790  0293  120A  118A  221C  120A  118A  	fcall	stringdir
   791  0298  120A  118A  21A5  120A  118A  	fcall	_Lcd_Write_Char
   792  029D                     l1053:
   793  029D  3001               	movlw	1
   794  029E  1283               	bcf	3,5	;RP0=0, select bank0
   795  029F  1303               	bcf	3,6	;RP1=0, select bank0
   796  02A0  07A9               	addwf	Lcd_Write_String@i,f
   797  02A1  1803               	skipnc
   798  02A2  0AAA               	incf	Lcd_Write_String@i+1,f
   799  02A3  3000               	movlw	0
   800  02A4  07AA               	addwf	Lcd_Write_String@i+1,f
   801  02A5                     l1055:
   802  02A5  0829               	movf	Lcd_Write_String@i,w
   803  02A6  072B               	addwf	Lcd_Write_String@a,w
   804  02A7  0084               	movwf	4
   805  02A8  120A  118A  221C  120A  118A  	fcall	stringdir
   806  02AD  3A00               	xorlw	0
   807  02AE  1D03               	skipz
   808  02AF  2AB1               	goto	u391
   809  02B0  2AB2               	goto	u390
   810  02B1                     u391:
   811  02B1  2A90               	goto	l1051
   812  02B2                     u390:
   813  02B2                     l85:
   814  02B2  0008               	return
   815  02B3                     __end_of_Lcd_Write_String:
   816                           
   817                           	psect	text2
   818  01A5                     __ptext2:	
   819 ;; *************** function _Lcd_Write_Char *****************
   820 ;; Defined at:
   821 ;;		line 80 in file "./LCD.h"
   822 ;; Parameters:    Size  Location     Type
   823 ;;  a               1    wreg     unsigned char 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  a               1    8[BANK0 ] unsigned char 
   826 ;;  y               1    7[BANK0 ] unsigned char 
   827 ;;  temp            1    6[BANK0 ] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, pclath, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       3       0       0       0
   839 ;;      Temps:          0       1       0       0       0
   840 ;;      Totals:         0       4       0       0       0
   841 ;;Total ram usage:        4 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 5
   844 ;; This function calls:
   845 ;;		_Lcd_Port
   846 ;; This function is called by:
   847 ;;		_Lcd_Write_String
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851  01A5                     _Lcd_Write_Char:	
   852                           ;psect for function _Lcd_Write_Char
   853                           
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   857                           ;Lcd_Write_Char@a stored from wreg
   858  01A5  1283               	bcf	3,5	;RP0=0, select bank0
   859  01A6  1303               	bcf	3,6	;RP1=0, select bank0
   860  01A7  00A8               	movwf	Lcd_Write_Char@a
   861  01A8                     l967:
   862                           
   863                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
   864  01A8  0828               	movf	Lcd_Write_Char@a,w
   865  01A9  390F               	andlw	15
   866  01AA  00A5               	movwf	??_Lcd_Write_Char
   867  01AB  0825               	movf	??_Lcd_Write_Char,w
   868  01AC  00A6               	movwf	Lcd_Write_Char@temp
   869                           
   870                           ;./LCD.h: 84:    y = a&0xF0;
   871  01AD  0828               	movf	Lcd_Write_Char@a,w
   872  01AE  39F0               	andlw	240
   873  01AF  00A5               	movwf	??_Lcd_Write_Char
   874  01B0  0825               	movf	??_Lcd_Write_Char,w
   875  01B1  00A7               	movwf	Lcd_Write_Char@y
   876  01B2                     l969:
   877                           
   878                           ;./LCD.h: 85:    RC0 = 1;
   879  01B2  1407               	bsf	7,0	;volatile
   880  01B3                     l971:
   881                           
   882                           ;./LCD.h: 86:    Lcd_Port(y>>4);
   883  01B3  0827               	movf	Lcd_Write_Char@y,w
   884  01B4  00A5               	movwf	??_Lcd_Write_Char
   885  01B5  3004               	movlw	4
   886  01B6                     u335:
   887  01B6  1003               	clrc
   888  01B7  0CA5               	rrf	??_Lcd_Write_Char,f
   889  01B8  3EFF               	addlw	-1
   890  01B9  1D03               	skipz
   891  01BA  29B6               	goto	u335
   892  01BB  0825               	movf	??_Lcd_Write_Char,w
   893  01BC  120A  118A  22FA  120A  118A  	fcall	_Lcd_Port
   894  01C1                     l973:
   895                           
   896                           ;./LCD.h: 87:    RC2 = 1;
   897  01C1  1283               	bcf	3,5	;RP0=0, select bank0
   898  01C2  1303               	bcf	3,6	;RP1=0, select bank0
   899  01C3  1507               	bsf	7,2	;volatile
   900  01C4                     l975:
   901                           
   902                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   903  01C4  300C               	movlw	12
   904  01C5  1283               	bcf	3,5	;RP0=0, select bank0
   905  01C6  1303               	bcf	3,6	;RP1=0, select bank0
   906  01C7  00A5               	movwf	??_Lcd_Write_Char
   907  01C8                     u497:
   908  01C8  0BA5               	decfsz	??_Lcd_Write_Char,f
   909  01C9  29C8               	goto	u497
   910  01CA  0000               	nop
   911  01CB                     l977:
   912                           
   913                           ;./LCD.h: 89:    RC2 = 0;
   914  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   915  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   916  01CD  1107               	bcf	7,2	;volatile
   917  01CE                     l979:
   918                           
   919                           ;./LCD.h: 90:    Lcd_Port(temp);
   920  01CE  0826               	movf	Lcd_Write_Char@temp,w
   921  01CF  120A  118A  22FA  120A  118A  	fcall	_Lcd_Port
   922  01D4                     l981:
   923                           
   924                           ;./LCD.h: 91:    RC2 = 1;
   925  01D4  1283               	bcf	3,5	;RP0=0, select bank0
   926  01D5  1303               	bcf	3,6	;RP1=0, select bank0
   927  01D6  1507               	bsf	7,2	;volatile
   928  01D7                     l983:
   929                           
   930                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   931  01D7  300C               	movlw	12
   932  01D8  1283               	bcf	3,5	;RP0=0, select bank0
   933  01D9  1303               	bcf	3,6	;RP1=0, select bank0
   934  01DA  00A5               	movwf	??_Lcd_Write_Char
   935  01DB                     u507:
   936  01DB  0BA5               	decfsz	??_Lcd_Write_Char,f
   937  01DC  29DB               	goto	u507
   938  01DD  0000               	nop
   939  01DE                     l985:
   940                           
   941                           ;./LCD.h: 93:    RC2 = 0;
   942  01DE  1283               	bcf	3,5	;RP0=0, select bank0
   943  01DF  1303               	bcf	3,6	;RP1=0, select bank0
   944  01E0  1107               	bcf	7,2	;volatile
   945  01E1                     l79:
   946  01E1  0008               	return
   947  01E2                     __end_of_Lcd_Write_Char:
   948                           
   949                           	psect	text3
   950  00FB                     __ptext3:	
   951 ;; *************** function _Lcd_Set_Cursor *****************
   952 ;; Defined at:
   953 ;;		line 40 in file "./LCD.h"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  a               1    wreg     unsigned char 
   956 ;;  b               1    8[BANK0 ] unsigned char 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  a               1   11[BANK0 ] unsigned char 
   959 ;;  temp            1   14[BANK0 ] unsigned char 
   960 ;;  y               1   13[BANK0 ] unsigned char 
   961 ;;  z               1   12[BANK0 ] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0, pclath, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       1       0       0       0
   972 ;;      Locals:         0       4       0       0       0
   973 ;;      Temps:          0       2       0       0       0
   974 ;;      Totals:         0       7       0       0       0
   975 ;;Total ram usage:        7 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 6
   978 ;; This function calls:
   979 ;;		_Lcd_Cmd
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985  00FB                     _Lcd_Set_Cursor:	
   986                           ;psect for function _Lcd_Set_Cursor
   987                           
   988                           
   989                           ;incstack = 0
   990                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   991                           ;Lcd_Set_Cursor@a stored from wreg
   992  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   993  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   994  00FD  00AB               	movwf	Lcd_Set_Cursor@a
   995  00FE                     l1019:
   996                           
   997                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
   998  00FE  032B               	decf	Lcd_Set_Cursor@a,w
   999  00FF  1D03               	btfss	3,2
  1000  0100  2902               	goto	u351
  1001  0101  2903               	goto	u350
  1002  0102                     u351:
  1003  0102  2928               	goto	l1029
  1004  0103                     u350:
  1005  0103                     l1021:
  1006                           
  1007                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1008  0103  0828               	movf	Lcd_Set_Cursor@b,w
  1009  0104  3E7F               	addlw	127
  1010  0105  00A9               	movwf	??_Lcd_Set_Cursor
  1011  0106  0829               	movf	??_Lcd_Set_Cursor,w
  1012  0107  00AE               	movwf	Lcd_Set_Cursor@temp
  1013                           
  1014                           ;./LCD.h: 46:   z = temp>>4;
  1015  0108  082E               	movf	Lcd_Set_Cursor@temp,w
  1016  0109  00A9               	movwf	??_Lcd_Set_Cursor
  1017  010A  3004               	movlw	4
  1018  010B                     u365:
  1019  010B  1003               	clrc
  1020  010C  0CA9               	rrf	??_Lcd_Set_Cursor,f
  1021  010D  3EFF               	addlw	-1
  1022  010E  1D03               	skipz
  1023  010F  290B               	goto	u365
  1024  0110  0829               	movf	??_Lcd_Set_Cursor,w
  1025  0111  00AA               	movwf	??_Lcd_Set_Cursor+1
  1026  0112  082A               	movf	??_Lcd_Set_Cursor+1,w
  1027  0113  00AC               	movwf	Lcd_Set_Cursor@z
  1028  0114                     l1023:
  1029                           
  1030                           ;./LCD.h: 47:   y = temp & 0x0F;
  1031  0114  082E               	movf	Lcd_Set_Cursor@temp,w
  1032  0115  390F               	andlw	15
  1033  0116  00A9               	movwf	??_Lcd_Set_Cursor
  1034  0117  0829               	movf	??_Lcd_Set_Cursor,w
  1035  0118  00AD               	movwf	Lcd_Set_Cursor@y
  1036  0119                     l1025:
  1037                           
  1038                           ;./LCD.h: 48:   Lcd_Cmd(z);
  1039  0119  082C               	movf	Lcd_Set_Cursor@z,w
  1040  011A  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1041  011F                     l1027:
  1042                           
  1043                           ;./LCD.h: 49:   Lcd_Cmd(y);
  1044  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0121  082D               	movf	Lcd_Set_Cursor@y,w
  1047  0122  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1048                           
  1049                           ;./LCD.h: 50:  }
  1050  0127  2952               	goto	l73
  1051  0128                     l1029:
  1052  0128  3002               	movlw	2
  1053  0129  062B               	xorwf	Lcd_Set_Cursor@a,w
  1054  012A  1D03               	btfss	3,2
  1055  012B  292D               	goto	u371
  1056  012C  292E               	goto	u370
  1057  012D                     u371:
  1058  012D  2952               	goto	l73
  1059  012E                     u370:
  1060  012E                     l1031:
  1061                           
  1062                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1063  012E  0828               	movf	Lcd_Set_Cursor@b,w
  1064  012F  3EBF               	addlw	191
  1065  0130  00A9               	movwf	??_Lcd_Set_Cursor
  1066  0131  0829               	movf	??_Lcd_Set_Cursor,w
  1067  0132  00AE               	movwf	Lcd_Set_Cursor@temp
  1068                           
  1069                           ;./LCD.h: 54:   z = temp>>4;
  1070  0133  082E               	movf	Lcd_Set_Cursor@temp,w
  1071  0134  00A9               	movwf	??_Lcd_Set_Cursor
  1072  0135  3004               	movlw	4
  1073  0136                     u385:
  1074  0136  1003               	clrc
  1075  0137  0CA9               	rrf	??_Lcd_Set_Cursor,f
  1076  0138  3EFF               	addlw	-1
  1077  0139  1D03               	skipz
  1078  013A  2936               	goto	u385
  1079  013B  0829               	movf	??_Lcd_Set_Cursor,w
  1080  013C  00AA               	movwf	??_Lcd_Set_Cursor+1
  1081  013D  082A               	movf	??_Lcd_Set_Cursor+1,w
  1082  013E  00AC               	movwf	Lcd_Set_Cursor@z
  1083  013F                     l1033:
  1084                           
  1085                           ;./LCD.h: 55:   y = temp & 0x0F;
  1086  013F  082E               	movf	Lcd_Set_Cursor@temp,w
  1087  0140  390F               	andlw	15
  1088  0141  00A9               	movwf	??_Lcd_Set_Cursor
  1089  0142  0829               	movf	??_Lcd_Set_Cursor,w
  1090  0143  00AD               	movwf	Lcd_Set_Cursor@y
  1091  0144                     l1035:
  1092                           
  1093                           ;./LCD.h: 56:   Lcd_Cmd(z);
  1094  0144  082C               	movf	Lcd_Set_Cursor@z,w
  1095  0145  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1096  014A                     l1037:
  1097                           
  1098                           ;./LCD.h: 57:   Lcd_Cmd(y);
  1099  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1100  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1101  014C  082D               	movf	Lcd_Set_Cursor@y,w
  1102  014D  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1103  0152                     l73:
  1104  0152  0008               	return
  1105  0153                     __end_of_Lcd_Set_Cursor:
  1106                           
  1107                           	psect	text4
  1108  0098                     __ptext4:	
  1109 ;; *************** function _Lcd_Init *****************
  1110 ;; Defined at:
  1111 ;;		line 61 in file "./LCD.h"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0
  1127 ;;      Temps:          0       2       0       0       0
  1128 ;;      Totals:         0       2       0       0       0
  1129 ;;Total ram usage:        2 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 6
  1132 ;; This function calls:
  1133 ;;		_Lcd_Cmd
  1134 ;;		_Lcd_Port
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140  0098                     _Lcd_Init:	
  1141                           ;psect for function _Lcd_Init
  1142                           
  1143  0098                     l1039:	
  1144                           ;incstack = 0
  1145                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1146                           
  1147                           
  1148                           ;./LCD.h: 63:   Lcd_Port(0x00);
  1149  0098  3000               	movlw	0
  1150  0099  120A  118A  22FA  120A  118A  	fcall	_Lcd_Port
  1151  009E                     l1041:
  1152                           
  1153                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1154  009E  301A               	movlw	26
  1155  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1156  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1157  00A1  00A9               	movwf	??_Lcd_Init+1
  1158  00A2  30F7               	movlw	247
  1159  00A3  00A8               	movwf	??_Lcd_Init
  1160  00A4                     u517:
  1161  00A4  0BA8               	decfsz	??_Lcd_Init,f
  1162  00A5  28A4               	goto	u517
  1163  00A6  0BA9               	decfsz	??_Lcd_Init+1,f
  1164  00A7  28A4               	goto	u517
  1165  00A8  28A9               	nop2
  1166  00A9                     l1043:
  1167                           
  1168                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  1169  00A9  3003               	movlw	3
  1170  00AA  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1171                           
  1172                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1173  00AF  3007               	movlw	7
  1174  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1175  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1176  00B2  00A9               	movwf	??_Lcd_Init+1
  1177  00B3  307C               	movlw	124
  1178  00B4  00A8               	movwf	??_Lcd_Init
  1179  00B5                     u527:
  1180  00B5  0BA8               	decfsz	??_Lcd_Init,f
  1181  00B6  28B5               	goto	u527
  1182  00B7  0BA9               	decfsz	??_Lcd_Init+1,f
  1183  00B8  28B5               	goto	u527
  1184  00B9  0000               	nop
  1185  00BA                     l1045:
  1186                           
  1187                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  1188  00BA  3003               	movlw	3
  1189  00BB  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1190  00C0                     l1047:
  1191                           
  1192                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1193  00C0  300F               	movlw	15
  1194  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1195  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1196  00C3  00A9               	movwf	??_Lcd_Init+1
  1197  00C4  3047               	movlw	71
  1198  00C5  00A8               	movwf	??_Lcd_Init
  1199  00C6                     u537:
  1200  00C6  0BA8               	decfsz	??_Lcd_Init,f
  1201  00C7  28C6               	goto	u537
  1202  00C8  0BA9               	decfsz	??_Lcd_Init+1,f
  1203  00C9  28C6               	goto	u537
  1204                           
  1205                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  1206  00CA  3003               	movlw	3
  1207  00CB  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1208                           
  1209                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  1210  00D0  3002               	movlw	2
  1211  00D1  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1212                           
  1213                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  1214  00D6  3002               	movlw	2
  1215  00D7  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1216                           
  1217                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  1218  00DC  3008               	movlw	8
  1219  00DD  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1220                           
  1221                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  1222  00E2  3000               	movlw	0
  1223  00E3  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1224                           
  1225                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  1226  00E8  300C               	movlw	12
  1227  00E9  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1228                           
  1229                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  1230  00EE  3000               	movlw	0
  1231  00EF  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1232                           
  1233                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  1234  00F4  3006               	movlw	6
  1235  00F5  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1236  00FA                     l76:
  1237  00FA  0008               	return
  1238  00FB                     __end_of_Lcd_Init:
  1239                           
  1240                           	psect	text5
  1241  0350                     __ptext5:	
  1242 ;; *************** function _Lcd_Clear *****************
  1243 ;; Defined at:
  1244 ;;		line 34 in file "./LCD.h"
  1245 ;; Parameters:    Size  Location     Type
  1246 ;;		None
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;		None
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      void 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0, pclath, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0
  1261 ;;      Totals:         0       0       0       0       0
  1262 ;;Total ram usage:        0 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 6
  1265 ;; This function calls:
  1266 ;;		_Lcd_Cmd
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272  0350                     _Lcd_Clear:	
  1273                           ;psect for function _Lcd_Clear
  1274                           
  1275  0350                     l1017:	
  1276                           ;incstack = 0
  1277                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1278                           
  1279                           
  1280                           ;./LCD.h: 36:  Lcd_Cmd(0);
  1281  0350  3000               	movlw	0
  1282  0351  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1283                           
  1284                           ;./LCD.h: 37:  Lcd_Cmd(1);
  1285  0356  3001               	movlw	1
  1286  0357  120A  118A  231A  120A  118A  	fcall	_Lcd_Cmd
  1287  035C                     l67:
  1288  035C  0008               	return
  1289  035D                     __end_of_Lcd_Clear:
  1290                           
  1291                           	psect	text6
  1292  031A                     __ptext6:	
  1293 ;; *************** function _Lcd_Cmd *****************
  1294 ;; Defined at:
  1295 ;;		line 25 in file "./LCD.h"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  a               1    wreg     unsigned char 
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  a               1    7[BANK0 ] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, pclath, cstack
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1309 ;;      Params:         0       0       0       0       0
  1310 ;;      Locals:         0       1       0       0       0
  1311 ;;      Temps:          0       2       0       0       0
  1312 ;;      Totals:         0       3       0       0       0
  1313 ;;Total ram usage:        3 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; Hardware stack levels required when called: 5
  1316 ;; This function calls:
  1317 ;;		_Lcd_Port
  1318 ;; This function is called by:
  1319 ;;		_Lcd_Clear
  1320 ;;		_Lcd_Set_Cursor
  1321 ;;		_Lcd_Init
  1322 ;;		_Lcd_Shift_Right
  1323 ;;		_Lcd_Shift_Left
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327  031A                     _Lcd_Cmd:	
  1328                           ;psect for function _Lcd_Cmd
  1329                           
  1330                           
  1331                           ;incstack = 0
  1332                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1333                           ;Lcd_Cmd@a stored from wreg
  1334  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1335  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1336  031C  00A7               	movwf	Lcd_Cmd@a
  1337  031D                     l957:
  1338                           
  1339                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  1340  031D  1007               	bcf	7,0	;volatile
  1341  031E                     l959:
  1342                           
  1343                           ;./LCD.h: 28:  Lcd_Port(a);
  1344  031E  0827               	movf	Lcd_Cmd@a,w
  1345  031F  120A  118A  22FA  120A  118A  	fcall	_Lcd_Port
  1346  0324                     l961:
  1347                           
  1348                           ;./LCD.h: 29:  RC2 = 1;
  1349  0324  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0325  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0326  1507               	bsf	7,2	;volatile
  1352  0327                     l963:
  1353                           
  1354                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1355  0327  3006               	movlw	6
  1356  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1358  032A  00A6               	movwf	??_Lcd_Cmd+1
  1359  032B  302F               	movlw	47
  1360  032C  00A5               	movwf	??_Lcd_Cmd
  1361  032D                     u547:
  1362  032D  0BA5               	decfsz	??_Lcd_Cmd,f
  1363  032E  2B2D               	goto	u547
  1364  032F  0BA6               	decfsz	??_Lcd_Cmd+1,f
  1365  0330  2B2D               	goto	u547
  1366  0331  2B32               	nop2
  1367  0332                     l965:
  1368                           
  1369                           ;./LCD.h: 31:         RC2 = 0;
  1370  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0334  1107               	bcf	7,2	;volatile
  1373  0335                     l64:
  1374  0335  0008               	return
  1375  0336                     __end_of_Lcd_Cmd:
  1376                           
  1377                           	psect	text7
  1378  02FA                     __ptext7:	
  1379 ;; *************** function _Lcd_Port *****************
  1380 ;; Defined at:
  1381 ;;		line 3 in file "./LCD.h"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  a               1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  a               1    4[BANK0 ] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         0       1       0       0       0
  1397 ;;      Temps:          0       0       0       0       0
  1398 ;;      Totals:         0       1       0       0       0
  1399 ;;Total ram usage:        1 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 4
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_Lcd_Cmd
  1406 ;;		_Lcd_Init
  1407 ;;		_Lcd_Write_Char
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411  02FA                     _Lcd_Port:	
  1412                           ;psect for function _Lcd_Port
  1413                           
  1414                           
  1415                           ;incstack = 0
  1416                           ; Regs used in _Lcd_Port: [wreg]
  1417                           ;Lcd_Port@a stored from wreg
  1418  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1419  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1420  02FC  00A4               	movwf	Lcd_Port@a
  1421  02FD                     l937:
  1422                           
  1423                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  1424  02FD  1C24               	btfss	Lcd_Port@a,0
  1425  02FE  2B00               	goto	u251
  1426  02FF  2B01               	goto	u250
  1427  0300                     u251:
  1428  0300  2B03               	goto	l53
  1429  0301                     u250:
  1430  0301                     l939:
  1431                           
  1432                           ;./LCD.h: 6:   RC4 = 1;
  1433  0301  1607               	bsf	7,4	;volatile
  1434  0302  2B04               	goto	l54
  1435  0303                     l53:	
  1436                           ;./LCD.h: 7:  else
  1437                           
  1438                           
  1439                           ;./LCD.h: 8:   RC4 = 0;
  1440  0303  1207               	bcf	7,4	;volatile
  1441  0304                     l54:
  1442                           
  1443                           ;./LCD.h: 10:  if(a & 2)
  1444  0304  1CA4               	btfss	Lcd_Port@a,1
  1445  0305  2B07               	goto	u261
  1446  0306  2B08               	goto	u260
  1447  0307                     u261:
  1448  0307  2B0A               	goto	l55
  1449  0308                     u260:
  1450  0308                     l941:
  1451                           
  1452                           ;./LCD.h: 11:   RC5 = 1;
  1453  0308  1687               	bsf	7,5	;volatile
  1454  0309  2B0B               	goto	l56
  1455  030A                     l55:	
  1456                           ;./LCD.h: 12:  else
  1457                           
  1458                           
  1459                           ;./LCD.h: 13:   RC5 = 0;
  1460  030A  1287               	bcf	7,5	;volatile
  1461  030B                     l56:
  1462                           
  1463                           ;./LCD.h: 15:  if(a & 4)
  1464  030B  1D24               	btfss	Lcd_Port@a,2
  1465  030C  2B0E               	goto	u271
  1466  030D  2B0F               	goto	u270
  1467  030E                     u271:
  1468  030E  2B11               	goto	l57
  1469  030F                     u270:
  1470  030F                     l943:
  1471                           
  1472                           ;./LCD.h: 16:   RC6 = 1;
  1473  030F  1707               	bsf	7,6	;volatile
  1474  0310  2B12               	goto	l58
  1475  0311                     l57:	
  1476                           ;./LCD.h: 17:  else
  1477                           
  1478                           
  1479                           ;./LCD.h: 18:   RC6 = 0;
  1480  0311  1307               	bcf	7,6	;volatile
  1481  0312                     l58:
  1482                           
  1483                           ;./LCD.h: 20:  if(a & 8)
  1484  0312  1DA4               	btfss	Lcd_Port@a,3
  1485  0313  2B15               	goto	u281
  1486  0314  2B16               	goto	u280
  1487  0315                     u281:
  1488  0315  2B18               	goto	l59
  1489  0316                     u280:
  1490  0316                     l945:
  1491                           
  1492                           ;./LCD.h: 21:   RC7 = 1;
  1493  0316  1787               	bsf	7,7	;volatile
  1494  0317  2B19               	goto	l61
  1495  0318                     l59:	
  1496                           ;./LCD.h: 22:  else
  1497                           
  1498                           
  1499                           ;./LCD.h: 23:   RC7 = 0;
  1500  0318  1387               	bcf	7,7	;volatile
  1501  0319                     l61:
  1502  0319  0008               	return
  1503  031A                     __end_of_Lcd_Port:
  1504                           
  1505                           	psect	text8
  1506  01E2                     __ptext8:	
  1507 ;; *************** function _tes *****************
  1508 ;; Defined at:
  1509 ;;		line 45 in file "newmain.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;		None
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;		None
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         0       0       0       0       0
  1524 ;;      Locals:         0       0       0       0       0
  1525 ;;      Temps:          0       4       0       0       0
  1526 ;;      Totals:         0       4       0       0       0
  1527 ;;Total ram usage:        4 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 3
  1530 ;; This function calls:
  1531 ;;		i1_Lcd_Clear
  1532 ;;		i1_Lcd_Set_Cursor
  1533 ;;		i1_Lcd_Write_String
  1534 ;; This function is called by:
  1535 ;;		Interrupt level 1
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539  01E2                     _tes:	
  1540                           ;psect for function _tes
  1541                           
  1542  01E2                     i1l1091:
  1543                           
  1544                           ;newmain.c: 46:     if(TMR1IF){
  1545  01E2  1C0C               	btfss	12,0	;volatile
  1546  01E3  29E5               	goto	u45_21
  1547  01E4  29E6               	goto	u45_20
  1548  01E5                     u45_21:
  1549  01E5  29F2               	goto	i1l102
  1550  01E6                     u45_20:
  1551  01E6                     i1l1093:
  1552                           
  1553                           ;newmain.c: 47:          PIR1bits.TMR1IF = 0;
  1554  01E6  100C               	bcf	12,0	;volatile
  1555  01E7                     i1l1095:
  1556                           
  1557                           ;newmain.c: 48:          TMR1L = 0xDC;
  1558  01E7  30DC               	movlw	220
  1559  01E8  008E               	movwf	14	;volatile
  1560                           
  1561                           ;newmain.c: 49:          TMR1H = 0X0B;
  1562  01E9  300B               	movlw	11
  1563  01EA  008F               	movwf	15	;volatile
  1564                           
  1565                           ;newmain.c: 50:          test++;
  1566  01EB  3001               	movlw	1
  1567  01EC  07AF               	addwf	_test,f
  1568  01ED  1803               	skipnc
  1569  01EE  0AB0               	incf	_test+1,f
  1570  01EF  3000               	movlw	0
  1571  01F0  07B0               	addwf	_test+1,f
  1572                           
  1573                           ;newmain.c: 51:     }
  1574  01F1  2A11               	goto	i1l105
  1575  01F2                     i1l102:	
  1576                           ;newmain.c: 52:     else if (INTCONbits.INTF)
  1577                           
  1578  01F2  1C8B               	btfss	11,1	;volatile
  1579  01F3  29F5               	goto	u46_21
  1580  01F4  29F6               	goto	u46_20
  1581  01F5                     u46_21:
  1582  01F5  2A11               	goto	i1l105
  1583  01F6                     u46_20:
  1584  01F6                     i1l1097:
  1585                           
  1586                           ;newmain.c: 53:     {;newmain.c: 54:         INTCONbits.INTF = 0;
  1587  01F6  108B               	bcf	11,1	;volatile
  1588                           
  1589                           ;newmain.c: 55:         PORTDbits.RD7 = 0;
  1590  01F7  1388               	bcf	8,7	;volatile
  1591  01F8                     i1l1099:
  1592                           
  1593                           ;newmain.c: 56:         Lcd_Clear();
  1594  01F8  120A  118A  235D  120A  118A  	fcall	i1_Lcd_Clear
  1595                           
  1596                           ;newmain.c: 57:         Lcd_Set_Cursor(1,1);
  1597  01FD  01F4               	clrf	i1Lcd_Set_Cursor@b
  1598  01FE  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  1599  01FF  3001               	movlw	1
  1600  0200  120A  118A  2153  120A  118A  	fcall	i1_Lcd_Set_Cursor
  1601  0205                     i1l1101:
  1602                           
  1603                           ;newmain.c: 58:         Lcd_Write_String("INTERROMPIDO...");
  1604  0205  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1605  0206  120A  118A  22B3  120A  118A  	fcall	i1_Lcd_Write_String
  1606  020B                     i1l1103:
  1607                           
  1608                           ;newmain.c: 59:         interrupcao = 1;
  1609  020B  3001               	movlw	1
  1610  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1611  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1612  020E  00B1               	movwf	_interrupcao
  1613  020F  3000               	movlw	0
  1614  0210  00B2               	movwf	_interrupcao+1
  1615  0211                     i1l105:
  1616  0211  0823               	movf	??_tes+3,w
  1617  0212  00FF               	movwf	btemp+1
  1618  0213  0822               	movf	??_tes+2,w
  1619  0214  008A               	movwf	10
  1620  0215  0821               	movf	??_tes+1,w
  1621  0216  0084               	movwf	4
  1622  0217  0E20               	swapf	??_tes,w
  1623  0218  0083               	movwf	3
  1624  0219  0EFE               	swapf	btemp,f
  1625  021A  0E7E               	swapf	btemp,w
  1626  021B  0009               	retfie
  1627  021C                     __end_of_tes:
  1628                           
  1629                           	psect	intentry
  1630  0004                     __pintentry:	
  1631                           ;incstack = 0
  1632                           ; Regs used in _tes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1633                           
  1634  0004                     interrupt_function:
  1635  007E                     saved_w	set	btemp
  1636  0004  00FE               	movwf	btemp
  1637  0005  0E03               	swapf	3,w
  1638  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0008  00A0               	movwf	??_tes
  1641  0009  0804               	movf	4,w
  1642  000A  00A1               	movwf	??_tes+1
  1643  000B  080A               	movf	10,w
  1644  000C  00A2               	movwf	??_tes+2
  1645  000D  087F               	movf	btemp+1,w
  1646  000E  00A3               	movwf	??_tes+3
  1647  000F  120A  118A  29E2   	ljmp	_tes
  1648                           
  1649                           	psect	text9
  1650  02B3                     __ptext9:	
  1651 ;; *************** function i1_Lcd_Write_String *****************
  1652 ;; Defined at:
  1653 ;;		line 96 in file "./LCD.h"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  a               1    wreg     PTR unsigned char 
  1656 ;;		 -> STR_4(14), STR_3(9), STR_2(10), STR_1(16), 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  a               1    5[COMMON] PTR unsigned char 
  1659 ;;		 -> STR_4(14), STR_3(9), STR_2(10), STR_1(16), 
  1660 ;;  i               2    6[COMMON] int 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         3       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         3       0       0       0       0
  1674 ;;Total ram usage:        3 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 2
  1677 ;; This function calls:
  1678 ;;		i1_Lcd_Write_Char
  1679 ;; This function is called by:
  1680 ;;		_tes
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           
  1684  02B3                     i1_Lcd_Write_String:	
  1685                           ;psect for function i1_Lcd_Write_String
  1686                           
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1690                           ;i1Lcd_Write_String@a stored from wreg
  1691  02B3  00F5               	movwf	i1Lcd_Write_String@a
  1692  02B4                     i1l1079:
  1693                           
  1694                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1695  02B4  01F6               	clrf	i1Lcd_Write_String@i
  1696  02B5  01F7               	clrf	i1Lcd_Write_String@i+1
  1697  02B6  2ACA               	goto	i1l1085
  1698  02B7                     i1l1081:
  1699                           
  1700                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  1701  02B7  0876               	movf	i1Lcd_Write_String@i,w
  1702  02B8  0775               	addwf	i1Lcd_Write_String@a,w
  1703  02B9  0084               	movwf	4
  1704  02BA  120A  118A  221C  120A  118A  	fcall	stringdir
  1705  02BF  120A  118A  2253  120A  118A  	fcall	i1_Lcd_Write_Char
  1706  02C4                     i1l1083:
  1707  02C4  3001               	movlw	1
  1708  02C5  07F6               	addwf	i1Lcd_Write_String@i,f
  1709  02C6  1803               	skipnc
  1710  02C7  0AF7               	incf	i1Lcd_Write_String@i+1,f
  1711  02C8  3000               	movlw	0
  1712  02C9  07F7               	addwf	i1Lcd_Write_String@i+1,f
  1713  02CA                     i1l1085:
  1714  02CA  0876               	movf	i1Lcd_Write_String@i,w
  1715  02CB  0775               	addwf	i1Lcd_Write_String@a,w
  1716  02CC  0084               	movwf	4
  1717  02CD  120A  118A  221C  120A  118A  	fcall	stringdir
  1718  02D2  3A00               	xorlw	0
  1719  02D3  1D03               	skipz
  1720  02D4  2AD6               	goto	u44_21
  1721  02D5  2AD7               	goto	u44_20
  1722  02D6                     u44_21:
  1723  02D6  2AB7               	goto	i1l1081
  1724  02D7                     u44_20:
  1725  02D7                     i1l85:
  1726  02D7  0008               	return
  1727  02D8                     __end_ofi1_Lcd_Write_String:
  1728                           
  1729                           	psect	text10
  1730  0253                     __ptext10:	
  1731 ;; *************** function i1_Lcd_Write_Char *****************
  1732 ;; Defined at:
  1733 ;;		line 80 in file "./LCD.h"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  a               1    wreg     unsigned char 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  a               1    4[COMMON] unsigned char 
  1738 ;;  y               1    3[COMMON] unsigned char 
  1739 ;;  temp            1    2[COMMON] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       0       0       0       0
  1750 ;;      Locals:         3       0       0       0       0
  1751 ;;      Temps:          1       0       0       0       0
  1752 ;;      Totals:         4       0       0       0       0
  1753 ;;Total ram usage:        4 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; Hardware stack levels required when called: 1
  1756 ;; This function calls:
  1757 ;;		i1_Lcd_Port
  1758 ;; This function is called by:
  1759 ;;		i1_Lcd_Write_String
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763  0253                     i1_Lcd_Write_Char:	
  1764                           ;psect for function i1_Lcd_Write_Char
  1765                           
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1769                           ;i1Lcd_Write_Char@a stored from wreg
  1770  0253  00F4               	movwf	i1Lcd_Write_Char@a
  1771  0254                     i1l997:
  1772                           
  1773                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  1774  0254  0874               	movf	i1Lcd_Write_Char@a,w
  1775  0255  390F               	andlw	15
  1776  0256  00F1               	movwf	??i1_Lcd_Write_Char
  1777  0257  0871               	movf	??i1_Lcd_Write_Char,w
  1778  0258  00F2               	movwf	i1Lcd_Write_Char@temp
  1779                           
  1780                           ;./LCD.h: 84:    y = a&0xF0;
  1781  0259  0874               	movf	i1Lcd_Write_Char@a,w
  1782  025A  39F0               	andlw	240
  1783  025B  00F1               	movwf	??i1_Lcd_Write_Char
  1784  025C  0871               	movf	??i1_Lcd_Write_Char,w
  1785  025D  00F3               	movwf	i1Lcd_Write_Char@y
  1786  025E                     i1l999:
  1787                           
  1788                           ;./LCD.h: 85:    RC0 = 1;
  1789  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1790  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0260  1407               	bsf	7,0	;volatile
  1792  0261                     i1l1001:
  1793                           
  1794                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  1795  0261  0873               	movf	i1Lcd_Write_Char@y,w
  1796  0262  00F1               	movwf	??i1_Lcd_Write_Char
  1797  0263  3004               	movlw	4
  1798  0264                     u34_25:
  1799  0264  1003               	clrc
  1800  0265  0CF1               	rrf	??i1_Lcd_Write_Char,f
  1801  0266  3EFF               	addlw	-1
  1802  0267  1D03               	skipz
  1803  0268  2A64               	goto	u34_25
  1804  0269  0871               	movf	??i1_Lcd_Write_Char,w
  1805  026A  120A  118A  22D8  120A  118A  	fcall	i1_Lcd_Port
  1806  026F                     i1l1003:
  1807                           
  1808                           ;./LCD.h: 87:    RC2 = 1;
  1809  026F  1283               	bcf	3,5	;RP0=0, select bank0
  1810  0270  1303               	bcf	3,6	;RP1=0, select bank0
  1811  0271  1507               	bsf	7,2	;volatile
  1812  0272                     i1l1005:
  1813                           
  1814                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1815  0272  300D               	movlw	13
  1816  0273  00F1               	movwf	??i1_Lcd_Write_Char
  1817  0274                     u55_27:
  1818  0274  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  1819  0275  2A74               	goto	u55_27
  1820  0276                     i1l1007:
  1821                           
  1822                           ;./LCD.h: 89:    RC2 = 0;
  1823  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0278  1107               	bcf	7,2	;volatile
  1826  0279                     i1l1009:
  1827                           
  1828                           ;./LCD.h: 90:    Lcd_Port(temp);
  1829  0279  0872               	movf	i1Lcd_Write_Char@temp,w
  1830  027A  120A  118A  22D8  120A  118A  	fcall	i1_Lcd_Port
  1831  027F                     i1l1011:
  1832                           
  1833                           ;./LCD.h: 91:    RC2 = 1;
  1834  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0281  1507               	bsf	7,2	;volatile
  1837  0282                     i1l1013:
  1838                           
  1839                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1840  0282  300D               	movlw	13
  1841  0283  00F1               	movwf	??i1_Lcd_Write_Char
  1842  0284                     u56_27:
  1843  0284  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  1844  0285  2A84               	goto	u56_27
  1845  0286                     i1l1015:
  1846                           
  1847                           ;./LCD.h: 93:    RC2 = 0;
  1848  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1850  0288  1107               	bcf	7,2	;volatile
  1851  0289                     i1l79:
  1852  0289  0008               	return
  1853  028A                     __end_ofi1_Lcd_Write_Char:
  1854                           
  1855                           	psect	text11
  1856  0153                     __ptext11:	
  1857 ;; *************** function i1_Lcd_Set_Cursor *****************
  1858 ;; Defined at:
  1859 ;;		line 40 in file "./LCD.h"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;  a               1    wreg     unsigned char 
  1862 ;;  b               1    4[COMMON] unsigned char 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  a               1    7[COMMON] unsigned char 
  1865 ;;  temp            1   10[COMMON] unsigned char 
  1866 ;;  y               1    9[COMMON] unsigned char 
  1867 ;;  z               1    8[COMMON] unsigned char 
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0, pclath, cstack
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1877 ;;      Params:         1       0       0       0       0
  1878 ;;      Locals:         4       0       0       0       0
  1879 ;;      Temps:          2       0       0       0       0
  1880 ;;      Totals:         7       0       0       0       0
  1881 ;;Total ram usage:        7 bytes
  1882 ;; Hardware stack levels used: 1
  1883 ;; Hardware stack levels required when called: 2
  1884 ;; This function calls:
  1885 ;;		i1_Lcd_Cmd
  1886 ;; This function is called by:
  1887 ;;		_tes
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891  0153                     i1_Lcd_Set_Cursor:	
  1892                           ;psect for function i1_Lcd_Set_Cursor
  1893                           
  1894                           
  1895                           ;incstack = 0
  1896                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1897                           ;i1Lcd_Set_Cursor@a stored from wreg
  1898  0153  00F7               	movwf	i1Lcd_Set_Cursor@a
  1899  0154                     i1l1059:
  1900                           
  1901                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1902  0154  0377               	decf	i1Lcd_Set_Cursor@a,w
  1903  0155  1D03               	btfss	3,2
  1904  0156  2958               	goto	u40_21
  1905  0157  2959               	goto	u40_20
  1906  0158                     u40_21:
  1907  0158  297C               	goto	i1l1069
  1908  0159                     u40_20:
  1909  0159                     i1l1061:
  1910                           
  1911                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1912  0159  0874               	movf	i1Lcd_Set_Cursor@b,w
  1913  015A  3E7F               	addlw	127
  1914  015B  00F5               	movwf	??i1_Lcd_Set_Cursor
  1915  015C  0875               	movf	??i1_Lcd_Set_Cursor,w
  1916  015D  00FA               	movwf	i1Lcd_Set_Cursor@temp
  1917                           
  1918                           ;./LCD.h: 46:   z = temp>>4;
  1919  015E  087A               	movf	i1Lcd_Set_Cursor@temp,w
  1920  015F  00F5               	movwf	??i1_Lcd_Set_Cursor
  1921  0160  3004               	movlw	4
  1922  0161                     u41_25:
  1923  0161  1003               	clrc
  1924  0162  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  1925  0163  3EFF               	addlw	-1
  1926  0164  1D03               	skipz
  1927  0165  2961               	goto	u41_25
  1928  0166  0875               	movf	??i1_Lcd_Set_Cursor,w
  1929  0167  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  1930  0168  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  1931  0169  00F8               	movwf	i1Lcd_Set_Cursor@z
  1932  016A                     i1l1063:
  1933                           
  1934                           ;./LCD.h: 47:   y = temp & 0x0F;
  1935  016A  087A               	movf	i1Lcd_Set_Cursor@temp,w
  1936  016B  390F               	andlw	15
  1937  016C  00F5               	movwf	??i1_Lcd_Set_Cursor
  1938  016D  0875               	movf	??i1_Lcd_Set_Cursor,w
  1939  016E  00F9               	movwf	i1Lcd_Set_Cursor@y
  1940  016F                     i1l1065:
  1941                           
  1942                           ;./LCD.h: 48:   Lcd_Cmd(z);
  1943  016F  0878               	movf	i1Lcd_Set_Cursor@z,w
  1944  0170  120A  118A  2336  120A  118A  	fcall	i1_Lcd_Cmd
  1945  0175                     i1l1067:
  1946                           
  1947                           ;./LCD.h: 49:   Lcd_Cmd(y);
  1948  0175  0879               	movf	i1Lcd_Set_Cursor@y,w
  1949  0176  120A  118A  2336  120A  118A  	fcall	i1_Lcd_Cmd
  1950                           
  1951                           ;./LCD.h: 50:  }
  1952  017B  29A4               	goto	i1l73
  1953  017C                     i1l1069:
  1954  017C  3002               	movlw	2
  1955  017D  0677               	xorwf	i1Lcd_Set_Cursor@a,w
  1956  017E  1D03               	btfss	3,2
  1957  017F  2981               	goto	u42_21
  1958  0180  2982               	goto	u42_20
  1959  0181                     u42_21:
  1960  0181  29A4               	goto	i1l73
  1961  0182                     u42_20:
  1962  0182                     i1l1071:
  1963                           
  1964                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1965  0182  0874               	movf	i1Lcd_Set_Cursor@b,w
  1966  0183  3EBF               	addlw	191
  1967  0184  00F5               	movwf	??i1_Lcd_Set_Cursor
  1968  0185  0875               	movf	??i1_Lcd_Set_Cursor,w
  1969  0186  00FA               	movwf	i1Lcd_Set_Cursor@temp
  1970                           
  1971                           ;./LCD.h: 54:   z = temp>>4;
  1972  0187  087A               	movf	i1Lcd_Set_Cursor@temp,w
  1973  0188  00F5               	movwf	??i1_Lcd_Set_Cursor
  1974  0189  3004               	movlw	4
  1975  018A                     u43_25:
  1976  018A  1003               	clrc
  1977  018B  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  1978  018C  3EFF               	addlw	-1
  1979  018D  1D03               	skipz
  1980  018E  298A               	goto	u43_25
  1981  018F  0875               	movf	??i1_Lcd_Set_Cursor,w
  1982  0190  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  1983  0191  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  1984  0192  00F8               	movwf	i1Lcd_Set_Cursor@z
  1985  0193                     i1l1073:
  1986                           
  1987                           ;./LCD.h: 55:   y = temp & 0x0F;
  1988  0193  087A               	movf	i1Lcd_Set_Cursor@temp,w
  1989  0194  390F               	andlw	15
  1990  0195  00F5               	movwf	??i1_Lcd_Set_Cursor
  1991  0196  0875               	movf	??i1_Lcd_Set_Cursor,w
  1992  0197  00F9               	movwf	i1Lcd_Set_Cursor@y
  1993  0198                     i1l1075:
  1994                           
  1995                           ;./LCD.h: 56:   Lcd_Cmd(z);
  1996  0198  0878               	movf	i1Lcd_Set_Cursor@z,w
  1997  0199  120A  118A  2336  120A  118A  	fcall	i1_Lcd_Cmd
  1998  019E                     i1l1077:
  1999                           
  2000                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2001  019E  0879               	movf	i1Lcd_Set_Cursor@y,w
  2002  019F  120A  118A  2336  120A  118A  	fcall	i1_Lcd_Cmd
  2003  01A4                     i1l73:
  2004  01A4  0008               	return
  2005  01A5                     __end_ofi1_Lcd_Set_Cursor:
  2006                           
  2007                           	psect	text12
  2008  035D                     __ptext12:	
  2009 ;; *************** function i1_Lcd_Clear *****************
  2010 ;; Defined at:
  2011 ;;		line 34 in file "./LCD.h"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;		None
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;		None
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2025 ;;      Params:         0       0       0       0       0
  2026 ;;      Locals:         0       0       0       0       0
  2027 ;;      Temps:          0       0       0       0       0
  2028 ;;      Totals:         0       0       0       0       0
  2029 ;;Total ram usage:        0 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 2
  2032 ;; This function calls:
  2033 ;;		i1_Lcd_Cmd
  2034 ;; This function is called by:
  2035 ;;		_tes
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039  035D                     i1_Lcd_Clear:	
  2040                           ;psect for function i1_Lcd_Clear
  2041                           
  2042  035D                     i1l1057:	
  2043                           ;incstack = 0
  2044                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2045                           
  2046                           
  2047                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2048  035D  3000               	movlw	0
  2049  035E  120A  118A  2336  120A  118A  	fcall	i1_Lcd_Cmd
  2050                           
  2051                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2052  0363  3001               	movlw	1
  2053  0364  120A  118A  2336  120A  118A  	fcall	i1_Lcd_Cmd
  2054  0369                     i1l67:
  2055  0369  0008               	return
  2056  036A                     __end_ofi1_Lcd_Clear:
  2057                           
  2058                           	psect	text13
  2059  0336                     __ptext13:	
  2060 ;; *************** function i1_Lcd_Cmd *****************
  2061 ;; Defined at:
  2062 ;;		line 25 in file "./LCD.h"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  a               1    wreg     unsigned char 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  a               1    3[COMMON] unsigned char 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2, status,0, pclath, cstack
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         0       0       0       0       0
  2077 ;;      Locals:         1       0       0       0       0
  2078 ;;      Temps:          2       0       0       0       0
  2079 ;;      Totals:         3       0       0       0       0
  2080 ;;Total ram usage:        3 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 1
  2083 ;; This function calls:
  2084 ;;		i1_Lcd_Port
  2085 ;; This function is called by:
  2086 ;;		i1_Lcd_Clear
  2087 ;;		i1_Lcd_Set_Cursor
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091  0336                     i1_Lcd_Cmd:	
  2092                           ;psect for function i1_Lcd_Cmd
  2093                           
  2094                           
  2095                           ;incstack = 0
  2096                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2097                           ;i1Lcd_Cmd@a stored from wreg
  2098  0336  00F3               	movwf	i1Lcd_Cmd@a
  2099  0337                     i1l987:
  2100                           
  2101                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  2102  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2103  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2104  0339  1007               	bcf	7,0	;volatile
  2105  033A                     i1l989:
  2106                           
  2107                           ;./LCD.h: 28:  Lcd_Port(a);
  2108  033A  0873               	movf	i1Lcd_Cmd@a,w
  2109  033B  120A  118A  22D8  120A  118A  	fcall	i1_Lcd_Port
  2110  0340                     i1l991:
  2111                           
  2112                           ;./LCD.h: 29:  RC2 = 1;
  2113  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0342  1507               	bsf	7,2	;volatile
  2116  0343                     i1l993:
  2117                           
  2118                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2119  0343  3006               	movlw	6
  2120  0344  00F2               	movwf	??i1_Lcd_Cmd+1
  2121  0345  3030               	movlw	48
  2122  0346  00F1               	movwf	??i1_Lcd_Cmd
  2123  0347                     u57_27:
  2124  0347  0BF1               	decfsz	??i1_Lcd_Cmd,f
  2125  0348  2B47               	goto	u57_27
  2126  0349  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  2127  034A  2B47               	goto	u57_27
  2128  034B  0000               	nop
  2129  034C                     i1l995:
  2130                           
  2131                           ;./LCD.h: 31:         RC2 = 0;
  2132  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2133  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2134  034E  1107               	bcf	7,2	;volatile
  2135  034F                     i1l64:
  2136  034F  0008               	return
  2137  0350                     __end_ofi1_Lcd_Cmd:
  2138                           
  2139                           	psect	text14
  2140  02D8                     __ptext14:	
  2141 ;; *************** function i1_Lcd_Port *****************
  2142 ;; Defined at:
  2143 ;;		line 3 in file "./LCD.h"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  a               1    wreg     unsigned char 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  a               1    0[COMMON] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         1       0       0       0       0
  2159 ;;      Temps:          0       0       0       0       0
  2160 ;;      Totals:         1       0       0       0       0
  2161 ;;Total ram usage:        1 bytes
  2162 ;; Hardware stack levels used: 1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		i1_Lcd_Cmd
  2167 ;;		i1_Lcd_Write_Char
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171  02D8                     i1_Lcd_Port:	
  2172                           ;psect for function i1_Lcd_Port
  2173                           
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in i1_Lcd_Port: [wreg]
  2177                           ;i1Lcd_Port@a stored from wreg
  2178  02D8  00F0               	movwf	i1Lcd_Port@a
  2179  02D9                     i1l947:
  2180                           
  2181                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2182  02D9  1C70               	btfss	i1Lcd_Port@a,0
  2183  02DA  2ADC               	goto	u29_21
  2184  02DB  2ADD               	goto	u29_20
  2185  02DC                     u29_21:
  2186  02DC  2AE1               	goto	i1l53
  2187  02DD                     u29_20:
  2188  02DD                     i1l949:
  2189                           
  2190                           ;./LCD.h: 6:   RC4 = 1;
  2191  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2192  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  2193  02DF  1607               	bsf	7,4	;volatile
  2194  02E0  2AE4               	goto	i1l54
  2195  02E1                     i1l53:	
  2196                           ;./LCD.h: 7:  else
  2197                           
  2198                           
  2199                           ;./LCD.h: 8:   RC4 = 0;
  2200  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2201  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2202  02E3  1207               	bcf	7,4	;volatile
  2203  02E4                     i1l54:
  2204                           
  2205                           ;./LCD.h: 10:  if(a & 2)
  2206  02E4  1CF0               	btfss	i1Lcd_Port@a,1
  2207  02E5  2AE7               	goto	u30_21
  2208  02E6  2AE8               	goto	u30_20
  2209  02E7                     u30_21:
  2210  02E7  2AEA               	goto	i1l55
  2211  02E8                     u30_20:
  2212  02E8                     i1l951:
  2213                           
  2214                           ;./LCD.h: 11:   RC5 = 1;
  2215  02E8  1687               	bsf	7,5	;volatile
  2216  02E9  2AEB               	goto	i1l56
  2217  02EA                     i1l55:	
  2218                           ;./LCD.h: 12:  else
  2219                           
  2220                           
  2221                           ;./LCD.h: 13:   RC5 = 0;
  2222  02EA  1287               	bcf	7,5	;volatile
  2223  02EB                     i1l56:
  2224                           
  2225                           ;./LCD.h: 15:  if(a & 4)
  2226  02EB  1D70               	btfss	i1Lcd_Port@a,2
  2227  02EC  2AEE               	goto	u31_21
  2228  02ED  2AEF               	goto	u31_20
  2229  02EE                     u31_21:
  2230  02EE  2AF1               	goto	i1l57
  2231  02EF                     u31_20:
  2232  02EF                     i1l953:
  2233                           
  2234                           ;./LCD.h: 16:   RC6 = 1;
  2235  02EF  1707               	bsf	7,6	;volatile
  2236  02F0  2AF2               	goto	i1l58
  2237  02F1                     i1l57:	
  2238                           ;./LCD.h: 17:  else
  2239                           
  2240                           
  2241                           ;./LCD.h: 18:   RC6 = 0;
  2242  02F1  1307               	bcf	7,6	;volatile
  2243  02F2                     i1l58:
  2244                           
  2245                           ;./LCD.h: 20:  if(a & 8)
  2246  02F2  1DF0               	btfss	i1Lcd_Port@a,3
  2247  02F3  2AF5               	goto	u32_21
  2248  02F4  2AF6               	goto	u32_20
  2249  02F5                     u32_21:
  2250  02F5  2AF8               	goto	i1l59
  2251  02F6                     u32_20:
  2252  02F6                     i1l955:
  2253                           
  2254                           ;./LCD.h: 21:   RC7 = 1;
  2255  02F6  1787               	bsf	7,7	;volatile
  2256  02F7  2AF9               	goto	i1l61
  2257  02F8                     i1l59:	
  2258                           ;./LCD.h: 22:  else
  2259                           
  2260                           
  2261                           ;./LCD.h: 23:   RC7 = 0;
  2262  02F8  1387               	bcf	7,7	;volatile
  2263  02F9                     i1l61:
  2264  02F9  0008               	return
  2265  02FA                     __end_ofi1_Lcd_Port:
  2266  007E                     btemp	set	126	;btemp
  2267  007E                     wtemp0	set	126
  2268                           
  2269                           	psect	config
  2270                           
  2271                           ;Config register CONFIG @ 0x2007
  2272                           ;	Oscillator Selection bits
  2273                           ;	FOSC = HS, HS oscillator
  2274                           ;	Watchdog Timer Enable bit
  2275                           ;	WDTE = OFF, WDT disabled
  2276                           ;	Power-up Timer Enable bit
  2277                           ;	PWRTE = ON, PWRT enabled
  2278                           ;	Brown-out Reset Enable bit
  2279                           ;	BOREN = ON, BOR enabled
  2280                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2281                           ;	LVP = 0x1, unprogrammed default
  2282                           ;	Data EEPROM Memory Code Protection bit
  2283                           ;	CPD = 0x1, unprogrammed default
  2284                           ;	Flash Program Memory Write Enable bits
  2285                           ;	WRT = 0x3, unprogrammed default
  2286                           ;	In-Circuit Debugger Mode bit
  2287                           ;	DEBUG = 0x1, unprogrammed default
  2288                           ;	Flash Program Memory Code Protection bit
  2289                           ;	CP = 0x1, unprogrammed default
  2290  2007                     	org	8199
  2291  2007  3FF2               	dw	16370

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     15      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    _tes->i1_Lcd_Set_Cursor
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1366
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     400
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              5 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     658
                                              8 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              8 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              5 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tes                                                  4     4      0     784
                                              0 BANK0      4     4      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Write_String                                   3     3      0     268
                                              5 COMMON     3     3      0
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Set_Cursor                                     7     6      1     406
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 21 16:24:18 2022

                         pc 0002                          l61 0319                          l53 0303  
                        l54 0304                          l55 030A                          l56 030B  
                        l64 0335                          l57 0311                          l73 0152  
                        l58 0312                          l59 0318                          l67 035C  
                        l76 00FA                          l85 02B2                          l79 01E1  
                        fsr 0004                         l941 0308                         l943 030F  
                       l945 0316                         l937 02FD                         l961 0324  
                       l939 0301                         l963 0327                         l971 01B3  
                       l965 0332                         l957 031D                         l981 01D4  
                       l973 01C1                         l959 031E                         l983 01D7  
                       l975 01C4                         l967 01A8                         l985 01DE  
                       l977 01CB                         l969 01B2                         l979 01CE  
                       _RC0 0038                         _RC2 003A                         _RC4 003C  
                       _RC5 003D                         _RC6 003E                         _RC7 003F  
                       u250 0301                         u251 0300                         u260 0308  
                       u261 0307                         u270 030F                         u350 0103  
                       u271 030E                         u351 0102                         u335 01B6  
                       u280 0316                         u281 0315                         u370 012E  
                       u371 012D                         u507 01DB                         u517 00A4  
                       u365 010B                         u390 02B2                         u470 0073  
                       u527 00B5                         u391 02B1                         u471 0072  
                       u480 007A                         u537 00C6                         u385 0136  
                       u481 0079                         u547 032D                         u497 01C8  
                       _tes 01E2                         fsr0 0004                        l1021 0103  
                      l1031 012E                        l1023 0114                        l1111 0028  
                      l1017 0350                        l1041 009E                        l1033 013F  
                      l1025 0119                        l1121 0031                        l1113 002B  
                      l1043 00A9                        l1035 0144                        l1027 011F  
                      l1019 00FE                        l1051 0290                        l1131 003A  
                      l1123 0032                        l1115 002E                        l1107 0021  
                      l1045 00BA                        l1037 014A                        l1029 0128  
                      l1053 029D                        l1141 0054                        l1133 003B  
                      l1125 0033                        l1117 002F                        l1109 0027  
                      l1047 00C0                        l1039 0098                        l1055 02A5  
                      l1151 0073                        l1143 005A                        l1135 0040  
                      l1127 0034                        l1119 0030                        l1049 028D  
                      l1161 008F                        l1153 0075                        l1145 0064  
                      l1137 0045                        l1129 0037                        l1163 0092  
                      l1155 0076                        l1147 006A                        l1139 004A  
                      l1165 0093                        l1157 007A                        l1149 006D  
                      l1159 0089                        ?_tes 0070                        STR_1 0222  
                      STR_2 0240                        STR_3 024A                        STR_4 0232  
                      i1l61 02F9                        i1l53 02E1                        i1l54 02E4  
                      i1l55 02EA                        i1l56 02EB                        i1l64 034F  
                      i1l57 02F1                        i1l73 01A4                        i1l58 02F2  
                      i1l59 02F8                        i1l67 0369                        i1l85 02D7  
                      i1l79 0289           ?_Lcd_Write_String 0070                        _main 0021  
                      _test 002F                        btemp 007E                        start 0012  
        ??_Lcd_Write_String 0029             __end_of_Lcd_Cmd 0336                       ??_tes 0020  
                     ?_main 0070                       i1l102 01F2                       i1l105 0211  
         ?i1_Lcd_Set_Cursor 0074                       i1l951 02E8                       i1l953 02EF  
                     i1l955 02F6                       i1l947 02D9                       i1l949 02DD  
                     i1l991 0340                       i1l993 0343                       i1l995 034C  
                     i1l987 0337                       i1l989 033A                       i1l997 0254  
                     i1l999 025E                       u30_20 02E8                       u30_21 02E7  
                     u31_20 02EF                       u31_21 02EE                       u32_20 02F6  
                     u40_20 0159                       u32_21 02F5                       u40_21 0158  
                     _TMR1H 000F                       u41_25 0161                       _TMR1L 000E  
                     u42_20 0182                       u42_21 0181                       u34_25 0264  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       u43_25 018A                       u44_20 02D7  
                     u44_21 02D6                       u29_20 02DD                       u45_20 01E6  
                     u29_21 02DC                       u45_21 01E5                       u46_20 01F6  
                     u46_21 01F5                       u55_27 0274                       u56_27 0284  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       u57_27 0347                 ?i1_Lcd_Port 0070  
        ??i1_Lcd_Set_Cursor 0075                       _valor 007B                       pclath 000A  
                     status 0003                       wtemp0 007E            __end_of_Lcd_Init 00FB  
          __end_of_Lcd_Port 031A             __initialization 0015                __end_of_main 0098  
                    ??_main 002F                      i1l1001 0261                      i1l1011 027F  
                    i1l1003 026F                      i1l1013 0282                      i1l1005 0272  
                    i1l1101 0205                      i1l1015 0286                      i1l1007 0276  
                    i1l1103 020B                      i1l1009 0279                      i1l1061 0159  
                    i1l1071 0182                      i1l1063 016A                      i1l1057 035D  
                    i1l1073 0193                      i1l1065 016F                      i1l1081 02B7  
                    i1l1075 0198                      i1l1067 0175                      i1l1059 0154  
                    i1l1083 02C4                      i1l1091 01E2                      i1l1077 019E  
                    i1l1069 017C                      i1l1085 02CA                      i1l1093 01E6  
                    i1l1079 02B4                      i1l1095 01E7                      i1l1097 01F6  
                    i1l1099 01F8           ?i1_Lcd_Write_Char 0070                   ??_Lcd_Cmd 0025  
                    _TMR1IF 0060                ?i1_Lcd_Clear 0070          ??i1_Lcd_Write_Char 0071  
         __end_ofi1_Lcd_Cmd 0350           i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073  
                    saved_w 007E             Lcd_Set_Cursor@a 002B             Lcd_Set_Cursor@b 0028  
           Lcd_Set_Cursor@y 002D             Lcd_Set_Cursor@z 002C     __end_of__initialization 001D  
         __end_of_Lcd_Clear 035D              __pcstackCOMMON 0070              _Lcd_Set_Cursor 00FB  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                  __pbssBANK0 002F  
                __pmaintext 0021                  __pintentry 0004      __end_of_Lcd_Set_Cursor 0153  
              ??i1_Lcd_Port 0070                  ??_Lcd_Init 0028                  ??_Lcd_Port 0024  
                __stringtab 021C              _Lcd_Write_Char 01A5                     _Lcd_Cmd 031A  
        __end_ofi1_Lcd_Port 02FA             ?_Lcd_Set_Cursor 0028                     __ptext1 028A  
                   __ptext2 01A5                     __ptext3 00FB                     __ptext4 0098  
                   __ptext5 0350                     __ptext6 031A                     __ptext7 02FA  
                   __ptext8 01E2                     __ptext9 02B3                   _T1CONbits 0010  
__end_ofi1_Lcd_Write_String 02D8      __end_of_Lcd_Write_Char 01E2        end_of_initialization 001D  
                 Lcd_Port@a 0024                   i1_Lcd_Cmd 0336                   _PORTBbits 0006  
                 _PORTDbits 0008             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 002B  
         Lcd_Write_String@i 0029                   _Lcd_Clear 0350                  ?i1_Lcd_Cmd 0070  
          _Lcd_Write_String 028A         start_initialization 0015                 __end_of_tes 021C  
          i1_Lcd_Set_Cursor 0153                  ?_Lcd_Clear 0070             Lcd_Write_Char@a 0028  
           Lcd_Write_Char@y 0027                 __pbssCOMMON 007B                   ___latbits 0002  
             __pcstackBANK0 0020        i1Lcd_Write_Char@temp 0072                    ?_Lcd_Cmd 0070  
          ??_Lcd_Set_Cursor 0029            i1_Lcd_Write_Char 0253                 ??i1_Lcd_Cmd 0071  
      i1Lcd_Set_Cursor@temp 007A                   __pstrings 021C           interrupt_function 0004  
             ??i1_Lcd_Clear 0074                    _PIE1bits 008C          i1_Lcd_Write_String 02B3  
                  Lcd_Cmd@a 0027                    _PIR1bits 000C                 ??_Lcd_Clear 0028  
       ?i1_Lcd_Write_String 0070                 __stringbase 0221            ??_Lcd_Write_Char 0025  
                  _Lcd_Init 0098                    _Lcd_Port 02FA        ??i1_Lcd_Write_String 0075  
  __end_of_Lcd_Write_String 02B3         __end_ofi1_Lcd_Clear 036A          __end_of__stringtab 0222  
  __end_ofi1_Lcd_Set_Cursor 01A5           i1Lcd_Set_Cursor@a 0077           i1Lcd_Set_Cursor@b 0074  
         i1Lcd_Set_Cursor@y 0079           i1Lcd_Set_Cursor@z 0078                    __ptext10 0253  
                  __ptext11 0153                    __ptext12 035D                    __ptext13 0336  
                  __ptext14 02D8                 i1Lcd_Port@a 0070                 _interrupcao 0031  
       i1Lcd_Write_String@a 0075         i1Lcd_Write_String@i 0076                  _INTCONbits 000B  
        Lcd_Write_Char@temp 0026                    intlevel1 0000    __end_ofi1_Lcd_Write_Char 028A  
               i1_Lcd_Clear 035D                  i1Lcd_Cmd@a 0073                   stringcode 021C  
        Lcd_Set_Cursor@temp 002E                  _OPTION_REG 0081                  i1_Lcd_Port 02D8  
                  stringdir 021C                    stringtab 021C  
