

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 21 16:47:44 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0006                     _PORTBbits	set	6
   184  0010                     _T1CONbits	set	16
   185  0008                     _PORTD	set	8
   186  0007                     _PORTC	set	7
   187  0006                     _PORTB	set	6
   188  0005                     _PORTA	set	5
   189  0008                     _PORTDbits	set	8
   190  000B                     _INTCONbits	set	11
   191  000F                     _TMR1H	set	15
   192  000E                     _TMR1L	set	14
   193  000C                     _PIR1bits	set	12
   194  0060                     _TMR1IF	set	96
   195  003A                     _RC2	set	58
   196  0038                     _RC0	set	56
   197  003F                     _RC7	set	63
   198  003E                     _RC6	set	62
   199  003D                     _RC5	set	61
   200  003C                     _RC4	set	60
   201  008C                     _PIE1bits	set	140
   202  0081                     _OPTION_REG	set	129
   203  0088                     _TRISD	set	136
   204  0087                     _TRISC	set	135
   205  0086                     _TRISB	set	134
   206  0085                     _TRISA	set	133
   207                           
   208                           	psect	strings
   209  0250                     __pstrings:
   210  0250                     stringtab:
   211  0250                     __stringtab:
   212  0250                     stringcode:	
   213                           ;	String table - string pointers are 1 byte each
   214                           
   215  0250                     stringdir:
   216  0250  3002               	movlw	high stringdir
   217  0251  008A               	movwf	10
   218  0252  0804               	movf	4,w
   219  0253  0A84               	incf	4,f
   220  0254  0782               	addwf	2,f
   221  0255                     __stringbase:
   222  0255  3400               	retlw	0
   223  0256                     __end_of__stringtab:
   224  0256                     STR_1:
   225  0256  3449               	retlw	73	;'I'
   226  0257  344E               	retlw	78	;'N'
   227  0258  3454               	retlw	84	;'T'
   228  0259  3445               	retlw	69	;'E'
   229  025A  3452               	retlw	82	;'R'
   230  025B  3452               	retlw	82	;'R'
   231  025C  344F               	retlw	79	;'O'
   232  025D  344D               	retlw	77	;'M'
   233  025E  3450               	retlw	80	;'P'
   234  025F  3449               	retlw	73	;'I'
   235  0260  3444               	retlw	68	;'D'
   236  0261  344F               	retlw	79	;'O'
   237  0262  342E               	retlw	46	;'.'
   238  0263  342E               	retlw	46	;'.'
   239  0264  342E               	retlw	46	;'.'
   240  0265  3400               	retlw	0
   241  0266                     STR_4:
   242  0266  3444               	retlw	68	;'D'
   243  0267  3445               	retlw	69	;'E'
   244  0268  3453               	retlw	83	;'S'
   245  0269  3450               	retlw	80	;'P'
   246  026A  3445               	retlw	69	;'E'
   247  026B  344A               	retlw	74	;'J'
   248  026C  3441               	retlw	65	;'A'
   249  026D  344E               	retlw	78	;'N'
   250  026E  3444               	retlw	68	;'D'
   251  026F  344F               	retlw	79	;'O'
   252  0270  342E               	retlw	46	;'.'
   253  0271  342E               	retlw	46	;'.'
   254  0272  342E               	retlw	46	;'.'
   255  0273  3400               	retlw	0
   256  0274                     STR_2:
   257  0274  3453               	retlw	83	;'S'
   258  0275  3449               	retlw	73	;'I'
   259  0276  3447               	retlw	71	;'G'
   260  0277  344D               	retlw	77	;'M'
   261  0278  3441               	retlw	65	;'A'
   262  0279  3420               	retlw	32	;' '
   263  027A  3444               	retlw	68	;'D'
   264  027B  344F               	retlw	79	;'O'
   265  027C  3447               	retlw	71	;'G'
   266  027D  3400               	retlw	0
   267  027E                     STR_3:
   268  027E  3447               	retlw	71	;'G'
   269  027F  3452               	retlw	82	;'R'
   270  0280  3449               	retlw	73	;'I'
   271  0281  344E               	retlw	78	;'N'
   272  0282  3444               	retlw	68	;'D'
   273  0283  3453               	retlw	83	;'S'
   274  0284  3445               	retlw	69	;'E'
   275  0285  3454               	retlw	84	;'T'
   276  0286  3400               	retlw	0
   277  0274                     
   278                           	psect	cinit
   279  0015                     start_initialization:	
   280                           ; #config settings
   281                           
   282  0015                     __initialization:
   283                           
   284                           ; Clear objects allocated to COMMON
   285  0015  01FB               	clrf	__pbssCOMMON& (0+127)
   286  0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   287                           
   288                           ; Clear objects allocated to BANK0
   289  0017  1283               	bcf	3,5	;RP0=0, select bank0
   290  0018  1303               	bcf	3,6	;RP1=0, select bank0
   291  0019  01AF               	clrf	__pbssBANK0& (0+127)
   292  001A  01B0               	clrf	(__pbssBANK0+1)& (0+127)
   293  001B  01B1               	clrf	(__pbssBANK0+2)& (0+127)
   294  001C  01B2               	clrf	(__pbssBANK0+3)& (0+127)
   295  001D                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298  001D                     __end_of__initialization:
   299  001D  0183               	clrf	3
   300  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303  007B                     __pbssCOMMON:
   304  007B                     _valor:
   305  007B                     	ds	2
   306                           
   307                           	psect	bssBANK0
   308  002F                     __pbssBANK0:
   309  002F                     _test:
   310  002F                     	ds	2
   311  0031                     _interrupcao:
   312  0031                     	ds	2
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:
   316  0070                     ?_Lcd_Port:
   317  0070                     ?_Lcd_Cmd:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_Lcd_Clear:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_Lcd_Init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_Lcd_Write_Char:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_Lcd_Write_String:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_tes:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_main:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?i1_Lcd_Port:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??i1_Lcd_Port:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?i1_Lcd_Cmd:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?i1_Lcd_Clear:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?i1_Lcd_Write_Char:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?i1_Lcd_Write_String:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     i1Lcd_Port@a:	
   357                           ; 1 bytes @ 0x0
   358                           
   359                           
   360                           ; 1 bytes @ 0x0
   361  0070                     	ds	1
   362  0071                     ??i1_Lcd_Cmd:
   363  0071                     ??i1_Lcd_Write_Char:	
   364                           ; 1 bytes @ 0x1
   365                           
   366                           
   367                           ; 1 bytes @ 0x1
   368  0071                     	ds	1
   369  0072                     i1Lcd_Write_Char@temp:
   370                           
   371                           ; 1 bytes @ 0x2
   372  0072                     	ds	1
   373  0073                     i1Lcd_Cmd@a:
   374  0073                     i1Lcd_Write_Char@y:	
   375                           ; 1 bytes @ 0x3
   376                           
   377                           
   378                           ; 1 bytes @ 0x3
   379  0073                     	ds	1
   380  0074                     ??i1_Lcd_Clear:
   381  0074                     ?i1_Lcd_Set_Cursor:	
   382                           ; 1 bytes @ 0x4
   383                           
   384  0074                     i1Lcd_Set_Cursor@b:	
   385                           ; 1 bytes @ 0x4
   386                           
   387  0074                     i1Lcd_Write_Char@a:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 1 bytes @ 0x4
   392  0074                     	ds	1
   393  0075                     ??i1_Lcd_Set_Cursor:
   394  0075                     ??i1_Lcd_Write_String:	
   395                           ; 1 bytes @ 0x5
   396                           
   397  0075                     i1Lcd_Write_String@a:	
   398                           ; 1 bytes @ 0x5
   399                           
   400                           
   401                           ; 1 bytes @ 0x5
   402  0075                     	ds	1
   403  0076                     i1Lcd_Write_String@i:
   404                           
   405                           ; 2 bytes @ 0x6
   406  0076                     	ds	1
   407  0077                     i1Lcd_Set_Cursor@a:
   408                           
   409                           ; 1 bytes @ 0x7
   410  0077                     	ds	1
   411  0078                     i1Lcd_Set_Cursor@z:
   412                           
   413                           ; 1 bytes @ 0x8
   414  0078                     	ds	1
   415  0079                     i1Lcd_Set_Cursor@y:
   416                           
   417                           ; 1 bytes @ 0x9
   418  0079                     	ds	1
   419  007A                     i1Lcd_Set_Cursor@temp:
   420                           
   421                           ; 1 bytes @ 0xA
   422  007A                     	ds	1
   423                           
   424                           	psect	cstackBANK0
   425  0020                     __pcstackBANK0:
   426  0020                     ??_tes:
   427                           
   428                           ; 1 bytes @ 0x0
   429  0020                     	ds	4
   430  0024                     ??_Lcd_Port:
   431  0024                     Lcd_Port@a:	
   432                           ; 1 bytes @ 0x4
   433                           
   434                           
   435                           ; 1 bytes @ 0x4
   436  0024                     	ds	1
   437  0025                     ??_Lcd_Cmd:
   438  0025                     ??_Lcd_Write_Char:	
   439                           ; 1 bytes @ 0x5
   440                           
   441                           
   442                           ; 1 bytes @ 0x5
   443  0025                     	ds	1
   444  0026                     Lcd_Write_Char@temp:
   445                           
   446                           ; 1 bytes @ 0x6
   447  0026                     	ds	1
   448  0027                     Lcd_Cmd@a:
   449  0027                     Lcd_Write_Char@y:	
   450                           ; 1 bytes @ 0x7
   451                           
   452                           
   453                           ; 1 bytes @ 0x7
   454  0027                     	ds	1
   455  0028                     ??_Lcd_Clear:
   456  0028                     ?_Lcd_Set_Cursor:	
   457                           ; 1 bytes @ 0x8
   458                           
   459  0028                     ??_Lcd_Init:	
   460                           ; 1 bytes @ 0x8
   461                           
   462  0028                     Lcd_Set_Cursor@b:	
   463                           ; 1 bytes @ 0x8
   464                           
   465  0028                     Lcd_Write_Char@a:	
   466                           ; 1 bytes @ 0x8
   467                           
   468                           
   469                           ; 1 bytes @ 0x8
   470  0028                     	ds	1
   471  0029                     ??_Lcd_Set_Cursor:
   472  0029                     ??_Lcd_Write_String:	
   473                           ; 1 bytes @ 0x9
   474                           
   475  0029                     Lcd_Write_String@i:	
   476                           ; 1 bytes @ 0x9
   477                           
   478                           
   479                           ; 2 bytes @ 0x9
   480  0029                     	ds	2
   481  002B                     Lcd_Set_Cursor@a:
   482  002B                     Lcd_Write_String@a:	
   483                           ; 1 bytes @ 0xB
   484                           
   485                           
   486                           ; 1 bytes @ 0xB
   487  002B                     	ds	1
   488  002C                     Lcd_Set_Cursor@z:
   489                           
   490                           ; 1 bytes @ 0xC
   491  002C                     	ds	1
   492  002D                     Lcd_Set_Cursor@y:
   493                           
   494                           ; 1 bytes @ 0xD
   495  002D                     	ds	1
   496  002E                     Lcd_Set_Cursor@temp:
   497                           
   498                           ; 1 bytes @ 0xE
   499  002E                     	ds	1
   500  002F                     ??_main:
   501                           
   502                           	psect	maintext
   503  0021                     __pmaintext:	
   504                           ; 1 bytes @ 0xF
   505 ;;
   506 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   507 ;;
   508 ;; *************** function _main *****************
   509 ;; Defined at:
   510 ;;		line 66 in file "newmain.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   519 ;; Tracked objects:
   520 ;;		On entry : B00/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels required when called: 7
   530 ;; This function calls:
   531 ;;		_Lcd_Clear
   532 ;;		_Lcd_Init
   533 ;;		_Lcd_Set_Cursor
   534 ;;		_Lcd_Write_String
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540  0021                     _main:	
   541                           ;psect for function _main
   542                           
   543  0021                     l1119:	
   544                           ;incstack = 0
   545                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   546                           
   547                           
   548                           ;newmain.c: 67:     TRISA = 0b11111111;
   549  0021  30FF               	movlw	255
   550  0022  1683               	bsf	3,5	;RP0=1, select bank1
   551  0023  1303               	bcf	3,6	;RP1=0, select bank1
   552  0024  0085               	movwf	5	;volatile
   553                           
   554                           ;newmain.c: 68:     TRISB = 0b00000011;
   555  0025  3003               	movlw	3
   556  0026  0086               	movwf	6	;volatile
   557  0027                     l1121:
   558                           
   559                           ;newmain.c: 69:     TRISC = 0;
   560  0027  0187               	clrf	7	;volatile
   561  0028                     l1123:
   562                           
   563                           ;newmain.c: 70:     TRISD = 0;
   564  0028  0188               	clrf	8	;volatile
   565                           
   566                           ;newmain.c: 71:     OPTION_REG = 0b00111111;
   567  0029  303F               	movlw	63
   568  002A  0081               	movwf	1	;volatile
   569  002B                     l1125:
   570                           
   571                           ;newmain.c: 72:     PORTA = 0;
   572  002B  1283               	bcf	3,5	;RP0=0, select bank0
   573  002C  1303               	bcf	3,6	;RP1=0, select bank0
   574  002D  0185               	clrf	5	;volatile
   575  002E                     l1127:
   576                           
   577                           ;newmain.c: 73:     PORTB = 0;
   578  002E  0186               	clrf	6	;volatile
   579  002F                     l1129:
   580                           
   581                           ;newmain.c: 74:     PORTC = 0;
   582  002F  0187               	clrf	7	;volatile
   583  0030                     l1131:
   584                           
   585                           ;newmain.c: 75:     PORTD = 0;
   586  0030  0188               	clrf	8	;volatile
   587  0031                     l1133:
   588                           
   589                           ;newmain.c: 77:     INTCONbits.GIE = 1;
   590  0031  178B               	bsf	11,7	;volatile
   591  0032                     l1135:
   592                           
   593                           ;newmain.c: 78:     INTCONbits.PEIE = 1;
   594  0032  170B               	bsf	11,6	;volatile
   595  0033                     l1137:
   596                           
   597                           ;newmain.c: 79:     INTCONbits.INTE=1;
   598  0033  160B               	bsf	11,4	;volatile
   599  0034                     l1139:
   600                           
   601                           ;newmain.c: 82:     PIE1bits.TMR1IE = 1;
   602  0034  1683               	bsf	3,5	;RP0=1, select bank1
   603  0035  1303               	bcf	3,6	;RP1=0, select bank1
   604  0036  140C               	bsf	12,0	;volatile
   605  0037                     l1141:
   606                           
   607                           ;newmain.c: 83:     T1CONbits.TMR1CS = 0 ;
   608  0037  1283               	bcf	3,5	;RP0=0, select bank0
   609  0038  1303               	bcf	3,6	;RP1=0, select bank0
   610  0039  1090               	bcf	16,1	;volatile
   611  003A                     l1143:
   612                           
   613                           ;newmain.c: 84:     T1CONbits.T1CKPS0 = 1;
   614  003A  1610               	bsf	16,4	;volatile
   615  003B                     l1145:
   616                           
   617                           ;newmain.c: 85:     T1CONbits.T1CKPS1 = 1;
   618  003B  1690               	bsf	16,5	;volatile
   619                           
   620                           ;newmain.c: 87:     TMR1L = 0xDC;
   621  003C  30DC               	movlw	220
   622  003D  008E               	movwf	14	;volatile
   623                           
   624                           ;newmain.c: 88:     TMR1H = 0X0B;
   625  003E  300B               	movlw	11
   626  003F  008F               	movwf	15	;volatile
   627  0040                     l1147:
   628                           
   629                           ;newmain.c: 121:     Lcd_Init();
   630  0040  120A  118A  20CC  120A  118A  	fcall	_Lcd_Init
   631  0045                     l1149:
   632                           
   633                           ;newmain.c: 122:     Lcd_Clear();
   634  0045  120A  118A  2384  120A  118A  	fcall	_Lcd_Clear
   635  004A                     l1151:
   636                           
   637                           ;newmain.c: 123:     Lcd_Set_Cursor(1,1);
   638  004A  1283               	bcf	3,5	;RP0=0, select bank0
   639  004B  1303               	bcf	3,6	;RP1=0, select bank0
   640  004C  01A8               	clrf	Lcd_Set_Cursor@b
   641  004D  0AA8               	incf	Lcd_Set_Cursor@b,f
   642  004E  3001               	movlw	1
   643  004F  120A  118A  212F  120A  118A  	fcall	_Lcd_Set_Cursor
   644  0054                     l1153:
   645                           
   646                           ;newmain.c: 124:     Lcd_Write_String("SIGMA DOG");
   647  0054  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   648  0055  120A  118A  22BE  120A  118A  	fcall	_Lcd_Write_String
   649  005A                     l1155:
   650                           
   651                           ;newmain.c: 125:     Lcd_Set_Cursor(2,1);
   652  005A  1283               	bcf	3,5	;RP0=0, select bank0
   653  005B  1303               	bcf	3,6	;RP1=0, select bank0
   654  005C  01A8               	clrf	Lcd_Set_Cursor@b
   655  005D  0AA8               	incf	Lcd_Set_Cursor@b,f
   656  005E  3002               	movlw	2
   657  005F  120A  118A  212F  120A  118A  	fcall	_Lcd_Set_Cursor
   658  0064                     l1157:
   659                           
   660                           ;newmain.c: 126:     Lcd_Write_String("GRINDSET");
   661  0064  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   662  0065  120A  118A  22BE  120A  118A  	fcall	_Lcd_Write_String
   663  006A                     l1159:
   664                           
   665                           ;newmain.c: 127:     PORTDbits.RD5 = 1;
   666  006A  1283               	bcf	3,5	;RP0=0, select bank0
   667  006B  1303               	bcf	3,6	;RP1=0, select bank0
   668  006C  1688               	bsf	8,5	;volatile
   669  006D                     l1161:
   670                           
   671                           ;newmain.c: 129:         if(interrupcao == 1){
   672  006D  1283               	bcf	3,5	;RP0=0, select bank0
   673  006E  1303               	bcf	3,6	;RP1=0, select bank0
   674  006F  0331               	decf	_interrupcao,w
   675  0070  0432               	iorwf	_interrupcao+1,w
   676  0071  1D03               	btfss	3,2
   677  0072  2874               	goto	u491
   678  0073  2875               	goto	u490
   679  0074                     u491:
   680  0074  2877               	goto	l1165
   681  0075                     u490:
   682  0075                     l1163:
   683                           
   684                           ;newmain.c: 130:             interrupcao = 0;
   685  0075  01B1               	clrf	_interrupcao
   686  0076  01B2               	clrf	_interrupcao+1
   687  0077                     l1165:
   688                           
   689                           ;newmain.c: 132:         PORTDbits.RD7 = 0;
   690  0077  1388               	bcf	8,7	;volatile
   691  0078                     l1167:
   692                           
   693                           ;newmain.c: 142:         if(PORTBbits.RB1 == 0){
   694  0078  1886               	btfsc	6,1	;volatile
   695  0079  287B               	goto	u501
   696  007A  287C               	goto	u500
   697  007B                     u501:
   698  007B  286D               	goto	l1161
   699  007C                     u500:
   700  007C                     l1169:
   701                           
   702                           ;newmain.c: 143:             Lcd_Clear();
   703  007C  120A  118A  2384  120A  118A  	fcall	_Lcd_Clear
   704                           
   705                           ;newmain.c: 144:             Lcd_Set_Cursor(1,1);
   706  0081  1283               	bcf	3,5	;RP0=0, select bank0
   707  0082  1303               	bcf	3,6	;RP1=0, select bank0
   708  0083  01A8               	clrf	Lcd_Set_Cursor@b
   709  0084  0AA8               	incf	Lcd_Set_Cursor@b,f
   710  0085  3001               	movlw	1
   711  0086  120A  118A  212F  120A  118A  	fcall	_Lcd_Set_Cursor
   712  008B                     l1171:
   713                           
   714                           ;newmain.c: 145:             Lcd_Write_String("DESPEJANDO...");
   715  008B  3011               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   716  008C  120A  118A  22BE  120A  118A  	fcall	_Lcd_Write_String
   717  0091                     l1173:
   718                           
   719                           ;newmain.c: 146:             PORTDbits.RD7 = 1;
   720  0091  1283               	bcf	3,5	;RP0=0, select bank0
   721  0092  1303               	bcf	3,6	;RP1=0, select bank0
   722  0093  1788               	bsf	8,7	;volatile
   723                           
   724                           ;newmain.c: 147:             while(PORTBbits.RB1 == 0){
   725  0094  289F               	goto	l113
   726  0095                     l1175:
   727                           
   728                           ;newmain.c: 148:                 if(interrupcao == 1){
   729  0095  0331               	decf	_interrupcao,w
   730  0096  0432               	iorwf	_interrupcao+1,w
   731  0097  1D03               	btfss	3,2
   732  0098  289A               	goto	u511
   733  0099  289B               	goto	u510
   734  009A                     u511:
   735  009A  289E               	goto	l115
   736  009B                     u510:
   737  009B                     l1177:
   738                           
   739                           ;newmain.c: 149:                     interrupcao = 0;
   740  009B  01B1               	clrf	_interrupcao
   741  009C  01B2               	clrf	_interrupcao+1
   742  009D  28C9               	goto	l116
   743  009E                     l115:	
   744                           ;newmain.c: 151:                 }
   745                           
   746                           
   747                           ;newmain.c: 152:                 PORTDbits.RD7 = 1;
   748  009E  1788               	bsf	8,7	;volatile
   749  009F                     l113:	
   750                           ;newmain.c: 153:             }
   751                           
   752                           
   753                           ;newmain.c: 147:             while(PORTBbits.RB1 == 0){
   754  009F  1C86               	btfss	6,1	;volatile
   755  00A0  28A2               	goto	u521
   756  00A1  28A3               	goto	u520
   757  00A2                     u521:
   758  00A2  2895               	goto	l1175
   759  00A3                     u520:
   760  00A3                     l1181:
   761                           
   762                           ;newmain.c: 154:             Lcd_Clear();
   763  00A3  120A  118A  2384  120A  118A  	fcall	_Lcd_Clear
   764                           
   765                           ;newmain.c: 155:             Lcd_Set_Cursor(1,1);
   766  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   767  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   768  00AA  01A8               	clrf	Lcd_Set_Cursor@b
   769  00AB  0AA8               	incf	Lcd_Set_Cursor@b,f
   770  00AC  3001               	movlw	1
   771  00AD  120A  118A  212F  120A  118A  	fcall	_Lcd_Set_Cursor
   772  00B2                     l1183:
   773                           
   774                           ;newmain.c: 156:             Lcd_Write_String("SIGMA DOG");
   775  00B2  301F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   776  00B3  120A  118A  22BE  120A  118A  	fcall	_Lcd_Write_String
   777  00B8                     l1185:
   778                           
   779                           ;newmain.c: 157:             Lcd_Set_Cursor(2,1);
   780  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   781  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   782  00BA  01A8               	clrf	Lcd_Set_Cursor@b
   783  00BB  0AA8               	incf	Lcd_Set_Cursor@b,f
   784  00BC  3002               	movlw	2
   785  00BD  120A  118A  212F  120A  118A  	fcall	_Lcd_Set_Cursor
   786                           
   787                           ;newmain.c: 158:             Lcd_Write_String("GRINDSET");
   788  00C2  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   789  00C3  120A  118A  22BE  120A  118A  	fcall	_Lcd_Write_String
   790  00C8  286D               	goto	l1161
   791  00C9                     l116:
   792  00C9  120A  118A  2812   	ljmp	start
   793  00CC                     __end_of_main:
   794                           
   795                           	psect	text1
   796  02BE                     __ptext1:	
   797 ;; *************** function _Lcd_Write_String *****************
   798 ;; Defined at:
   799 ;;		line 96 in file "./LCD.h"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  a               1    wreg     PTR unsigned char 
   802 ;;		 -> STR_6(9), STR_5(10), STR_4(14), STR_3(9), 
   803 ;;		 -> STR_2(10), STR_1(16), 
   804 ;; Auto vars:     Size  Location     Type
   805 ;;  a               1   11[BANK0 ] PTR unsigned char 
   806 ;;		 -> STR_6(9), STR_5(10), STR_4(14), STR_3(9), 
   807 ;;		 -> STR_2(10), STR_1(16), 
   808 ;;  i               2    9[BANK0 ] int 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0       3       0       0       0
   820 ;;      Temps:          0       0       0       0       0
   821 ;;      Totals:         0       3       0       0       0
   822 ;;Total ram usage:        3 bytes
   823 ;; Hardware stack levels used: 1
   824 ;; Hardware stack levels required when called: 6
   825 ;; This function calls:
   826 ;;		_Lcd_Write_Char
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831                           
   832  02BE                     _Lcd_Write_String:	
   833                           ;psect for function _Lcd_Write_String
   834                           
   835                           
   836                           ;incstack = 0
   837                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   838                           ;Lcd_Write_String@a stored from wreg
   839  02BE  1283               	bcf	3,5	;RP0=0, select bank0
   840  02BF  1303               	bcf	3,6	;RP1=0, select bank0
   841  02C0  00AB               	movwf	Lcd_Write_String@a
   842  02C1                     l1061:
   843                           
   844                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
   845  02C1  01A9               	clrf	Lcd_Write_String@i
   846  02C2  01AA               	clrf	Lcd_Write_String@i+1
   847  02C3  2AD9               	goto	l1067
   848  02C4                     l1063:
   849                           
   850                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
   851  02C4  0829               	movf	Lcd_Write_String@i,w
   852  02C5  072B               	addwf	Lcd_Write_String@a,w
   853  02C6  0084               	movwf	4
   854  02C7  120A  118A  2250  120A  118A  	fcall	stringdir
   855  02CC  120A  118A  21D9  120A  118A  	fcall	_Lcd_Write_Char
   856  02D1                     l1065:
   857  02D1  3001               	movlw	1
   858  02D2  1283               	bcf	3,5	;RP0=0, select bank0
   859  02D3  1303               	bcf	3,6	;RP1=0, select bank0
   860  02D4  07A9               	addwf	Lcd_Write_String@i,f
   861  02D5  1803               	skipnc
   862  02D6  0AAA               	incf	Lcd_Write_String@i+1,f
   863  02D7  3000               	movlw	0
   864  02D8  07AA               	addwf	Lcd_Write_String@i+1,f
   865  02D9                     l1067:
   866  02D9  0829               	movf	Lcd_Write_String@i,w
   867  02DA  072B               	addwf	Lcd_Write_String@a,w
   868  02DB  0084               	movwf	4
   869  02DC  120A  118A  2250  120A  118A  	fcall	stringdir
   870  02E1  3A00               	xorlw	0
   871  02E2  1D03               	skipz
   872  02E3  2AE5               	goto	u411
   873  02E4  2AE6               	goto	u410
   874  02E5                     u411:
   875  02E5  2AC4               	goto	l1063
   876  02E6                     u410:
   877  02E6                     l85:
   878  02E6  0008               	return
   879  02E7                     __end_of_Lcd_Write_String:
   880                           
   881                           	psect	text2
   882  01D9                     __ptext2:	
   883 ;; *************** function _Lcd_Write_Char *****************
   884 ;; Defined at:
   885 ;;		line 80 in file "./LCD.h"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  a               1    wreg     unsigned char 
   888 ;; Auto vars:     Size  Location     Type
   889 ;;  a               1    8[BANK0 ] unsigned char 
   890 ;;  y               1    7[BANK0 ] unsigned char 
   891 ;;  temp            1    6[BANK0 ] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, pclath, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   901 ;;      Params:         0       0       0       0       0
   902 ;;      Locals:         0       3       0       0       0
   903 ;;      Temps:          0       1       0       0       0
   904 ;;      Totals:         0       4       0       0       0
   905 ;;Total ram usage:        4 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 5
   908 ;; This function calls:
   909 ;;		_Lcd_Port
   910 ;; This function is called by:
   911 ;;		_Lcd_Write_String
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915  01D9                     _Lcd_Write_Char:	
   916                           ;psect for function _Lcd_Write_Char
   917                           
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   921                           ;Lcd_Write_Char@a stored from wreg
   922  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   923  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   924  01DB  00A8               	movwf	Lcd_Write_Char@a
   925  01DC                     l979:
   926                           
   927                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
   928  01DC  0828               	movf	Lcd_Write_Char@a,w
   929  01DD  390F               	andlw	15
   930  01DE  00A5               	movwf	??_Lcd_Write_Char
   931  01DF  0825               	movf	??_Lcd_Write_Char,w
   932  01E0  00A6               	movwf	Lcd_Write_Char@temp
   933                           
   934                           ;./LCD.h: 84:    y = a&0xF0;
   935  01E1  0828               	movf	Lcd_Write_Char@a,w
   936  01E2  39F0               	andlw	240
   937  01E3  00A5               	movwf	??_Lcd_Write_Char
   938  01E4  0825               	movf	??_Lcd_Write_Char,w
   939  01E5  00A7               	movwf	Lcd_Write_Char@y
   940  01E6                     l981:
   941                           
   942                           ;./LCD.h: 85:    RC0 = 1;
   943  01E6  1407               	bsf	7,0	;volatile
   944  01E7                     l983:
   945                           
   946                           ;./LCD.h: 86:    Lcd_Port(y>>4);
   947  01E7  0827               	movf	Lcd_Write_Char@y,w
   948  01E8  00A5               	movwf	??_Lcd_Write_Char
   949  01E9  3004               	movlw	4
   950  01EA                     u355:
   951  01EA  1003               	clrc
   952  01EB  0CA5               	rrf	??_Lcd_Write_Char,f
   953  01EC  3EFF               	addlw	-1
   954  01ED  1D03               	skipz
   955  01EE  29EA               	goto	u355
   956  01EF  0825               	movf	??_Lcd_Write_Char,w
   957  01F0  120A  118A  232E  120A  118A  	fcall	_Lcd_Port
   958  01F5                     l985:
   959                           
   960                           ;./LCD.h: 87:    RC2 = 1;
   961  01F5  1283               	bcf	3,5	;RP0=0, select bank0
   962  01F6  1303               	bcf	3,6	;RP1=0, select bank0
   963  01F7  1507               	bsf	7,2	;volatile
   964  01F8                     l987:
   965                           
   966                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   967  01F8  300C               	movlw	12
   968  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   969  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   970  01FB  00A5               	movwf	??_Lcd_Write_Char
   971  01FC                     u537:
   972  01FC  0BA5               	decfsz	??_Lcd_Write_Char,f
   973  01FD  29FC               	goto	u537
   974  01FE  0000               	nop
   975  01FF                     l989:
   976                           
   977                           ;./LCD.h: 89:    RC2 = 0;
   978  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   979  0200  1303               	bcf	3,6	;RP1=0, select bank0
   980  0201  1107               	bcf	7,2	;volatile
   981  0202                     l991:
   982                           
   983                           ;./LCD.h: 90:    Lcd_Port(temp);
   984  0202  0826               	movf	Lcd_Write_Char@temp,w
   985  0203  120A  118A  232E  120A  118A  	fcall	_Lcd_Port
   986  0208                     l993:
   987                           
   988                           ;./LCD.h: 91:    RC2 = 1;
   989  0208  1283               	bcf	3,5	;RP0=0, select bank0
   990  0209  1303               	bcf	3,6	;RP1=0, select bank0
   991  020A  1507               	bsf	7,2	;volatile
   992  020B                     l995:
   993                           
   994                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   995  020B  300C               	movlw	12
   996  020C  1283               	bcf	3,5	;RP0=0, select bank0
   997  020D  1303               	bcf	3,6	;RP1=0, select bank0
   998  020E  00A5               	movwf	??_Lcd_Write_Char
   999  020F                     u547:
  1000  020F  0BA5               	decfsz	??_Lcd_Write_Char,f
  1001  0210  2A0F               	goto	u547
  1002  0211  0000               	nop
  1003  0212                     l997:
  1004                           
  1005                           ;./LCD.h: 93:    RC2 = 0;
  1006  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0214  1107               	bcf	7,2	;volatile
  1009  0215                     l79:
  1010  0215  0008               	return
  1011  0216                     __end_of_Lcd_Write_Char:
  1012                           
  1013                           	psect	text3
  1014  012F                     __ptext3:	
  1015 ;; *************** function _Lcd_Set_Cursor *****************
  1016 ;; Defined at:
  1017 ;;		line 40 in file "./LCD.h"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  a               1    wreg     unsigned char 
  1020 ;;  b               1    8[BANK0 ] unsigned char 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  a               1   11[BANK0 ] unsigned char 
  1023 ;;  temp            1   14[BANK0 ] unsigned char 
  1024 ;;  y               1   13[BANK0 ] unsigned char 
  1025 ;;  z               1   12[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       1       0       0       0
  1036 ;;      Locals:         0       4       0       0       0
  1037 ;;      Temps:          0       2       0       0       0
  1038 ;;      Totals:         0       7       0       0       0
  1039 ;;Total ram usage:        7 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 6
  1042 ;; This function calls:
  1043 ;;		_Lcd_Cmd
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049  012F                     _Lcd_Set_Cursor:	
  1050                           ;psect for function _Lcd_Set_Cursor
  1051                           
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1055                           ;Lcd_Set_Cursor@a stored from wreg
  1056  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0131  00AB               	movwf	Lcd_Set_Cursor@a
  1059  0132                     l1031:
  1060                           
  1061                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1062  0132  032B               	decf	Lcd_Set_Cursor@a,w
  1063  0133  1D03               	btfss	3,2
  1064  0134  2936               	goto	u371
  1065  0135  2937               	goto	u370
  1066  0136                     u371:
  1067  0136  295C               	goto	l1041
  1068  0137                     u370:
  1069  0137                     l1033:
  1070                           
  1071                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1072  0137  0828               	movf	Lcd_Set_Cursor@b,w
  1073  0138  3E7F               	addlw	127
  1074  0139  00A9               	movwf	??_Lcd_Set_Cursor
  1075  013A  0829               	movf	??_Lcd_Set_Cursor,w
  1076  013B  00AE               	movwf	Lcd_Set_Cursor@temp
  1077                           
  1078                           ;./LCD.h: 46:   z = temp>>4;
  1079  013C  082E               	movf	Lcd_Set_Cursor@temp,w
  1080  013D  00A9               	movwf	??_Lcd_Set_Cursor
  1081  013E  3004               	movlw	4
  1082  013F                     u385:
  1083  013F  1003               	clrc
  1084  0140  0CA9               	rrf	??_Lcd_Set_Cursor,f
  1085  0141  3EFF               	addlw	-1
  1086  0142  1D03               	skipz
  1087  0143  293F               	goto	u385
  1088  0144  0829               	movf	??_Lcd_Set_Cursor,w
  1089  0145  00AA               	movwf	??_Lcd_Set_Cursor+1
  1090  0146  082A               	movf	??_Lcd_Set_Cursor+1,w
  1091  0147  00AC               	movwf	Lcd_Set_Cursor@z
  1092  0148                     l1035:
  1093                           
  1094                           ;./LCD.h: 47:   y = temp & 0x0F;
  1095  0148  082E               	movf	Lcd_Set_Cursor@temp,w
  1096  0149  390F               	andlw	15
  1097  014A  00A9               	movwf	??_Lcd_Set_Cursor
  1098  014B  0829               	movf	??_Lcd_Set_Cursor,w
  1099  014C  00AD               	movwf	Lcd_Set_Cursor@y
  1100  014D                     l1037:
  1101                           
  1102                           ;./LCD.h: 48:   Lcd_Cmd(z);
  1103  014D  082C               	movf	Lcd_Set_Cursor@z,w
  1104  014E  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1105  0153                     l1039:
  1106                           
  1107                           ;./LCD.h: 49:   Lcd_Cmd(y);
  1108  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0155  082D               	movf	Lcd_Set_Cursor@y,w
  1111  0156  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1112                           
  1113                           ;./LCD.h: 50:  }
  1114  015B  2986               	goto	l73
  1115  015C                     l1041:
  1116  015C  3002               	movlw	2
  1117  015D  062B               	xorwf	Lcd_Set_Cursor@a,w
  1118  015E  1D03               	btfss	3,2
  1119  015F  2961               	goto	u391
  1120  0160  2962               	goto	u390
  1121  0161                     u391:
  1122  0161  2986               	goto	l73
  1123  0162                     u390:
  1124  0162                     l1043:
  1125                           
  1126                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1127  0162  0828               	movf	Lcd_Set_Cursor@b,w
  1128  0163  3EBF               	addlw	191
  1129  0164  00A9               	movwf	??_Lcd_Set_Cursor
  1130  0165  0829               	movf	??_Lcd_Set_Cursor,w
  1131  0166  00AE               	movwf	Lcd_Set_Cursor@temp
  1132                           
  1133                           ;./LCD.h: 54:   z = temp>>4;
  1134  0167  082E               	movf	Lcd_Set_Cursor@temp,w
  1135  0168  00A9               	movwf	??_Lcd_Set_Cursor
  1136  0169  3004               	movlw	4
  1137  016A                     u405:
  1138  016A  1003               	clrc
  1139  016B  0CA9               	rrf	??_Lcd_Set_Cursor,f
  1140  016C  3EFF               	addlw	-1
  1141  016D  1D03               	skipz
  1142  016E  296A               	goto	u405
  1143  016F  0829               	movf	??_Lcd_Set_Cursor,w
  1144  0170  00AA               	movwf	??_Lcd_Set_Cursor+1
  1145  0171  082A               	movf	??_Lcd_Set_Cursor+1,w
  1146  0172  00AC               	movwf	Lcd_Set_Cursor@z
  1147  0173                     l1045:
  1148                           
  1149                           ;./LCD.h: 55:   y = temp & 0x0F;
  1150  0173  082E               	movf	Lcd_Set_Cursor@temp,w
  1151  0174  390F               	andlw	15
  1152  0175  00A9               	movwf	??_Lcd_Set_Cursor
  1153  0176  0829               	movf	??_Lcd_Set_Cursor,w
  1154  0177  00AD               	movwf	Lcd_Set_Cursor@y
  1155  0178                     l1047:
  1156                           
  1157                           ;./LCD.h: 56:   Lcd_Cmd(z);
  1158  0178  082C               	movf	Lcd_Set_Cursor@z,w
  1159  0179  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1160  017E                     l1049:
  1161                           
  1162                           ;./LCD.h: 57:   Lcd_Cmd(y);
  1163  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1164  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1165  0180  082D               	movf	Lcd_Set_Cursor@y,w
  1166  0181  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1167  0186                     l73:
  1168  0186  0008               	return
  1169  0187                     __end_of_Lcd_Set_Cursor:
  1170                           
  1171                           	psect	text4
  1172  00CC                     __ptext4:	
  1173 ;; *************** function _Lcd_Init *****************
  1174 ;; Defined at:
  1175 ;;		line 61 in file "./LCD.h"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0
  1191 ;;      Temps:          0       2       0       0       0
  1192 ;;      Totals:         0       2       0       0       0
  1193 ;;Total ram usage:        2 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; Hardware stack levels required when called: 6
  1196 ;; This function calls:
  1197 ;;		_Lcd_Cmd
  1198 ;;		_Lcd_Port
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204  00CC                     _Lcd_Init:	
  1205                           ;psect for function _Lcd_Init
  1206                           
  1207  00CC                     l1051:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1210                           
  1211                           
  1212                           ;./LCD.h: 63:   Lcd_Port(0x00);
  1213  00CC  3000               	movlw	0
  1214  00CD  120A  118A  232E  120A  118A  	fcall	_Lcd_Port
  1215  00D2                     l1053:
  1216                           
  1217                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1218  00D2  301A               	movlw	26
  1219  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1220  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1221  00D5  00A9               	movwf	??_Lcd_Init+1
  1222  00D6  30F7               	movlw	247
  1223  00D7  00A8               	movwf	??_Lcd_Init
  1224  00D8                     u557:
  1225  00D8  0BA8               	decfsz	??_Lcd_Init,f
  1226  00D9  28D8               	goto	u557
  1227  00DA  0BA9               	decfsz	??_Lcd_Init+1,f
  1228  00DB  28D8               	goto	u557
  1229  00DC  28DD               	nop2
  1230  00DD                     l1055:
  1231                           
  1232                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  1233  00DD  3003               	movlw	3
  1234  00DE  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1235                           
  1236                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1237  00E3  3007               	movlw	7
  1238  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1239  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1240  00E6  00A9               	movwf	??_Lcd_Init+1
  1241  00E7  307C               	movlw	124
  1242  00E8  00A8               	movwf	??_Lcd_Init
  1243  00E9                     u567:
  1244  00E9  0BA8               	decfsz	??_Lcd_Init,f
  1245  00EA  28E9               	goto	u567
  1246  00EB  0BA9               	decfsz	??_Lcd_Init+1,f
  1247  00EC  28E9               	goto	u567
  1248  00ED  0000               	nop
  1249  00EE                     l1057:
  1250                           
  1251                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  1252  00EE  3003               	movlw	3
  1253  00EF  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1254  00F4                     l1059:
  1255                           
  1256                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1257  00F4  300F               	movlw	15
  1258  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1259  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1260  00F7  00A9               	movwf	??_Lcd_Init+1
  1261  00F8  3047               	movlw	71
  1262  00F9  00A8               	movwf	??_Lcd_Init
  1263  00FA                     u577:
  1264  00FA  0BA8               	decfsz	??_Lcd_Init,f
  1265  00FB  28FA               	goto	u577
  1266  00FC  0BA9               	decfsz	??_Lcd_Init+1,f
  1267  00FD  28FA               	goto	u577
  1268                           
  1269                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  1270  00FE  3003               	movlw	3
  1271  00FF  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1272                           
  1273                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  1274  0104  3002               	movlw	2
  1275  0105  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1276                           
  1277                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  1278  010A  3002               	movlw	2
  1279  010B  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1280                           
  1281                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  1282  0110  3008               	movlw	8
  1283  0111  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1284                           
  1285                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  1286  0116  3000               	movlw	0
  1287  0117  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1288                           
  1289                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  1290  011C  300C               	movlw	12
  1291  011D  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1292                           
  1293                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  1294  0122  3000               	movlw	0
  1295  0123  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1296                           
  1297                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  1298  0128  3006               	movlw	6
  1299  0129  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1300  012E                     l76:
  1301  012E  0008               	return
  1302  012F                     __end_of_Lcd_Init:
  1303                           
  1304                           	psect	text5
  1305  0384                     __ptext5:	
  1306 ;; *************** function _Lcd_Clear *****************
  1307 ;; Defined at:
  1308 ;;		line 34 in file "./LCD.h"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          0       0       0       0       0
  1325 ;;      Totals:         0       0       0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 6
  1329 ;; This function calls:
  1330 ;;		_Lcd_Cmd
  1331 ;; This function is called by:
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336  0384                     _Lcd_Clear:	
  1337                           ;psect for function _Lcd_Clear
  1338                           
  1339  0384                     l1029:	
  1340                           ;incstack = 0
  1341                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1342                           
  1343                           
  1344                           ;./LCD.h: 36:  Lcd_Cmd(0);
  1345  0384  3000               	movlw	0
  1346  0385  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1347                           
  1348                           ;./LCD.h: 37:  Lcd_Cmd(1);
  1349  038A  3001               	movlw	1
  1350  038B  120A  118A  234E  120A  118A  	fcall	_Lcd_Cmd
  1351  0390                     l67:
  1352  0390  0008               	return
  1353  0391                     __end_of_Lcd_Clear:
  1354                           
  1355                           	psect	text6
  1356  034E                     __ptext6:	
  1357 ;; *************** function _Lcd_Cmd *****************
  1358 ;; Defined at:
  1359 ;;		line 25 in file "./LCD.h"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  a               1    wreg     unsigned char 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  a               1    7[BANK0 ] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0, pclath, cstack
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       0       0       0       0
  1374 ;;      Locals:         0       1       0       0       0
  1375 ;;      Temps:          0       2       0       0       0
  1376 ;;      Totals:         0       3       0       0       0
  1377 ;;Total ram usage:        3 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 5
  1380 ;; This function calls:
  1381 ;;		_Lcd_Port
  1382 ;; This function is called by:
  1383 ;;		_Lcd_Clear
  1384 ;;		_Lcd_Set_Cursor
  1385 ;;		_Lcd_Init
  1386 ;;		_Lcd_Shift_Right
  1387 ;;		_Lcd_Shift_Left
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391  034E                     _Lcd_Cmd:	
  1392                           ;psect for function _Lcd_Cmd
  1393                           
  1394                           
  1395                           ;incstack = 0
  1396                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1397                           ;Lcd_Cmd@a stored from wreg
  1398  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1399  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0350  00A7               	movwf	Lcd_Cmd@a
  1401  0351                     l969:
  1402                           
  1403                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  1404  0351  1007               	bcf	7,0	;volatile
  1405  0352                     l971:
  1406                           
  1407                           ;./LCD.h: 28:  Lcd_Port(a);
  1408  0352  0827               	movf	Lcd_Cmd@a,w
  1409  0353  120A  118A  232E  120A  118A  	fcall	_Lcd_Port
  1410  0358                     l973:
  1411                           
  1412                           ;./LCD.h: 29:  RC2 = 1;
  1413  0358  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0359  1303               	bcf	3,6	;RP1=0, select bank0
  1415  035A  1507               	bsf	7,2	;volatile
  1416  035B                     l975:
  1417                           
  1418                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1419  035B  3006               	movlw	6
  1420  035C  1283               	bcf	3,5	;RP0=0, select bank0
  1421  035D  1303               	bcf	3,6	;RP1=0, select bank0
  1422  035E  00A6               	movwf	??_Lcd_Cmd+1
  1423  035F  302F               	movlw	47
  1424  0360  00A5               	movwf	??_Lcd_Cmd
  1425  0361                     u587:
  1426  0361  0BA5               	decfsz	??_Lcd_Cmd,f
  1427  0362  2B61               	goto	u587
  1428  0363  0BA6               	decfsz	??_Lcd_Cmd+1,f
  1429  0364  2B61               	goto	u587
  1430  0365  2B66               	nop2
  1431  0366                     l977:
  1432                           
  1433                           ;./LCD.h: 31:         RC2 = 0;
  1434  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0368  1107               	bcf	7,2	;volatile
  1437  0369                     l64:
  1438  0369  0008               	return
  1439  036A                     __end_of_Lcd_Cmd:
  1440                           
  1441                           	psect	text7
  1442  032E                     __ptext7:	
  1443 ;; *************** function _Lcd_Port *****************
  1444 ;; Defined at:
  1445 ;;		line 3 in file "./LCD.h"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  a               1    wreg     unsigned char 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  a               1    4[BANK0 ] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1459 ;;      Params:         0       0       0       0       0
  1460 ;;      Locals:         0       1       0       0       0
  1461 ;;      Temps:          0       0       0       0       0
  1462 ;;      Totals:         0       1       0       0       0
  1463 ;;Total ram usage:        1 bytes
  1464 ;; Hardware stack levels used: 1
  1465 ;; Hardware stack levels required when called: 4
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_Lcd_Cmd
  1470 ;;		_Lcd_Init
  1471 ;;		_Lcd_Write_Char
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475  032E                     _Lcd_Port:	
  1476                           ;psect for function _Lcd_Port
  1477                           
  1478                           
  1479                           ;incstack = 0
  1480                           ; Regs used in _Lcd_Port: [wreg]
  1481                           ;Lcd_Port@a stored from wreg
  1482  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1483  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0330  00A4               	movwf	Lcd_Port@a
  1485  0331                     l949:
  1486                           
  1487                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  1488  0331  1C24               	btfss	Lcd_Port@a,0
  1489  0332  2B34               	goto	u271
  1490  0333  2B35               	goto	u270
  1491  0334                     u271:
  1492  0334  2B37               	goto	l53
  1493  0335                     u270:
  1494  0335                     l951:
  1495                           
  1496                           ;./LCD.h: 6:   RC4 = 1;
  1497  0335  1607               	bsf	7,4	;volatile
  1498  0336  2B38               	goto	l54
  1499  0337                     l53:	
  1500                           ;./LCD.h: 7:  else
  1501                           
  1502                           
  1503                           ;./LCD.h: 8:   RC4 = 0;
  1504  0337  1207               	bcf	7,4	;volatile
  1505  0338                     l54:
  1506                           
  1507                           ;./LCD.h: 10:  if(a & 2)
  1508  0338  1CA4               	btfss	Lcd_Port@a,1
  1509  0339  2B3B               	goto	u281
  1510  033A  2B3C               	goto	u280
  1511  033B                     u281:
  1512  033B  2B3E               	goto	l55
  1513  033C                     u280:
  1514  033C                     l953:
  1515                           
  1516                           ;./LCD.h: 11:   RC5 = 1;
  1517  033C  1687               	bsf	7,5	;volatile
  1518  033D  2B3F               	goto	l56
  1519  033E                     l55:	
  1520                           ;./LCD.h: 12:  else
  1521                           
  1522                           
  1523                           ;./LCD.h: 13:   RC5 = 0;
  1524  033E  1287               	bcf	7,5	;volatile
  1525  033F                     l56:
  1526                           
  1527                           ;./LCD.h: 15:  if(a & 4)
  1528  033F  1D24               	btfss	Lcd_Port@a,2
  1529  0340  2B42               	goto	u291
  1530  0341  2B43               	goto	u290
  1531  0342                     u291:
  1532  0342  2B45               	goto	l57
  1533  0343                     u290:
  1534  0343                     l955:
  1535                           
  1536                           ;./LCD.h: 16:   RC6 = 1;
  1537  0343  1707               	bsf	7,6	;volatile
  1538  0344  2B46               	goto	l58
  1539  0345                     l57:	
  1540                           ;./LCD.h: 17:  else
  1541                           
  1542                           
  1543                           ;./LCD.h: 18:   RC6 = 0;
  1544  0345  1307               	bcf	7,6	;volatile
  1545  0346                     l58:
  1546                           
  1547                           ;./LCD.h: 20:  if(a & 8)
  1548  0346  1DA4               	btfss	Lcd_Port@a,3
  1549  0347  2B49               	goto	u301
  1550  0348  2B4A               	goto	u300
  1551  0349                     u301:
  1552  0349  2B4C               	goto	l59
  1553  034A                     u300:
  1554  034A                     l957:
  1555                           
  1556                           ;./LCD.h: 21:   RC7 = 1;
  1557  034A  1787               	bsf	7,7	;volatile
  1558  034B  2B4D               	goto	l61
  1559  034C                     l59:	
  1560                           ;./LCD.h: 22:  else
  1561                           
  1562                           
  1563                           ;./LCD.h: 23:   RC7 = 0;
  1564  034C  1387               	bcf	7,7	;volatile
  1565  034D                     l61:
  1566  034D  0008               	return
  1567  034E                     __end_of_Lcd_Port:
  1568                           
  1569                           	psect	text8
  1570  0216                     __ptext8:	
  1571 ;; *************** function _tes *****************
  1572 ;; Defined at:
  1573 ;;		line 45 in file "newmain.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  1    wreg      void 
  1580 ;; Registers used:
  1581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       0       0       0       0
  1588 ;;      Locals:         0       0       0       0       0
  1589 ;;      Temps:          0       4       0       0       0
  1590 ;;      Totals:         0       4       0       0       0
  1591 ;;Total ram usage:        4 bytes
  1592 ;; Hardware stack levels used: 1
  1593 ;; Hardware stack levels required when called: 3
  1594 ;; This function calls:
  1595 ;;		i1_Lcd_Clear
  1596 ;;		i1_Lcd_Set_Cursor
  1597 ;;		i1_Lcd_Write_String
  1598 ;; This function is called by:
  1599 ;;		Interrupt level 1
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603  0216                     _tes:	
  1604                           ;psect for function _tes
  1605                           
  1606  0216                     i1l1103:
  1607                           
  1608                           ;newmain.c: 46:     if(TMR1IF){
  1609  0216  1C0C               	btfss	12,0	;volatile
  1610  0217  2A19               	goto	u47_21
  1611  0218  2A1A               	goto	u47_20
  1612  0219                     u47_21:
  1613  0219  2A26               	goto	i1l102
  1614  021A                     u47_20:
  1615  021A                     i1l1105:
  1616                           
  1617                           ;newmain.c: 47:          PIR1bits.TMR1IF = 0;
  1618  021A  100C               	bcf	12,0	;volatile
  1619  021B                     i1l1107:
  1620                           
  1621                           ;newmain.c: 48:          TMR1L = 0xDC;
  1622  021B  30DC               	movlw	220
  1623  021C  008E               	movwf	14	;volatile
  1624                           
  1625                           ;newmain.c: 49:          TMR1H = 0X0B;
  1626  021D  300B               	movlw	11
  1627  021E  008F               	movwf	15	;volatile
  1628                           
  1629                           ;newmain.c: 50:          test++;
  1630  021F  3001               	movlw	1
  1631  0220  07AF               	addwf	_test,f
  1632  0221  1803               	skipnc
  1633  0222  0AB0               	incf	_test+1,f
  1634  0223  3000               	movlw	0
  1635  0224  07B0               	addwf	_test+1,f
  1636                           
  1637                           ;newmain.c: 51:     }
  1638  0225  2A45               	goto	i1l105
  1639  0226                     i1l102:	
  1640                           ;newmain.c: 52:     else if (INTCONbits.INTF)
  1641                           
  1642  0226  1C8B               	btfss	11,1	;volatile
  1643  0227  2A29               	goto	u48_21
  1644  0228  2A2A               	goto	u48_20
  1645  0229                     u48_21:
  1646  0229  2A45               	goto	i1l105
  1647  022A                     u48_20:
  1648  022A                     i1l1109:
  1649                           
  1650                           ;newmain.c: 53:     {;newmain.c: 54:         INTCONbits.INTF = 0;
  1651  022A  108B               	bcf	11,1	;volatile
  1652                           
  1653                           ;newmain.c: 55:         PORTDbits.RD7 = 0;
  1654  022B  1388               	bcf	8,7	;volatile
  1655  022C                     i1l1111:
  1656                           
  1657                           ;newmain.c: 56:         Lcd_Clear();
  1658  022C  120A  118A  2391  120A  118A  	fcall	i1_Lcd_Clear
  1659                           
  1660                           ;newmain.c: 57:         Lcd_Set_Cursor(1,1);
  1661  0231  01F4               	clrf	i1Lcd_Set_Cursor@b
  1662  0232  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  1663  0233  3001               	movlw	1
  1664  0234  120A  118A  2187  120A  118A  	fcall	i1_Lcd_Set_Cursor
  1665  0239                     i1l1113:
  1666                           
  1667                           ;newmain.c: 58:         Lcd_Write_String("INTERROMPIDO...");
  1668  0239  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1669  023A  120A  118A  22E7  120A  118A  	fcall	i1_Lcd_Write_String
  1670  023F                     i1l1115:
  1671                           
  1672                           ;newmain.c: 59:         interrupcao = 1;
  1673  023F  3001               	movlw	1
  1674  0240  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0241  1303               	bcf	3,6	;RP1=0, select bank0
  1676  0242  00B1               	movwf	_interrupcao
  1677  0243  3000               	movlw	0
  1678  0244  00B2               	movwf	_interrupcao+1
  1679  0245                     i1l105:
  1680  0245  0823               	movf	??_tes+3,w
  1681  0246  00FF               	movwf	btemp+1
  1682  0247  0822               	movf	??_tes+2,w
  1683  0248  008A               	movwf	10
  1684  0249  0821               	movf	??_tes+1,w
  1685  024A  0084               	movwf	4
  1686  024B  0E20               	swapf	??_tes,w
  1687  024C  0083               	movwf	3
  1688  024D  0EFE               	swapf	btemp,f
  1689  024E  0E7E               	swapf	btemp,w
  1690  024F  0009               	retfie
  1691  0250                     __end_of_tes:
  1692                           
  1693                           	psect	intentry
  1694  0004                     __pintentry:	
  1695                           ;incstack = 0
  1696                           ; Regs used in _tes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1697                           
  1698  0004                     interrupt_function:
  1699  007E                     saved_w	set	btemp
  1700  0004  00FE               	movwf	btemp
  1701  0005  0E03               	swapf	3,w
  1702  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1704  0008  00A0               	movwf	??_tes
  1705  0009  0804               	movf	4,w
  1706  000A  00A1               	movwf	??_tes+1
  1707  000B  080A               	movf	10,w
  1708  000C  00A2               	movwf	??_tes+2
  1709  000D  087F               	movf	btemp+1,w
  1710  000E  00A3               	movwf	??_tes+3
  1711  000F  120A  118A  2A16   	ljmp	_tes
  1712                           
  1713                           	psect	text9
  1714  02E7                     __ptext9:	
  1715 ;; *************** function i1_Lcd_Write_String *****************
  1716 ;; Defined at:
  1717 ;;		line 96 in file "./LCD.h"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  a               1    wreg     PTR unsigned char 
  1720 ;;		 -> STR_6(9), STR_5(10), STR_4(14), STR_3(9), 
  1721 ;;		 -> STR_2(10), STR_1(16), 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  a               1    5[COMMON] PTR unsigned char 
  1724 ;;		 -> STR_6(9), STR_5(10), STR_4(14), STR_3(9), 
  1725 ;;		 -> STR_2(10), STR_1(16), 
  1726 ;;  i               2    6[COMMON] int 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         3       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0
  1739 ;;      Totals:         3       0       0       0       0
  1740 ;;Total ram usage:        3 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 2
  1743 ;; This function calls:
  1744 ;;		i1_Lcd_Write_Char
  1745 ;; This function is called by:
  1746 ;;		_tes
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750  02E7                     i1_Lcd_Write_String:	
  1751                           ;psect for function i1_Lcd_Write_String
  1752                           
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1756                           ;i1Lcd_Write_String@a stored from wreg
  1757  02E7  00F5               	movwf	i1Lcd_Write_String@a
  1758  02E8                     i1l1091:
  1759                           
  1760                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1761  02E8  01F6               	clrf	i1Lcd_Write_String@i
  1762  02E9  01F7               	clrf	i1Lcd_Write_String@i+1
  1763  02EA  2AFE               	goto	i1l1097
  1764  02EB                     i1l1093:
  1765                           
  1766                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  1767  02EB  0876               	movf	i1Lcd_Write_String@i,w
  1768  02EC  0775               	addwf	i1Lcd_Write_String@a,w
  1769  02ED  0084               	movwf	4
  1770  02EE  120A  118A  2250  120A  118A  	fcall	stringdir
  1771  02F3  120A  118A  2287  120A  118A  	fcall	i1_Lcd_Write_Char
  1772  02F8                     i1l1095:
  1773  02F8  3001               	movlw	1
  1774  02F9  07F6               	addwf	i1Lcd_Write_String@i,f
  1775  02FA  1803               	skipnc
  1776  02FB  0AF7               	incf	i1Lcd_Write_String@i+1,f
  1777  02FC  3000               	movlw	0
  1778  02FD  07F7               	addwf	i1Lcd_Write_String@i+1,f
  1779  02FE                     i1l1097:
  1780  02FE  0876               	movf	i1Lcd_Write_String@i,w
  1781  02FF  0775               	addwf	i1Lcd_Write_String@a,w
  1782  0300  0084               	movwf	4
  1783  0301  120A  118A  2250  120A  118A  	fcall	stringdir
  1784  0306  3A00               	xorlw	0
  1785  0307  1D03               	skipz
  1786  0308  2B0A               	goto	u46_21
  1787  0309  2B0B               	goto	u46_20
  1788  030A                     u46_21:
  1789  030A  2AEB               	goto	i1l1093
  1790  030B                     u46_20:
  1791  030B                     i1l85:
  1792  030B  0008               	return
  1793  030C                     __end_ofi1_Lcd_Write_String:
  1794                           
  1795                           	psect	text10
  1796  0287                     __ptext10:	
  1797 ;; *************** function i1_Lcd_Write_Char *****************
  1798 ;; Defined at:
  1799 ;;		line 80 in file "./LCD.h"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  a               1    wreg     unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  a               1    4[COMMON] unsigned char 
  1804 ;;  y               1    3[COMMON] unsigned char 
  1805 ;;  temp            1    2[COMMON] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         3       0       0       0       0
  1817 ;;      Temps:          1       0       0       0       0
  1818 ;;      Totals:         4       0       0       0       0
  1819 ;;Total ram usage:        4 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 1
  1822 ;; This function calls:
  1823 ;;		i1_Lcd_Port
  1824 ;; This function is called by:
  1825 ;;		i1_Lcd_Write_String
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829  0287                     i1_Lcd_Write_Char:	
  1830                           ;psect for function i1_Lcd_Write_Char
  1831                           
  1832                           
  1833                           ;incstack = 0
  1834                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1835                           ;i1Lcd_Write_Char@a stored from wreg
  1836  0287  00F4               	movwf	i1Lcd_Write_Char@a
  1837  0288                     i1l1009:
  1838                           
  1839                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  1840  0288  0874               	movf	i1Lcd_Write_Char@a,w
  1841  0289  390F               	andlw	15
  1842  028A  00F1               	movwf	??i1_Lcd_Write_Char
  1843  028B  0871               	movf	??i1_Lcd_Write_Char,w
  1844  028C  00F2               	movwf	i1Lcd_Write_Char@temp
  1845                           
  1846                           ;./LCD.h: 84:    y = a&0xF0;
  1847  028D  0874               	movf	i1Lcd_Write_Char@a,w
  1848  028E  39F0               	andlw	240
  1849  028F  00F1               	movwf	??i1_Lcd_Write_Char
  1850  0290  0871               	movf	??i1_Lcd_Write_Char,w
  1851  0291  00F3               	movwf	i1Lcd_Write_Char@y
  1852  0292                     i1l1011:
  1853                           
  1854                           ;./LCD.h: 85:    RC0 = 1;
  1855  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0294  1407               	bsf	7,0	;volatile
  1858  0295                     i1l1013:
  1859                           
  1860                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  1861  0295  0873               	movf	i1Lcd_Write_Char@y,w
  1862  0296  00F1               	movwf	??i1_Lcd_Write_Char
  1863  0297  3004               	movlw	4
  1864  0298                     u36_25:
  1865  0298  1003               	clrc
  1866  0299  0CF1               	rrf	??i1_Lcd_Write_Char,f
  1867  029A  3EFF               	addlw	-1
  1868  029B  1D03               	skipz
  1869  029C  2A98               	goto	u36_25
  1870  029D  0871               	movf	??i1_Lcd_Write_Char,w
  1871  029E  120A  118A  230C  120A  118A  	fcall	i1_Lcd_Port
  1872  02A3                     i1l1015:
  1873                           
  1874                           ;./LCD.h: 87:    RC2 = 1;
  1875  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1876  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1877  02A5  1507               	bsf	7,2	;volatile
  1878  02A6                     i1l1017:
  1879                           
  1880                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1881  02A6  300D               	movlw	13
  1882  02A7  00F1               	movwf	??i1_Lcd_Write_Char
  1883  02A8                     u59_27:
  1884  02A8  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  1885  02A9  2AA8               	goto	u59_27
  1886  02AA                     i1l1019:
  1887                           
  1888                           ;./LCD.h: 89:    RC2 = 0;
  1889  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1890  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1891  02AC  1107               	bcf	7,2	;volatile
  1892  02AD                     i1l1021:
  1893                           
  1894                           ;./LCD.h: 90:    Lcd_Port(temp);
  1895  02AD  0872               	movf	i1Lcd_Write_Char@temp,w
  1896  02AE  120A  118A  230C  120A  118A  	fcall	i1_Lcd_Port
  1897  02B3                     i1l1023:
  1898                           
  1899                           ;./LCD.h: 91:    RC2 = 1;
  1900  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  1901  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  1902  02B5  1507               	bsf	7,2	;volatile
  1903  02B6                     i1l1025:
  1904                           
  1905                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1906  02B6  300D               	movlw	13
  1907  02B7  00F1               	movwf	??i1_Lcd_Write_Char
  1908  02B8                     u60_27:
  1909  02B8  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  1910  02B9  2AB8               	goto	u60_27
  1911  02BA                     i1l1027:
  1912                           
  1913                           ;./LCD.h: 93:    RC2 = 0;
  1914  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1915  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1916  02BC  1107               	bcf	7,2	;volatile
  1917  02BD                     i1l79:
  1918  02BD  0008               	return
  1919  02BE                     __end_ofi1_Lcd_Write_Char:
  1920                           
  1921                           	psect	text11
  1922  0187                     __ptext11:	
  1923 ;; *************** function i1_Lcd_Set_Cursor *****************
  1924 ;; Defined at:
  1925 ;;		line 40 in file "./LCD.h"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  a               1    wreg     unsigned char 
  1928 ;;  b               1    4[COMMON] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  a               1    7[COMMON] unsigned char 
  1931 ;;  temp            1   10[COMMON] unsigned char 
  1932 ;;  y               1    9[COMMON] unsigned char 
  1933 ;;  z               1    8[COMMON] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, pclath, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         1       0       0       0       0
  1944 ;;      Locals:         4       0       0       0       0
  1945 ;;      Temps:          2       0       0       0       0
  1946 ;;      Totals:         7       0       0       0       0
  1947 ;;Total ram usage:        7 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 2
  1950 ;; This function calls:
  1951 ;;		i1_Lcd_Cmd
  1952 ;; This function is called by:
  1953 ;;		_tes
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957  0187                     i1_Lcd_Set_Cursor:	
  1958                           ;psect for function i1_Lcd_Set_Cursor
  1959                           
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1963                           ;i1Lcd_Set_Cursor@a stored from wreg
  1964  0187  00F7               	movwf	i1Lcd_Set_Cursor@a
  1965  0188                     i1l1071:
  1966                           
  1967                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1968  0188  0377               	decf	i1Lcd_Set_Cursor@a,w
  1969  0189  1D03               	btfss	3,2
  1970  018A  298C               	goto	u42_21
  1971  018B  298D               	goto	u42_20
  1972  018C                     u42_21:
  1973  018C  29B0               	goto	i1l1081
  1974  018D                     u42_20:
  1975  018D                     i1l1073:
  1976                           
  1977                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1978  018D  0874               	movf	i1Lcd_Set_Cursor@b,w
  1979  018E  3E7F               	addlw	127
  1980  018F  00F5               	movwf	??i1_Lcd_Set_Cursor
  1981  0190  0875               	movf	??i1_Lcd_Set_Cursor,w
  1982  0191  00FA               	movwf	i1Lcd_Set_Cursor@temp
  1983                           
  1984                           ;./LCD.h: 46:   z = temp>>4;
  1985  0192  087A               	movf	i1Lcd_Set_Cursor@temp,w
  1986  0193  00F5               	movwf	??i1_Lcd_Set_Cursor
  1987  0194  3004               	movlw	4
  1988  0195                     u43_25:
  1989  0195  1003               	clrc
  1990  0196  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  1991  0197  3EFF               	addlw	-1
  1992  0198  1D03               	skipz
  1993  0199  2995               	goto	u43_25
  1994  019A  0875               	movf	??i1_Lcd_Set_Cursor,w
  1995  019B  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  1996  019C  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  1997  019D  00F8               	movwf	i1Lcd_Set_Cursor@z
  1998  019E                     i1l1075:
  1999                           
  2000                           ;./LCD.h: 47:   y = temp & 0x0F;
  2001  019E  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2002  019F  390F               	andlw	15
  2003  01A0  00F5               	movwf	??i1_Lcd_Set_Cursor
  2004  01A1  0875               	movf	??i1_Lcd_Set_Cursor,w
  2005  01A2  00F9               	movwf	i1Lcd_Set_Cursor@y
  2006  01A3                     i1l1077:
  2007                           
  2008                           ;./LCD.h: 48:   Lcd_Cmd(z);
  2009  01A3  0878               	movf	i1Lcd_Set_Cursor@z,w
  2010  01A4  120A  118A  236A  120A  118A  	fcall	i1_Lcd_Cmd
  2011  01A9                     i1l1079:
  2012                           
  2013                           ;./LCD.h: 49:   Lcd_Cmd(y);
  2014  01A9  0879               	movf	i1Lcd_Set_Cursor@y,w
  2015  01AA  120A  118A  236A  120A  118A  	fcall	i1_Lcd_Cmd
  2016                           
  2017                           ;./LCD.h: 50:  }
  2018  01AF  29D8               	goto	i1l73
  2019  01B0                     i1l1081:
  2020  01B0  3002               	movlw	2
  2021  01B1  0677               	xorwf	i1Lcd_Set_Cursor@a,w
  2022  01B2  1D03               	btfss	3,2
  2023  01B3  29B5               	goto	u44_21
  2024  01B4  29B6               	goto	u44_20
  2025  01B5                     u44_21:
  2026  01B5  29D8               	goto	i1l73
  2027  01B6                     u44_20:
  2028  01B6                     i1l1083:
  2029                           
  2030                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  2031  01B6  0874               	movf	i1Lcd_Set_Cursor@b,w
  2032  01B7  3EBF               	addlw	191
  2033  01B8  00F5               	movwf	??i1_Lcd_Set_Cursor
  2034  01B9  0875               	movf	??i1_Lcd_Set_Cursor,w
  2035  01BA  00FA               	movwf	i1Lcd_Set_Cursor@temp
  2036                           
  2037                           ;./LCD.h: 54:   z = temp>>4;
  2038  01BB  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2039  01BC  00F5               	movwf	??i1_Lcd_Set_Cursor
  2040  01BD  3004               	movlw	4
  2041  01BE                     u45_25:
  2042  01BE  1003               	clrc
  2043  01BF  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2044  01C0  3EFF               	addlw	-1
  2045  01C1  1D03               	skipz
  2046  01C2  29BE               	goto	u45_25
  2047  01C3  0875               	movf	??i1_Lcd_Set_Cursor,w
  2048  01C4  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  2049  01C5  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  2050  01C6  00F8               	movwf	i1Lcd_Set_Cursor@z
  2051  01C7                     i1l1085:
  2052                           
  2053                           ;./LCD.h: 55:   y = temp & 0x0F;
  2054  01C7  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2055  01C8  390F               	andlw	15
  2056  01C9  00F5               	movwf	??i1_Lcd_Set_Cursor
  2057  01CA  0875               	movf	??i1_Lcd_Set_Cursor,w
  2058  01CB  00F9               	movwf	i1Lcd_Set_Cursor@y
  2059  01CC                     i1l1087:
  2060                           
  2061                           ;./LCD.h: 56:   Lcd_Cmd(z);
  2062  01CC  0878               	movf	i1Lcd_Set_Cursor@z,w
  2063  01CD  120A  118A  236A  120A  118A  	fcall	i1_Lcd_Cmd
  2064  01D2                     i1l1089:
  2065                           
  2066                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2067  01D2  0879               	movf	i1Lcd_Set_Cursor@y,w
  2068  01D3  120A  118A  236A  120A  118A  	fcall	i1_Lcd_Cmd
  2069  01D8                     i1l73:
  2070  01D8  0008               	return
  2071  01D9                     __end_ofi1_Lcd_Set_Cursor:
  2072                           
  2073                           	psect	text12
  2074  0391                     __ptext12:	
  2075 ;; *************** function i1_Lcd_Clear *****************
  2076 ;; Defined at:
  2077 ;;		line 34 in file "./LCD.h"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, status,2, status,0, pclath, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       0       0       0
  2092 ;;      Locals:         0       0       0       0       0
  2093 ;;      Temps:          0       0       0       0       0
  2094 ;;      Totals:         0       0       0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used: 1
  2097 ;; Hardware stack levels required when called: 2
  2098 ;; This function calls:
  2099 ;;		i1_Lcd_Cmd
  2100 ;; This function is called by:
  2101 ;;		_tes
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105  0391                     i1_Lcd_Clear:	
  2106                           ;psect for function i1_Lcd_Clear
  2107                           
  2108  0391                     i1l1069:	
  2109                           ;incstack = 0
  2110                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2111                           
  2112                           
  2113                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2114  0391  3000               	movlw	0
  2115  0392  120A  118A  236A  120A  118A  	fcall	i1_Lcd_Cmd
  2116                           
  2117                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2118  0397  3001               	movlw	1
  2119  0398  120A  118A  236A  120A  118A  	fcall	i1_Lcd_Cmd
  2120  039D                     i1l67:
  2121  039D  0008               	return
  2122  039E                     __end_ofi1_Lcd_Clear:
  2123                           
  2124                           	psect	text13
  2125  036A                     __ptext13:	
  2126 ;; *************** function i1_Lcd_Cmd *****************
  2127 ;; Defined at:
  2128 ;;		line 25 in file "./LCD.h"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  a               1    wreg     unsigned char 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  a               1    3[COMMON] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0, pclath, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         0       0       0       0       0
  2143 ;;      Locals:         1       0       0       0       0
  2144 ;;      Temps:          2       0       0       0       0
  2145 ;;      Totals:         3       0       0       0       0
  2146 ;;Total ram usage:        3 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 1
  2149 ;; This function calls:
  2150 ;;		i1_Lcd_Port
  2151 ;; This function is called by:
  2152 ;;		i1_Lcd_Clear
  2153 ;;		i1_Lcd_Set_Cursor
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157  036A                     i1_Lcd_Cmd:	
  2158                           ;psect for function i1_Lcd_Cmd
  2159                           
  2160                           
  2161                           ;incstack = 0
  2162                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2163                           ;i1Lcd_Cmd@a stored from wreg
  2164  036A  00F3               	movwf	i1Lcd_Cmd@a
  2165  036B                     i1l999:
  2166                           
  2167                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  2168  036B  1283               	bcf	3,5	;RP0=0, select bank0
  2169  036C  1303               	bcf	3,6	;RP1=0, select bank0
  2170  036D  1007               	bcf	7,0	;volatile
  2171  036E                     i1l1001:
  2172                           
  2173                           ;./LCD.h: 28:  Lcd_Port(a);
  2174  036E  0873               	movf	i1Lcd_Cmd@a,w
  2175  036F  120A  118A  230C  120A  118A  	fcall	i1_Lcd_Port
  2176  0374                     i1l1003:
  2177                           
  2178                           ;./LCD.h: 29:  RC2 = 1;
  2179  0374  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0375  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0376  1507               	bsf	7,2	;volatile
  2182  0377                     i1l1005:
  2183                           
  2184                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2185  0377  3006               	movlw	6
  2186  0378  00F2               	movwf	??i1_Lcd_Cmd+1
  2187  0379  3030               	movlw	48
  2188  037A  00F1               	movwf	??i1_Lcd_Cmd
  2189  037B                     u61_27:
  2190  037B  0BF1               	decfsz	??i1_Lcd_Cmd,f
  2191  037C  2B7B               	goto	u61_27
  2192  037D  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  2193  037E  2B7B               	goto	u61_27
  2194  037F  0000               	nop
  2195  0380                     i1l1007:
  2196                           
  2197                           ;./LCD.h: 31:         RC2 = 0;
  2198  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2199  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2200  0382  1107               	bcf	7,2	;volatile
  2201  0383                     i1l64:
  2202  0383  0008               	return
  2203  0384                     __end_ofi1_Lcd_Cmd:
  2204                           
  2205                           	psect	text14
  2206  030C                     __ptext14:	
  2207 ;; *************** function i1_Lcd_Port *****************
  2208 ;; Defined at:
  2209 ;;		line 3 in file "./LCD.h"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  a               1    wreg     unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  a               1    0[COMMON] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       0       0       0       0
  2224 ;;      Locals:         1       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0
  2226 ;;      Totals:         1       0       0       0       0
  2227 ;;Total ram usage:        1 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		i1_Lcd_Cmd
  2233 ;;		i1_Lcd_Write_Char
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237  030C                     i1_Lcd_Port:	
  2238                           ;psect for function i1_Lcd_Port
  2239                           
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in i1_Lcd_Port: [wreg]
  2243                           ;i1Lcd_Port@a stored from wreg
  2244  030C  00F0               	movwf	i1Lcd_Port@a
  2245  030D                     i1l959:
  2246                           
  2247                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2248  030D  1C70               	btfss	i1Lcd_Port@a,0
  2249  030E  2B10               	goto	u31_21
  2250  030F  2B11               	goto	u31_20
  2251  0310                     u31_21:
  2252  0310  2B15               	goto	i1l53
  2253  0311                     u31_20:
  2254  0311                     i1l961:
  2255                           
  2256                           ;./LCD.h: 6:   RC4 = 1;
  2257  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0313  1607               	bsf	7,4	;volatile
  2260  0314  2B18               	goto	i1l54
  2261  0315                     i1l53:	
  2262                           ;./LCD.h: 7:  else
  2263                           
  2264                           
  2265                           ;./LCD.h: 8:   RC4 = 0;
  2266  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0317  1207               	bcf	7,4	;volatile
  2269  0318                     i1l54:
  2270                           
  2271                           ;./LCD.h: 10:  if(a & 2)
  2272  0318  1CF0               	btfss	i1Lcd_Port@a,1
  2273  0319  2B1B               	goto	u32_21
  2274  031A  2B1C               	goto	u32_20
  2275  031B                     u32_21:
  2276  031B  2B1E               	goto	i1l55
  2277  031C                     u32_20:
  2278  031C                     i1l963:
  2279                           
  2280                           ;./LCD.h: 11:   RC5 = 1;
  2281  031C  1687               	bsf	7,5	;volatile
  2282  031D  2B1F               	goto	i1l56
  2283  031E                     i1l55:	
  2284                           ;./LCD.h: 12:  else
  2285                           
  2286                           
  2287                           ;./LCD.h: 13:   RC5 = 0;
  2288  031E  1287               	bcf	7,5	;volatile
  2289  031F                     i1l56:
  2290                           
  2291                           ;./LCD.h: 15:  if(a & 4)
  2292  031F  1D70               	btfss	i1Lcd_Port@a,2
  2293  0320  2B22               	goto	u33_21
  2294  0321  2B23               	goto	u33_20
  2295  0322                     u33_21:
  2296  0322  2B25               	goto	i1l57
  2297  0323                     u33_20:
  2298  0323                     i1l965:
  2299                           
  2300                           ;./LCD.h: 16:   RC6 = 1;
  2301  0323  1707               	bsf	7,6	;volatile
  2302  0324  2B26               	goto	i1l58
  2303  0325                     i1l57:	
  2304                           ;./LCD.h: 17:  else
  2305                           
  2306                           
  2307                           ;./LCD.h: 18:   RC6 = 0;
  2308  0325  1307               	bcf	7,6	;volatile
  2309  0326                     i1l58:
  2310                           
  2311                           ;./LCD.h: 20:  if(a & 8)
  2312  0326  1DF0               	btfss	i1Lcd_Port@a,3
  2313  0327  2B29               	goto	u34_21
  2314  0328  2B2A               	goto	u34_20
  2315  0329                     u34_21:
  2316  0329  2B2C               	goto	i1l59
  2317  032A                     u34_20:
  2318  032A                     i1l967:
  2319                           
  2320                           ;./LCD.h: 21:   RC7 = 1;
  2321  032A  1787               	bsf	7,7	;volatile
  2322  032B  2B2D               	goto	i1l61
  2323  032C                     i1l59:	
  2324                           ;./LCD.h: 22:  else
  2325                           
  2326                           
  2327                           ;./LCD.h: 23:   RC7 = 0;
  2328  032C  1387               	bcf	7,7	;volatile
  2329  032D                     i1l61:
  2330  032D  0008               	return
  2331  032E                     __end_ofi1_Lcd_Port:
  2332  007E                     btemp	set	126	;btemp
  2333  007E                     wtemp0	set	126
  2334                           
  2335                           	psect	config
  2336                           
  2337                           ;Config register CONFIG @ 0x2007
  2338                           ;	Oscillator Selection bits
  2339                           ;	FOSC = HS, HS oscillator
  2340                           ;	Watchdog Timer Enable bit
  2341                           ;	WDTE = OFF, WDT disabled
  2342                           ;	Power-up Timer Enable bit
  2343                           ;	PWRTE = ON, PWRT enabled
  2344                           ;	Brown-out Reset Enable bit
  2345                           ;	BOREN = ON, BOR enabled
  2346                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2347                           ;	LVP = 0x1, unprogrammed default
  2348                           ;	Data EEPROM Memory Code Protection bit
  2349                           ;	CPD = 0x1, unprogrammed default
  2350                           ;	Flash Program Memory Write Enable bits
  2351                           ;	WRT = 0x3, unprogrammed default
  2352                           ;	In-Circuit Debugger Mode bit
  2353                           ;	DEBUG = 0x1, unprogrammed default
  2354                           ;	Flash Program Memory Code Protection bit
  2355                           ;	CP = 0x1, unprogrammed default
  2356  2007                     	org	8199
  2357  2007  3FF2               	dw	16370

Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     15      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_6(CODE[9]), STR_5(CODE[10]), STR_4(CODE[14]), STR_3(CODE[9]), 
		 -> STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    _tes->i1_Lcd_Set_Cursor
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1584
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     466
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              5 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     810
                                              8 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              8 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              5 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tes                                                  4     4      0     784
                                              0 BANK0      4     4      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Write_String                                   3     3      0     268
                                              5 COMMON     3     3      0
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Set_Cursor                                     7     6      1     406
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 21 16:47:44 2022

                         pc 0002                          l61 034D                          l53 0337  
                        l54 0338                          l55 033E                          l56 033F  
                        l64 0369                          l57 0345                          l73 0186  
                        l58 0346                          l59 034C                          l67 0390  
                        l76 012E                          l85 02E6                          l79 0215  
                        fsr 0004                         l113 009F                         l115 009E  
                       l116 00C9                         l951 0335                         l953 033C  
                       l955 0343                         l971 0352                         l957 034A  
                       l949 0331                         l973 0358                         l981 01E6  
                       l975 035B                         l991 0202                         l983 01E7  
                       l977 0366                         l969 0351                         l993 0208  
                       l985 01F5                         l995 020B                         l987 01F8  
                       l979 01DC                         l997 0212                         l989 01FF  
                       _RC0 0038                         _RC2 003A                         _RC4 003C  
                       _RC5 003D                         _RC6 003E                         _RC7 003F  
                       u300 034A                         u301 0349                         u410 02E6  
                       u411 02E5                         u500 007C                         u405 016A  
                       u501 007B                         u270 0335                         u510 009B  
                       u271 0334                         u511 009A                         u280 033C  
                       u520 00A3                         u281 033B                         u521 00A2  
                       u290 0343                         u370 0137                         u291 0342  
                       u371 0136                         u355 01EA                         u390 0162  
                       u391 0161                         u385 013F                         u537 01FC  
                       u490 0075                         u547 020F                         u491 0074  
                       u557 00D8                         u567 00E9                         u577 00FA  
                       u587 0361                         _tes 0216                         fsr0 0004  
                      l1031 0132                        l1033 0137                        l1041 015C  
                      l1121 0027                        l1051 00CC                        l1043 0162  
                      l1035 0148                        l1131 0030                        l1123 0028  
                      l1029 0384                        l1053 00D2                        l1045 0173  
                      l1037 014D                        l1061 02C1                        l1141 0037  
                      l1133 0031                        l1125 002B                        l1055 00DD  
                      l1047 0178                        l1039 0153                        l1063 02C4  
                      l1151 004A                        l1143 003A                        l1135 0032  
                      l1127 002E                        l1119 0021                        l1057 00EE  
                      l1049 017E                        l1065 02D1                        l1161 006D  
                      l1153 0054                        l1145 003B                        l1137 0033  
                      l1129 002F                        l1059 00F4                        l1067 02D9  
                      l1171 008B                        l1163 0075                        l1155 005A  
                      l1147 0040                        l1139 0034                        l1181 00A3  
                      l1173 0091                        l1165 0077                        l1157 0064  
                      l1149 0045                        l1183 00B2                        l1175 0095  
                      l1167 0078                        l1159 006A                        l1185 00B8  
                      l1177 009B                        l1169 007C                        ?_tes 0070  
                      STR_1 0256                        STR_2 0274                        STR_3 027E  
                      STR_4 0266                        STR_5 0274                        STR_6 027E  
                      i1l61 032D                        i1l53 0315                        i1l54 0318  
                      i1l55 031E                        i1l56 031F                        i1l64 0383  
                      i1l57 0325                        i1l73 01D8                        i1l58 0326  
                      i1l59 032C                        i1l67 039D                        i1l85 030B  
                      i1l79 02BD           ?_Lcd_Write_String 0070                        _main 0021  
                      _test 002F                        btemp 007E                        start 0012  
        ??_Lcd_Write_String 0029             __end_of_Lcd_Cmd 036A                       ??_tes 0020  
                     ?_main 0070                       i1l102 0226                       i1l105 0245  
         ?i1_Lcd_Set_Cursor 0074                       i1l961 0311                       i1l963 031C  
                     i1l965 0323                       i1l967 032A                       i1l959 030D  
                     i1l999 036B                       u31_20 0311                       u31_21 0310  
                     u32_20 031C                       u32_21 031B                       u33_20 0323  
                     u33_21 0322                       _TMR1H 000F                       _TMR1L 000E  
                     u34_20 032A                       u42_20 018D                       u34_21 0329  
                     u42_21 018C                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       u43_25 0195  
                     u44_20 01B6                       u44_21 01B5                       u36_25 0298  
                     u60_27 02B8                       u45_25 01BE                       u61_27 037B  
                     u46_20 030B                       u46_21 030A                       u47_20 021A  
                     u47_21 0219                       u48_20 022A                       u48_21 0229  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       u59_27 02A8                 ?i1_Lcd_Port 0070  
        ??i1_Lcd_Set_Cursor 0075                       _valor 007B                       pclath 000A  
                     status 0003                       wtemp0 007E            __end_of_Lcd_Init 012F  
          __end_of_Lcd_Port 034E             __initialization 0015                __end_of_main 00CC  
                    ??_main 002F                      i1l1001 036E                      i1l1003 0374  
                    i1l1011 0292                      i1l1005 0377                      i1l1021 02AD  
                    i1l1013 0295                      i1l1007 0380                      i1l1023 02B3  
                    i1l1015 02A3                      i1l1111 022C                      i1l1103 0216  
                    i1l1025 02B6                      i1l1017 02A6                      i1l1009 0288  
                    i1l1113 0239                      i1l1105 021A                      i1l1027 02BA  
                    i1l1019 02AA                      i1l1115 023F                      i1l1107 021B  
                    i1l1109 022A                      i1l1071 0188                      i1l1073 018D  
                    i1l1081 01B0                      i1l1083 01B6                      i1l1075 019E  
                    i1l1091 02E8                      i1l1069 0391                      i1l1085 01C7  
                    i1l1077 01A3                      i1l1093 02EB                      i1l1087 01CC  
                    i1l1079 01A9                      i1l1095 02F8                      i1l1089 01D2  
                    i1l1097 02FE           ?i1_Lcd_Write_Char 0070                   ??_Lcd_Cmd 0025  
                    _TMR1IF 0060                ?i1_Lcd_Clear 0070          ??i1_Lcd_Write_Char 0071  
         __end_ofi1_Lcd_Cmd 0384           i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073  
                    saved_w 007E             Lcd_Set_Cursor@a 002B             Lcd_Set_Cursor@b 0028  
           Lcd_Set_Cursor@y 002D             Lcd_Set_Cursor@z 002C     __end_of__initialization 001D  
         __end_of_Lcd_Clear 0391              __pcstackCOMMON 0070              _Lcd_Set_Cursor 012F  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                  __pbssBANK0 002F  
                __pmaintext 0021                  __pintentry 0004      __end_of_Lcd_Set_Cursor 0187  
              ??i1_Lcd_Port 0070                  ??_Lcd_Init 0028                  ??_Lcd_Port 0024  
                __stringtab 0250              _Lcd_Write_Char 01D9                     _Lcd_Cmd 034E  
        __end_ofi1_Lcd_Port 032E             ?_Lcd_Set_Cursor 0028                     __ptext1 02BE  
                   __ptext2 01D9                     __ptext3 012F                     __ptext4 00CC  
                   __ptext5 0384                     __ptext6 034E                     __ptext7 032E  
                   __ptext8 0216                     __ptext9 02E7                   _T1CONbits 0010  
__end_ofi1_Lcd_Write_String 030C      __end_of_Lcd_Write_Char 0216        end_of_initialization 001D  
                 Lcd_Port@a 0024                   i1_Lcd_Cmd 036A                   _PORTBbits 0006  
                 _PORTDbits 0008             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 002B  
         Lcd_Write_String@i 0029                   _Lcd_Clear 0384                  ?i1_Lcd_Cmd 0070  
          _Lcd_Write_String 02BE         start_initialization 0015                 __end_of_tes 0250  
          i1_Lcd_Set_Cursor 0187                  ?_Lcd_Clear 0070             Lcd_Write_Char@a 0028  
           Lcd_Write_Char@y 0027                 __pbssCOMMON 007B                   ___latbits 0002  
             __pcstackBANK0 0020        i1Lcd_Write_Char@temp 0072                    ?_Lcd_Cmd 0070  
          ??_Lcd_Set_Cursor 0029            i1_Lcd_Write_Char 0287                 ??i1_Lcd_Cmd 0071  
      i1Lcd_Set_Cursor@temp 007A                   __pstrings 0250           interrupt_function 0004  
             ??i1_Lcd_Clear 0074                    _PIE1bits 008C          i1_Lcd_Write_String 02E7  
                  Lcd_Cmd@a 0027                    _PIR1bits 000C                 ??_Lcd_Clear 0028  
       ?i1_Lcd_Write_String 0070                 __stringbase 0255            ??_Lcd_Write_Char 0025  
                  _Lcd_Init 00CC                    _Lcd_Port 032E        ??i1_Lcd_Write_String 0075  
  __end_of_Lcd_Write_String 02E7         __end_ofi1_Lcd_Clear 039E          __end_of__stringtab 0256  
  __end_ofi1_Lcd_Set_Cursor 01D9           i1Lcd_Set_Cursor@a 0077           i1Lcd_Set_Cursor@b 0074  
         i1Lcd_Set_Cursor@y 0079           i1Lcd_Set_Cursor@z 0078                    __ptext10 0287  
                  __ptext11 0187                    __ptext12 0391                    __ptext13 036A  
                  __ptext14 030C                 i1Lcd_Port@a 0070                 _interrupcao 0031  
       i1Lcd_Write_String@a 0075         i1Lcd_Write_String@i 0076                  _INTCONbits 000B  
        Lcd_Write_Char@temp 0026                    intlevel1 0000    __end_ofi1_Lcd_Write_Char 02BE  
               i1_Lcd_Clear 0391                  i1Lcd_Cmd@a 0073                   stringcode 0250  
        Lcd_Set_Cursor@temp 002E                  _OPTION_REG 0081                  i1_Lcd_Port 030C  
                  stringdir 0250                    stringtab 0250  
