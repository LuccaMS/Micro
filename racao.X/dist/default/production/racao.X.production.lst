

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Jul 22 00:12:17 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0006                     _PORTBbits	set	6
   186     0008                     _PORTD	set	8
   187     0007                     _PORTC	set	7
   188     0006                     _PORTB	set	6
   189     0005                     _PORTA	set	5
   190     001E                     _ADRESH	set	30
   191     001F                     _ADCON0bits	set	31
   192     0008                     _PORTDbits	set	8
   193     000B                     _INTCONbits	set	11
   194     0010                     _T1CONbits	set	16
   195     000F                     _TMR1H	set	15
   196     000E                     _TMR1L	set	14
   197     000C                     _PIR1bits	set	12
   198     0060                     _TMR1IF	set	96
   199     003A                     _RC2	set	58
   200     0038                     _RC0	set	56
   201     003F                     _RC7	set	63
   202     003E                     _RC6	set	62
   203     003D                     _RC5	set	61
   204     003C                     _RC4	set	60
   205     009E                     _ADRESL	set	158
   206     009F                     _ADCON1bits	set	159
   207     008C                     _PIE1bits	set	140
   208     0081                     _OPTION_REG	set	129
   209     0088                     _TRISD	set	136
   210     0087                     _TRISC	set	135
   211     0086                     _TRISB	set	134
   212     0085                     _TRISA	set	133
   213                           
   214                           	psect	strings
   215     020A                     __pstrings:
   216     020A                     stringtab:
   217     020A                     __stringtab:
   218     020A                     stringcode:	
   219                           ;	String table - string pointers are 1 byte each
   220                           
   221     020A                     stringdir:
   222     020A  3002               	movlw	high stringdir
   223     020B  008A               	movwf	10
   224     020C  0804               	movf	4,w
   225     020D  0A84               	incf	4,f
   226     020E  0782               	addwf	2,f
   227     020F                     __stringbase:
   228     020F  3400               	retlw	0
   229     0210                     __end_of__stringtab:
   230     0210                     STR_9:
   231     0210  3445               	retlw	69	;'E'
   232     0211  3453               	retlw	83	;'S'
   233     0212  3454               	retlw	84	;'T'
   234     0213  344F               	retlw	79	;'O'
   235     0214  3451               	retlw	81	;'Q'
   236     0215  3455               	retlw	85	;'U'
   237     0216  3445               	retlw	69	;'E'
   238     0217  3420               	retlw	32	;' '
   239     0218  3445               	retlw	69	;'E'
   240     0219  344D               	retlw	77	;'M'
   241     021A  3420               	retlw	32	;' '
   242     021B  344E               	retlw	78	;'N'
   243     021C  3449               	retlw	73	;'I'
   244     021D  3456               	retlw	86	;'V'
   245     021E  3445               	retlw	69	;'E'
   246     021F  344C               	retlw	76	;'L'
   247     0220  3400               	retlw	0
   248     0221                     STR_6:
   249     0221  3452               	retlw	82	;'R'
   250     0222  3441               	retlw	65	;'A'
   251     0223  3443               	retlw	67	;'C'
   252     0224  3441               	retlw	65	;'A'
   253     0225  344F               	retlw	79	;'O'
   254     0226  3420               	retlw	32	;' '
   255     0227  3443               	retlw	67	;'C'
   256     0228  344F               	retlw	79	;'O'
   257     0229  344C               	retlw	76	;'L'
   258     022A  344F               	retlw	79	;'O'
   259     022B  3443               	retlw	67	;'C'
   260     022C  3441               	retlw	65	;'A'
   261     022D  3444               	retlw	68	;'D'
   262     022E  3441               	retlw	65	;'A'
   263     022F  342E               	retlw	46	;'.'
   264     0230  3400               	retlw	0
   265     0231                     STR_5:
   266     0231  3444               	retlw	68	;'D'
   267     0232  3445               	retlw	69	;'E'
   268     0233  3453               	retlw	83	;'S'
   269     0234  3450               	retlw	80	;'P'
   270     0235  3445               	retlw	69	;'E'
   271     0236  344A               	retlw	74	;'J'
   272     0237  3441               	retlw	65	;'A'
   273     0238  344E               	retlw	78	;'N'
   274     0239  3444               	retlw	68	;'D'
   275     023A  344F               	retlw	79	;'O'
   276     023B  342E               	retlw	46	;'.'
   277     023C  342E               	retlw	46	;'.'
   278     023D  342E               	retlw	46	;'.'
   279     023E  3400               	retlw	0
   280     023F                     STR_1:
   281     023F  3446               	retlw	70	;'F'
   282     0240  3455               	retlw	85	;'U'
   283     0241  344E               	retlw	78	;'N'
   284     0242  3443               	retlw	67	;'C'
   285     0243  3449               	retlw	73	;'I'
   286     0244  344F               	retlw	79	;'O'
   287     0245  344E               	retlw	78	;'N'
   288     0246  3441               	retlw	65	;'A'
   289     0247  344D               	retlw	77	;'M'
   290     0248  3445               	retlw	69	;'E'
   291     0249  344E               	retlw	78	;'N'
   292     024A  3454               	retlw	84	;'T'
   293     024B  344F               	retlw	79	;'O'
   294     024C  3400               	retlw	0
   295     024D                     STR_2:
   296     024D  3449               	retlw	73	;'I'
   297     024E  344E               	retlw	78	;'N'
   298     024F  3454               	retlw	84	;'T'
   299     0250  3445               	retlw	69	;'E'
   300     0251  3452               	retlw	82	;'R'
   301     0252  3452               	retlw	82	;'R'
   302     0253  344F               	retlw	79	;'O'
   303     0254  344D               	retlw	77	;'M'
   304     0255  3450               	retlw	80	;'P'
   305     0256  3449               	retlw	73	;'I'
   306     0257  3444               	retlw	68	;'D'
   307     0258  344F               	retlw	79	;'O'
   308     0259  3400               	retlw	0
   309     025A                     STR_3:
   310     025A  3453               	retlw	83	;'S'
   311     025B  3449               	retlw	73	;'I'
   312     025C  3447               	retlw	71	;'G'
   313     025D  344D               	retlw	77	;'M'
   314     025E  3441               	retlw	65	;'A'
   315     025F  3420               	retlw	32	;' '
   316     0260  3444               	retlw	68	;'D'
   317     0261  344F               	retlw	79	;'O'
   318     0262  3447               	retlw	71	;'G'
   319     0263  3400               	retlw	0
   320     0264                     STR_10:
   321     0264  3442               	retlw	66	;'B'
   322     0265  3441               	retlw	65	;'A'
   323     0266  3449               	retlw	73	;'I'
   324     0267  3458               	retlw	88	;'X'
   325     0268  344F               	retlw	79	;'O'
   326     0269  342E               	retlw	46	;'.'
   327     026A  342E               	retlw	46	;'.'
   328     026B  342E               	retlw	46	;'.'
   329     026C  3400               	retlw	0
   330     026D                     STR_4:
   331     026D  3447               	retlw	71	;'G'
   332     026E  3452               	retlw	82	;'R'
   333     026F  3449               	retlw	73	;'I'
   334     0270  344E               	retlw	78	;'N'
   335     0271  3444               	retlw	68	;'D'
   336     0272  3453               	retlw	83	;'S'
   337     0273  3445               	retlw	69	;'E'
   338     0274  3454               	retlw	84	;'T'
   339     0275  3400               	retlw	0
   340     0231                     
   341                           	psect	cinit
   342     0013                     start_initialization:	
   343                           ; #config settings
   344                           
   345     0013                     __initialization:
   346                           
   347                           ; Clear objects allocated to BANK0
   348     0013  1283               	bcf	3,5	;RP0=0, select bank0
   349     0014  1303               	bcf	3,6	;RP1=0, select bank0
   350     0015  01AD               	clrf	__pbssBANK0& (0+127)
   351     0016  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   352     0017  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   353     0018  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   354     0019  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   355     001A  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   356     001B  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   357     001C  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   358     001D  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   359     001E  01B6               	clrf	(__pbssBANK0+9)& (0+127)
   360     001F  01B7               	clrf	(__pbssBANK0+10)& (0+127)
   361     0020  01B8               	clrf	(__pbssBANK0+11)& (0+127)
   362     0021                     end_of_initialization:	
   363                           ;End of C runtime variable initialization code
   364                           
   365     0021                     __end_of__initialization:
   366     0021  0183               	clrf	3
   367     0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   368                           
   369                           	psect	bssBANK0
   370     002D                     __pbssBANK0:
   371     002D                     _conta:
   372     002D                     	ds	2
   373     002F                     _interrupcao:
   374     002F                     	ds	2
   375     0031                     _aux_timer:
   376     0031                     	ds	2
   377     0033                     _valor:
   378     0033                     	ds	2
   379     0035                     _peso_estoque:
   380     0035                     	ds	2
   381     0037                     _peso_cambuca:
   382     0037                     	ds	2
   383                           
   384                           	psect	cstackCOMMON
   385     0070                     __pcstackCOMMON:
   386     0070                     ?_Lcd_Port:
   387     0070                     ?_Lcd_Cmd:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ?_Lcd_Clear:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0070                     ?_Lcd_Init:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0070                     ?_Lcd_Write_Char:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ?_Lcd_Write_String:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_tes:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ?_Lcd_Padrao:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?i1_Lcd_Port:	
   412                           ; 1 bytes @ 0x0
   413                           
   414     0070                     ??i1_Lcd_Port:	
   415                           ; 1 bytes @ 0x0
   416                           
   417     0070                     ?i1_Lcd_Cmd:	
   418                           ; 1 bytes @ 0x0
   419                           
   420     0070                     ?i1_Lcd_Clear:	
   421                           ; 1 bytes @ 0x0
   422                           
   423     0070                     ?i1_Lcd_Write_Char:	
   424                           ; 1 bytes @ 0x0
   425                           
   426     0070                     ?i1_Lcd_Write_String:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     i1Lcd_Port@a:	
   430                           ; 1 bytes @ 0x0
   431                           
   432                           
   433                           ; 1 bytes @ 0x0
   434     0070                     	ds	1
   435     0071                     ??i1_Lcd_Cmd:
   436     0071                     ??i1_Lcd_Write_Char:	
   437                           ; 1 bytes @ 0x1
   438                           
   439                           
   440                           ; 1 bytes @ 0x1
   441     0071                     	ds	1
   442     0072                     i1Lcd_Write_Char@temp:
   443                           
   444                           ; 1 bytes @ 0x2
   445     0072                     	ds	1
   446     0073                     i1Lcd_Cmd@a:
   447     0073                     i1Lcd_Write_Char@y:	
   448                           ; 1 bytes @ 0x3
   449                           
   450                           
   451                           ; 1 bytes @ 0x3
   452     0073                     	ds	1
   453     0074                     ??i1_Lcd_Clear:
   454     0074                     ?i1_Lcd_Set_Cursor:	
   455                           ; 1 bytes @ 0x4
   456                           
   457     0074                     i1Lcd_Set_Cursor@b:	
   458                           ; 1 bytes @ 0x4
   459                           
   460     0074                     i1Lcd_Write_Char@a:	
   461                           ; 1 bytes @ 0x4
   462                           
   463                           
   464                           ; 1 bytes @ 0x4
   465     0074                     	ds	1
   466     0075                     ??i1_Lcd_Set_Cursor:
   467     0075                     ??i1_Lcd_Write_String:	
   468                           ; 1 bytes @ 0x5
   469                           
   470     0075                     i1Lcd_Write_String@a:	
   471                           ; 1 bytes @ 0x5
   472                           
   473                           
   474                           ; 1 bytes @ 0x5
   475     0075                     	ds	1
   476     0076                     i1Lcd_Set_Cursor@a:
   477     0076                     i1Lcd_Write_String@i:	
   478                           ; 1 bytes @ 0x6
   479                           
   480                           
   481                           ; 2 bytes @ 0x6
   482     0076                     	ds	1
   483     0077                     i1Lcd_Set_Cursor@z:
   484                           
   485                           ; 1 bytes @ 0x7
   486     0077                     	ds	1
   487     0078                     i1Lcd_Set_Cursor@y:
   488                           
   489                           ; 1 bytes @ 0x8
   490     0078                     	ds	1
   491     0079                     i1Lcd_Set_Cursor@temp:
   492                           
   493                           ; 1 bytes @ 0x9
   494     0079                     	ds	1
   495     007A                     ??_tes:
   496                           
   497                           ; 1 bytes @ 0xA
   498     007A                     	ds	4
   499                           
   500                           	psect	cstackBANK0
   501     0020                     __pcstackBANK0:
   502     0020                     ??_Lcd_Port:
   503     0020                     ?_PesoEstoque:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0020                     ?_PesoCambuca:	
   507                           ; 2 bytes @ 0x0
   508                           
   509     0020                     Lcd_Port@a:	
   510                           ; 2 bytes @ 0x0
   511                           
   512                           
   513                           ; 1 bytes @ 0x0
   514     0020                     	ds	1
   515     0021                     ??_Lcd_Cmd:
   516     0021                     ??_Lcd_Write_Char:	
   517                           ; 1 bytes @ 0x1
   518                           
   519                           
   520                           ; 1 bytes @ 0x1
   521     0021                     	ds	1
   522     0022                     ??_PesoEstoque:
   523     0022                     ??_PesoCambuca:	
   524                           ; 1 bytes @ 0x2
   525                           
   526     0022                     Lcd_Write_Char@temp:	
   527                           ; 1 bytes @ 0x2
   528                           
   529                           
   530                           ; 1 bytes @ 0x2
   531     0022                     	ds	1
   532     0023                     Lcd_Cmd@a:
   533     0023                     Lcd_Write_Char@y:	
   534                           ; 1 bytes @ 0x3
   535                           
   536                           
   537                           ; 1 bytes @ 0x3
   538     0023                     	ds	1
   539     0024                     ??_Lcd_Clear:
   540     0024                     ?_Lcd_Set_Cursor:	
   541                           ; 1 bytes @ 0x4
   542                           
   543     0024                     ??_Lcd_Init:	
   544                           ; 1 bytes @ 0x4
   545                           
   546     0024                     Lcd_Set_Cursor@b:	
   547                           ; 1 bytes @ 0x4
   548                           
   549     0024                     Lcd_Write_Char@a:	
   550                           ; 1 bytes @ 0x4
   551                           
   552     0024                     PesoEstoque@peso:	
   553                           ; 1 bytes @ 0x4
   554                           
   555     0024                     PesoCambuca@peso:	
   556                           ; 2 bytes @ 0x4
   557                           
   558                           
   559                           ; 2 bytes @ 0x4
   560     0024                     	ds	1
   561     0025                     ??_Lcd_Set_Cursor:
   562     0025                     ??_Lcd_Write_String:	
   563                           ; 1 bytes @ 0x5
   564                           
   565     0025                     Lcd_Write_String@i:	
   566                           ; 1 bytes @ 0x5
   567                           
   568                           
   569                           ; 2 bytes @ 0x5
   570     0025                     	ds	1
   571     0026                     Lcd_Set_Cursor@a:
   572                           
   573                           ; 1 bytes @ 0x6
   574     0026                     	ds	1
   575     0027                     Lcd_Set_Cursor@z:
   576     0027                     Lcd_Write_String@a:	
   577                           ; 1 bytes @ 0x7
   578                           
   579                           
   580                           ; 1 bytes @ 0x7
   581     0027                     	ds	1
   582     0028                     Lcd_Set_Cursor@y:
   583                           
   584                           ; 1 bytes @ 0x8
   585     0028                     	ds	1
   586     0029                     Lcd_Set_Cursor@temp:
   587                           
   588                           ; 1 bytes @ 0x9
   589     0029                     	ds	1
   590     002A                     ??_Lcd_Padrao:
   591     002A                     ??_main:	
   592                           ; 1 bytes @ 0xA
   593                           
   594                           
   595                           ; 1 bytes @ 0xA
   596     002A                     	ds	3
   597                           
   598                           	psect	maintext
   599     0025                     __pmaintext:	
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 114 in file "newmain.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : B00/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       3       0       0       0
   622 ;;      Totals:         0       3       0       0       0
   623 ;;Total ram usage:        3 bytes
   624 ;; Hardware stack levels required when called: 8
   625 ;; This function calls:
   626 ;;		_Lcd_Clear
   627 ;;		_Lcd_Init
   628 ;;		_Lcd_Padrao
   629 ;;		_Lcd_Set_Cursor
   630 ;;		_Lcd_Write_String
   631 ;;		_PesoCambuca
   632 ;;		_PesoEstoque
   633 ;; This function is called by:
   634 ;;		Startup code after reset
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638     0025                     _main:	
   639                           ;psect for function _main
   640                           
   641     0025                     l1334:	
   642                           ;incstack = 0
   643                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   644                           
   645                           
   646                           ;newmain.c: 115:     TRISA = 0b11111111;
   647     0025  30FF               	movlw	255
   648     0026  1683               	bsf	3,5	;RP0=1, select bank1
   649     0027  1303               	bcf	3,6	;RP1=0, select bank1
   650     0028  0085               	movwf	5	;volatile
   651                           
   652                           ;newmain.c: 116:     TRISB = 0b00000111;
   653     0029  3007               	movlw	7
   654     002A  0086               	movwf	6	;volatile
   655     002B                     l1336:
   656                           
   657                           ;newmain.c: 117:     TRISC = 0;
   658     002B  0187               	clrf	7	;volatile
   659     002C                     l1338:
   660                           
   661                           ;newmain.c: 118:     TRISD = 0;
   662     002C  0188               	clrf	8	;volatile
   663                           
   664                           ;newmain.c: 119:     OPTION_REG = 0b00111111;
   665     002D  303F               	movlw	63
   666     002E  0081               	movwf	1	;volatile
   667     002F                     l1340:
   668                           
   669                           ;newmain.c: 120:     PORTA = 0;
   670     002F  1283               	bcf	3,5	;RP0=0, select bank0
   671     0030  1303               	bcf	3,6	;RP1=0, select bank0
   672     0031  0185               	clrf	5	;volatile
   673     0032                     l1342:
   674                           
   675                           ;newmain.c: 121:     PORTB = 0;
   676     0032  0186               	clrf	6	;volatile
   677     0033                     l1344:
   678                           
   679                           ;newmain.c: 122:     PORTC = 0;
   680     0033  0187               	clrf	7	;volatile
   681     0034                     l1346:
   682                           
   683                           ;newmain.c: 123:     PORTD = 0;
   684     0034  0188               	clrf	8	;volatile
   685     0035                     l1348:
   686                           
   687                           ;newmain.c: 125:     INTCONbits.GIE = 1;
   688     0035  178B               	bsf	11,7	;volatile
   689     0036                     l1350:
   690                           
   691                           ;newmain.c: 126:     INTCONbits.PEIE = 1;
   692     0036  170B               	bsf	11,6	;volatile
   693     0037                     l1352:
   694                           
   695                           ;newmain.c: 127:     INTCONbits.INTE=1;
   696     0037  160B               	bsf	11,4	;volatile
   697     0038                     l1354:
   698                           
   699                           ;newmain.c: 131:     PIE1bits.TMR1IE = 1;
   700     0038  1683               	bsf	3,5	;RP0=1, select bank1
   701     0039  1303               	bcf	3,6	;RP1=0, select bank1
   702     003A  140C               	bsf	12,0	;volatile
   703     003B                     l1356:
   704                           
   705                           ;newmain.c: 132:     T1CONbits.TMR1CS = 0;
   706     003B  1283               	bcf	3,5	;RP0=0, select bank0
   707     003C  1303               	bcf	3,6	;RP1=0, select bank0
   708     003D  1090               	bcf	16,1	;volatile
   709     003E                     l1358:
   710                           
   711                           ;newmain.c: 133:     T1CONbits.T1CKPS0 = 1;
   712     003E  1610               	bsf	16,4	;volatile
   713     003F                     l1360:
   714                           
   715                           ;newmain.c: 134:     T1CONbits.T1CKPS1 = 1;
   716     003F  1690               	bsf	16,5	;volatile
   717                           
   718                           ;newmain.c: 140:     TMR1L = 0xDC;
   719     0040  30DC               	movlw	220
   720     0041  008E               	movwf	14	;volatile
   721                           
   722                           ;newmain.c: 141:     TMR1H = 0X0B;
   723     0042  300B               	movlw	11
   724     0043  008F               	movwf	15	;volatile
   725     0044                     l1362:
   726                           
   727                           ;newmain.c: 144:     ADCON1bits.PCFG0 = 0;
   728     0044  1683               	bsf	3,5	;RP0=1, select bank1
   729     0045  1303               	bcf	3,6	;RP1=0, select bank1
   730     0046  101F               	bcf	31,0	;volatile
   731     0047                     l1364:
   732                           
   733                           ;newmain.c: 145:     ADCON1bits.PCFG1 = 0;
   734     0047  109F               	bcf	31,1	;volatile
   735     0048                     l1366:
   736                           
   737                           ;newmain.c: 146:     ADCON1bits.PCFG2 = 0;
   738     0048  111F               	bcf	31,2	;volatile
   739     0049                     l1368:
   740                           
   741                           ;newmain.c: 147:     ADCON1bits.PCFG3 = 0;
   742     0049  119F               	bcf	31,3	;volatile
   743     004A                     l1370:
   744                           
   745                           ;newmain.c: 149:  ADCON0bits.ADCS0 = 0;
   746     004A  1283               	bcf	3,5	;RP0=0, select bank0
   747     004B  1303               	bcf	3,6	;RP1=0, select bank0
   748     004C  131F               	bcf	31,6	;volatile
   749     004D                     l1372:
   750                           
   751                           ;newmain.c: 150:     ADCON0bits.ADCS1 = 0;
   752     004D  139F               	bcf	31,7	;volatile
   753     004E                     l1374:
   754                           
   755                           ;newmain.c: 152:     ADCON1bits.ADFM = 0;
   756     004E  1683               	bsf	3,5	;RP0=1, select bank1
   757     004F  1303               	bcf	3,6	;RP1=0, select bank1
   758     0050  139F               	bcf	31,7	;volatile
   759     0051                     l1376:
   760                           
   761                           ;newmain.c: 155:     ADRESL = 0x00;
   762     0051  019E               	clrf	30	;volatile
   763     0052                     l1378:
   764                           
   765                           ;newmain.c: 156:     ADRESH = 0x00;
   766     0052  1283               	bcf	3,5	;RP0=0, select bank0
   767     0053  1303               	bcf	3,6	;RP1=0, select bank0
   768     0054  019E               	clrf	30	;volatile
   769     0055                     l1380:
   770                           
   771                           ;newmain.c: 158:     ADCON0bits.ADON = 1;
   772     0055  141F               	bsf	31,0	;volatile
   773     0056                     l1382:
   774                           
   775                           ;newmain.c: 160:     Lcd_Init();
   776     0056  120A  118A  2276  120A  118A  	fcall	_Lcd_Init
   777     005B                     l1384:
   778                           
   779                           ;newmain.c: 161:     Lcd_Padrao();
   780     005B  120A  118A  24D2  120A  118A  	fcall	_Lcd_Padrao
   781     0060                     l1386:
   782                           
   783                           ;newmain.c: 162:     PORTDbits.RD5 = 1;
   784     0060  1283               	bcf	3,5	;RP0=0, select bank0
   785     0061  1303               	bcf	3,6	;RP1=0, select bank0
   786     0062  1688               	bsf	8,5	;volatile
   787     0063                     l1388:
   788                           
   789                           ;newmain.c: 163:     interrupcao = 0;
   790     0063  01AF               	clrf	_interrupcao
   791     0064  01B0               	clrf	_interrupcao+1
   792     0065                     l1390:
   793                           
   794                           ;newmain.c: 164:     aux_timer = 0;
   795     0065  01B1               	clrf	_aux_timer
   796     0066  01B2               	clrf	_aux_timer+1
   797     0067  2874               	goto	l1396
   798     0068                     l136:
   799                           
   800                           ;newmain.c: 167:             if(PORTBbits.RB1 == 0){
   801     0068  1886               	btfsc	6,1	;volatile
   802     0069  286B               	goto	u661
   803     006A  286C               	goto	u660
   804     006B                     u661:
   805     006B  2874               	goto	l1396
   806     006C                     u660:
   807     006C                     l1392:
   808                           
   809                           ;newmain.c: 168:                 interrupcao = 0;
   810     006C  01AF               	clrf	_interrupcao
   811     006D  01B0               	clrf	_interrupcao+1
   812     006E                     l1394:
   813                           
   814                           ;newmain.c: 169:                 Lcd_Padrao();
   815     006E  120A  118A  24D2  120A  118A  	fcall	_Lcd_Padrao
   816     0073  2874               	goto	l1396
   817     0074                     l135:	
   818                           ;newmain.c: 171:         }
   819                           
   820     0074                     l1396:
   821                           
   822                           ;newmain.c: 166:         while(interrupcao == 1){
   823     0074  1283               	bcf	3,5	;RP0=0, select bank0
   824     0075  1303               	bcf	3,6	;RP1=0, select bank0
   825     0076  032F               	decf	_interrupcao,w
   826     0077  0430               	iorwf	_interrupcao+1,w
   827     0078  1903               	btfsc	3,2
   828     0079  287B               	goto	u671
   829     007A  287C               	goto	u670
   830     007B                     u671:
   831     007B  2868               	goto	l136
   832     007C                     u670:
   833     007C                     l138:
   834                           
   835                           ;newmain.c: 172:         if(PORTBbits.RB2 == 0){
   836     007C  1906               	btfsc	6,2	;volatile
   837     007D  287F               	goto	u681
   838     007E  2880               	goto	u680
   839     007F                     u681:
   840     007F  28D7               	goto	l1422
   841     0080                     u680:
   842     0080                     l1398:
   843                           
   844                           ;newmain.c: 173:             aux_timer = 0;
   845     0080  01B1               	clrf	_aux_timer
   846     0081  01B2               	clrf	_aux_timer+1
   847     0082                     l1400:
   848                           
   849                           ;newmain.c: 174:             Lcd_Clear();
   850     0082  120A  118A  2595  120A  118A  	fcall	_Lcd_Clear
   851     0087                     l1402:
   852                           
   853                           ;newmain.c: 175:             Lcd_Set_Cursor(1,1);
   854     0087  1283               	bcf	3,5	;RP0=0, select bank0
   855     0088  1303               	bcf	3,6	;RP1=0, select bank0
   856     0089  01A4               	clrf	Lcd_Set_Cursor@b
   857     008A  0AA4               	incf	Lcd_Set_Cursor@b,f
   858     008B  3001               	movlw	1
   859     008C  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
   860     0091                     l1404:
   861                           
   862                           ;newmain.c: 176:             Lcd_Write_String("DESPEJANDO...");
   863     0091  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   864     0092  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
   865     0097                     l1406:
   866                           
   867                           ;newmain.c: 177:             T1CONbits.TMR1ON = 1;
   868     0097  1283               	bcf	3,5	;RP0=0, select bank0
   869     0098  1303               	bcf	3,6	;RP1=0, select bank0
   870     0099  1410               	bsf	16,0	;volatile
   871                           
   872                           ;newmain.c: 178:             while (aux_timer == 0 && interrupcao == 0){
   873     009A  289C               	goto	l1408
   874     009B                     l141:
   875                           
   876                           ;newmain.c: 179:                 PORTDbits.RD7 = 1;
   877     009B  1788               	bsf	8,7	;volatile
   878     009C                     l1408:
   879                           
   880                           ;newmain.c: 178:             while (aux_timer == 0 && interrupcao == 0){
   881     009C  0831               	movf	_aux_timer,w
   882     009D  0432               	iorwf	_aux_timer+1,w
   883     009E  1D03               	btfss	3,2
   884     009F  28A1               	goto	u691
   885     00A0  28A2               	goto	u690
   886     00A1                     u691:
   887     00A1  28A8               	goto	l144
   888     00A2                     u690:
   889     00A2                     l1410:
   890     00A2  082F               	movf	_interrupcao,w
   891     00A3  0430               	iorwf	_interrupcao+1,w
   892     00A4  1903               	btfsc	3,2
   893     00A5  28A7               	goto	u701
   894     00A6  28A8               	goto	u700
   895     00A7                     u701:
   896     00A7  289B               	goto	l141
   897     00A8                     u700:
   898     00A8                     l144:
   899                           
   900                           ;newmain.c: 181:             PORTDbits.RD7 = 0;
   901     00A8  1388               	bcf	8,7	;volatile
   902     00A9                     l1412:
   903                           
   904                           ;newmain.c: 182:             if(interrupcao == 0){
   905     00A9  082F               	movf	_interrupcao,w
   906     00AA  0430               	iorwf	_interrupcao+1,w
   907     00AB  1D03               	btfss	3,2
   908     00AC  28AE               	goto	u711
   909     00AD  28AF               	goto	u710
   910     00AE                     u711:
   911     00AE  28D7               	goto	l1422
   912     00AF                     u710:
   913     00AF                     l1414:
   914                           
   915                           ;newmain.c: 183:                 Lcd_Clear();
   916     00AF  120A  118A  2595  120A  118A  	fcall	_Lcd_Clear
   917                           
   918                           ;newmain.c: 184:                 Lcd_Set_Cursor(1,1);
   919     00B4  1283               	bcf	3,5	;RP0=0, select bank0
   920     00B5  1303               	bcf	3,6	;RP1=0, select bank0
   921     00B6  01A4               	clrf	Lcd_Set_Cursor@b
   922     00B7  0AA4               	incf	Lcd_Set_Cursor@b,f
   923     00B8  3001               	movlw	1
   924     00B9  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
   925     00BE                     l1416:
   926                           
   927                           ;newmain.c: 185:                 Lcd_Write_String("RACAO COLOCADA.");
   928     00BE  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   929     00BF  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
   930     00C4                     l1418:
   931                           
   932                           ;newmain.c: 186:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
   933     00C4  300B               	movlw	11
   934     00C5  1283               	bcf	3,5	;RP0=0, select bank0
   935     00C6  1303               	bcf	3,6	;RP1=0, select bank0
   936     00C7  00AC               	movwf	??_main+2
   937     00C8  3026               	movlw	38
   938     00C9  00AB               	movwf	??_main+1
   939     00CA  305D               	movlw	93
   940     00CB  00AA               	movwf	??_main
   941     00CC                     u857:
   942     00CC  0BAA               	decfsz	??_main,f
   943     00CD  28CC               	goto	u857
   944     00CE  0BAB               	decfsz	??_main+1,f
   945     00CF  28CC               	goto	u857
   946     00D0  0BAC               	decfsz	??_main+2,f
   947     00D1  28CC               	goto	u857
   948     00D2                     l1420:
   949                           
   950                           ;newmain.c: 187:                 Lcd_Padrao();
   951     00D2  120A  118A  24D2  120A  118A  	fcall	_Lcd_Padrao
   952     00D7                     l1422:
   953                           
   954                           ;newmain.c: 190:         if(PesoCambuca()<= 51 && PesoEstoque() > 51 && interrupcao == 0
      +                          ){
   955     00D7  120A  118A  2400  120A  118A  	fcall	_PesoCambuca
   956     00DC  1283               	bcf	3,5	;RP0=0, select bank0
   957     00DD  1303               	bcf	3,6	;RP1=0, select bank0
   958     00DE  0821               	movf	?_PesoCambuca+1,w
   959     00DF  3A80               	xorlw	128
   960     00E0  00FF               	movwf	btemp+1
   961     00E1  3080               	movlw	128
   962     00E2  027F               	subwf	btemp+1,w
   963     00E3  1D03               	skipz
   964     00E4  28E7               	goto	u725
   965     00E5  3034               	movlw	52
   966     00E6  0220               	subwf	?_PesoCambuca,w
   967     00E7                     u725:
   968     00E7  1803               	skipnc
   969     00E8  28EA               	goto	u721
   970     00E9  28EB               	goto	u720
   971     00EA                     u721:
   972     00EA  2980               	goto	l1452
   973     00EB                     u720:
   974     00EB                     l1424:
   975     00EB  120A  118A  23C3  120A  118A  	fcall	_PesoEstoque
   976     00F0  1283               	bcf	3,5	;RP0=0, select bank0
   977     00F1  1303               	bcf	3,6	;RP1=0, select bank0
   978     00F2  0821               	movf	?_PesoEstoque+1,w
   979     00F3  3A80               	xorlw	128
   980     00F4  00FF               	movwf	btemp+1
   981     00F5  3080               	movlw	128
   982     00F6  027F               	subwf	btemp+1,w
   983     00F7  1D03               	skipz
   984     00F8  28FB               	goto	u735
   985     00F9  3034               	movlw	52
   986     00FA  0220               	subwf	?_PesoEstoque,w
   987     00FB                     u735:
   988     00FB  1C03               	skipc
   989     00FC  28FE               	goto	u731
   990     00FD  28FF               	goto	u730
   991     00FE                     u731:
   992     00FE  2980               	goto	l1452
   993     00FF                     u730:
   994     00FF                     l1426:
   995     00FF  1283               	bcf	3,5	;RP0=0, select bank0
   996     0100  1303               	bcf	3,6	;RP1=0, select bank0
   997     0101  082F               	movf	_interrupcao,w
   998     0102  0430               	iorwf	_interrupcao+1,w
   999     0103  1D03               	btfss	3,2
  1000     0104  2906               	goto	u741
  1001     0105  2907               	goto	u740
  1002     0106                     u741:
  1003     0106  2980               	goto	l1452
  1004     0107                     u740:
  1005     0107                     l1428:
  1006                           
  1007                           ;newmain.c: 191:             Lcd_Clear();
  1008     0107  120A  118A  2595  120A  118A  	fcall	_Lcd_Clear
  1009                           
  1010                           ;newmain.c: 192:             Lcd_Set_Cursor(1,1);
  1011     010C  1283               	bcf	3,5	;RP0=0, select bank0
  1012     010D  1303               	bcf	3,6	;RP1=0, select bank0
  1013     010E  01A4               	clrf	Lcd_Set_Cursor@b
  1014     010F  0AA4               	incf	Lcd_Set_Cursor@b,f
  1015     0110  3001               	movlw	1
  1016     0111  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
  1017     0116                     l1430:
  1018                           
  1019                           ;newmain.c: 193:             Lcd_Write_String("DESPEJANDO...");
  1020     0116  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1021     0117  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
  1022                           
  1023                           ;newmain.c: 194:             while(PesoCambuca() <= 204 && PesoEstoque() > 51){
  1024     011C  2927               	goto	l1436
  1025     011D                     l1432:
  1026                           
  1027                           ;newmain.c: 195:                 if(interrupcao == 1){
  1028     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1029     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1030     011F  032F               	decf	_interrupcao,w
  1031     0120  0430               	iorwf	_interrupcao+1,w
  1032     0121  1D03               	btfss	3,2
  1033     0122  2924               	goto	u751
  1034     0123  2925               	goto	u750
  1035     0124                     u751:
  1036     0124  2926               	goto	l149
  1037     0125                     u750:
  1038     0125  294F               	goto	l1440
  1039     0126                     l149:	
  1040                           ;newmain.c: 197:                 }
  1041                           
  1042                           
  1043                           ;newmain.c: 198:                 PORTDbits.RD7 = 1;
  1044     0126  1788               	bsf	8,7	;volatile
  1045     0127                     l1436:
  1046                           
  1047                           ;newmain.c: 194:             while(PesoCambuca() <= 204 && PesoEstoque() > 51){
  1048     0127  120A  118A  2400  120A  118A  	fcall	_PesoCambuca
  1049     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1050     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1051     012E  0821               	movf	?_PesoCambuca+1,w
  1052     012F  3A80               	xorlw	128
  1053     0130  00FF               	movwf	btemp+1
  1054     0131  3080               	movlw	128
  1055     0132  027F               	subwf	btemp+1,w
  1056     0133  1D03               	skipz
  1057     0134  2937               	goto	u765
  1058     0135  30CD               	movlw	205
  1059     0136  0220               	subwf	?_PesoCambuca,w
  1060     0137                     u765:
  1061     0137  1803               	skipnc
  1062     0138  293A               	goto	u761
  1063     0139  293B               	goto	u760
  1064     013A                     u761:
  1065     013A  294F               	goto	l1440
  1066     013B                     u760:
  1067     013B                     l1438:
  1068     013B  120A  118A  23C3  120A  118A  	fcall	_PesoEstoque
  1069     0140  1283               	bcf	3,5	;RP0=0, select bank0
  1070     0141  1303               	bcf	3,6	;RP1=0, select bank0
  1071     0142  0821               	movf	?_PesoEstoque+1,w
  1072     0143  3A80               	xorlw	128
  1073     0144  00FF               	movwf	btemp+1
  1074     0145  3080               	movlw	128
  1075     0146  027F               	subwf	btemp+1,w
  1076     0147  1D03               	skipz
  1077     0148  294B               	goto	u775
  1078     0149  3034               	movlw	52
  1079     014A  0220               	subwf	?_PesoEstoque,w
  1080     014B                     u775:
  1081     014B  1803               	skipnc
  1082     014C  294E               	goto	u771
  1083     014D  294F               	goto	u770
  1084     014E                     u771:
  1085     014E  291D               	goto	l1432
  1086     014F                     u770:
  1087     014F                     l1440:
  1088                           
  1089                           ;newmain.c: 200:             if(interrupcao == 0){
  1090     014F  1283               	bcf	3,5	;RP0=0, select bank0
  1091     0150  1303               	bcf	3,6	;RP1=0, select bank0
  1092     0151  082F               	movf	_interrupcao,w
  1093     0152  0430               	iorwf	_interrupcao+1,w
  1094     0153  1D03               	btfss	3,2
  1095     0154  2956               	goto	u781
  1096     0155  2957               	goto	u780
  1097     0156                     u781:
  1098     0156  2980               	goto	l1452
  1099     0157                     u780:
  1100     0157                     l1442:
  1101                           
  1102                           ;newmain.c: 201:                 PORTDbits.RD7 = 0;
  1103     0157  1388               	bcf	8,7	;volatile
  1104     0158                     l1444:
  1105                           
  1106                           ;newmain.c: 202:                 Lcd_Clear();
  1107     0158  120A  118A  2595  120A  118A  	fcall	_Lcd_Clear
  1108                           
  1109                           ;newmain.c: 203:                 Lcd_Set_Cursor(1,1);
  1110     015D  1283               	bcf	3,5	;RP0=0, select bank0
  1111     015E  1303               	bcf	3,6	;RP1=0, select bank0
  1112     015F  01A4               	clrf	Lcd_Set_Cursor@b
  1113     0160  0AA4               	incf	Lcd_Set_Cursor@b,f
  1114     0161  3001               	movlw	1
  1115     0162  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
  1116     0167                     l1446:
  1117                           
  1118                           ;newmain.c: 204:                 Lcd_Write_String("RACAO COLOCADA.");
  1119     0167  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1120     0168  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
  1121     016D                     l1448:
  1122                           
  1123                           ;newmain.c: 205:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1124     016D  300B               	movlw	11
  1125     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1126     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1127     0170  00AC               	movwf	??_main+2
  1128     0171  3026               	movlw	38
  1129     0172  00AB               	movwf	??_main+1
  1130     0173  305D               	movlw	93
  1131     0174  00AA               	movwf	??_main
  1132     0175                     u867:
  1133     0175  0BAA               	decfsz	??_main,f
  1134     0176  2975               	goto	u867
  1135     0177  0BAB               	decfsz	??_main+1,f
  1136     0178  2975               	goto	u867
  1137     0179  0BAC               	decfsz	??_main+2,f
  1138     017A  2975               	goto	u867
  1139     017B                     l1450:
  1140                           
  1141                           ;newmain.c: 206:                 Lcd_Padrao();
  1142     017B  120A  118A  24D2  120A  118A  	fcall	_Lcd_Padrao
  1143     0180                     l1452:
  1144                           
  1145                           ;newmain.c: 209:        if(PesoEstoque() <= 51)
  1146     0180  120A  118A  23C3  120A  118A  	fcall	_PesoEstoque
  1147     0185  1283               	bcf	3,5	;RP0=0, select bank0
  1148     0186  1303               	bcf	3,6	;RP1=0, select bank0
  1149     0187  0821               	movf	?_PesoEstoque+1,w
  1150     0188  3A80               	xorlw	128
  1151     0189  00FF               	movwf	btemp+1
  1152     018A  3080               	movlw	128
  1153     018B  027F               	subwf	btemp+1,w
  1154     018C  1D03               	skipz
  1155     018D  2990               	goto	u795
  1156     018E  3034               	movlw	52
  1157     018F  0220               	subwf	?_PesoEstoque,w
  1158     0190                     u795:
  1159     0190  1803               	skipnc
  1160     0191  2993               	goto	u791
  1161     0192  2994               	goto	u790
  1162     0193                     u791:
  1163     0193  2874               	goto	l1396
  1164     0194                     u790:
  1165     0194                     l1454:
  1166                           
  1167                           ;newmain.c: 210:        {;newmain.c: 211:            aux_timer = 0;
  1168     0194  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0195  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0196  01B1               	clrf	_aux_timer
  1171     0197  01B2               	clrf	_aux_timer+1
  1172     0198                     l1456:
  1173                           
  1174                           ;newmain.c: 212:            PORTDbits.RD6 = 1;
  1175     0198  1708               	bsf	8,6	;volatile
  1176     0199                     l1458:
  1177                           
  1178                           ;newmain.c: 213:            Lcd_Clear();
  1179     0199  120A  118A  2595  120A  118A  	fcall	_Lcd_Clear
  1180     019E                     l1460:
  1181                           
  1182                           ;newmain.c: 214:            Lcd_Set_Cursor(1,1);
  1183     019E  1283               	bcf	3,5	;RP0=0, select bank0
  1184     019F  1303               	bcf	3,6	;RP1=0, select bank0
  1185     01A0  01A4               	clrf	Lcd_Set_Cursor@b
  1186     01A1  0AA4               	incf	Lcd_Set_Cursor@b,f
  1187     01A2  3001               	movlw	1
  1188     01A3  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
  1189     01A8                     l1462:
  1190                           
  1191                           ;newmain.c: 215:            Lcd_Write_String("ESTOQUE EM NIVEL");
  1192     01A8  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1193     01A9  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
  1194     01AE                     l1464:
  1195                           
  1196                           ;newmain.c: 216:            Lcd_Set_Cursor(2,1);
  1197     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1198     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1199     01B0  01A4               	clrf	Lcd_Set_Cursor@b
  1200     01B1  0AA4               	incf	Lcd_Set_Cursor@b,f
  1201     01B2  3002               	movlw	2
  1202     01B3  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
  1203     01B8                     l1466:
  1204                           
  1205                           ;newmain.c: 217:            Lcd_Write_String("BAIXO...");
  1206     01B8  3055               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1207     01B9  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
  1208     01BE                     l1468:
  1209                           
  1210                           ;newmain.c: 218:            T1CONbits.TMR1ON = 1;
  1211     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1212     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1213     01C0  1410               	bsf	16,0	;volatile
  1214                           
  1215                           ;newmain.c: 219:            while(aux_timer == 0 && PORTBbits.RB2 == 1){
  1216     01C1  29DE               	goto	l1480
  1217     01C2                     l1470:
  1218                           
  1219                           ;newmain.c: 220:                if(interrupcao == 1){
  1220     01C2  032F               	decf	_interrupcao,w
  1221     01C3  0430               	iorwf	_interrupcao+1,w
  1222     01C4  1D03               	btfss	3,2
  1223     01C5  29C7               	goto	u801
  1224     01C6  29C8               	goto	u800
  1225     01C7                     u801:
  1226     01C7  29C9               	goto	l1476
  1227     01C8                     u800:
  1228     01C8  29EA               	goto	l158
  1229     01C9                     l1476:
  1230     01C9  120A  118A  23C3  120A  118A  	fcall	_PesoEstoque
  1231     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1232     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1233     01D0  0821               	movf	?_PesoEstoque+1,w
  1234     01D1  3A80               	xorlw	128
  1235     01D2  00FF               	movwf	btemp+1
  1236     01D3  3080               	movlw	128
  1237     01D4  027F               	subwf	btemp+1,w
  1238     01D5  1D03               	skipz
  1239     01D6  29D9               	goto	u815
  1240     01D7  3034               	movlw	52
  1241     01D8  0220               	subwf	?_PesoEstoque,w
  1242     01D9                     u815:
  1243     01D9  1C03               	skipc
  1244     01DA  29DC               	goto	u811
  1245     01DB  29DD               	goto	u810
  1246     01DC                     u811:
  1247     01DC  29DE               	goto	l1480
  1248     01DD                     u810:
  1249     01DD  29EA               	goto	l158
  1250     01DE                     l1480:
  1251                           
  1252                           ;newmain.c: 219:            while(aux_timer == 0 && PORTBbits.RB2 == 1){
  1253     01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1254     01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1255     01E0  0831               	movf	_aux_timer,w
  1256     01E1  0432               	iorwf	_aux_timer+1,w
  1257     01E2  1D03               	btfss	3,2
  1258     01E3  29E5               	goto	u821
  1259     01E4  29E6               	goto	u820
  1260     01E5                     u821:
  1261     01E5  29EA               	goto	l158
  1262     01E6                     u820:
  1263     01E6                     l1482:
  1264     01E6  1906               	btfsc	6,2	;volatile
  1265     01E7  29E9               	goto	u831
  1266     01E8  29EA               	goto	u830
  1267     01E9                     u831:
  1268     01E9  29C2               	goto	l1470
  1269     01EA                     u830:
  1270     01EA                     l158:
  1271                           
  1272                           ;newmain.c: 227:            PORTDbits.RD6 = 0;
  1273     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1274     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1275     01EC  1308               	bcf	8,6	;volatile
  1276     01ED                     l1484:
  1277                           
  1278                           ;newmain.c: 228:            if(interrupcao == 0){
  1279     01ED  082F               	movf	_interrupcao,w
  1280     01EE  0430               	iorwf	_interrupcao+1,w
  1281     01EF  1D03               	btfss	3,2
  1282     01F0  29F2               	goto	u841
  1283     01F1  29F3               	goto	u840
  1284     01F2                     u841:
  1285     01F2  2874               	goto	l135
  1286     01F3                     u840:
  1287     01F3                     l1486:
  1288                           
  1289                           ;newmain.c: 229:                 Lcd_Padrao();
  1290     01F3  120A  118A  24D2  120A  118A  	fcall	_Lcd_Padrao
  1291     01F8                     l1488:
  1292                           
  1293                           ;newmain.c: 230:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1294     01F8  300B               	movlw	11
  1295     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1296     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1297     01FB  00AC               	movwf	??_main+2
  1298     01FC  3026               	movlw	38
  1299     01FD  00AB               	movwf	??_main+1
  1300     01FE  305D               	movlw	93
  1301     01FF  00AA               	movwf	??_main
  1302     0200                     u877:
  1303     0200  0BAA               	decfsz	??_main,f
  1304     0201  2A00               	goto	u877
  1305     0202  0BAB               	decfsz	??_main+1,f
  1306     0203  2A00               	goto	u877
  1307     0204  0BAC               	decfsz	??_main+2,f
  1308     0205  2A00               	goto	u877
  1309     0206  2874               	goto	l1396
  1310     0207  120A  118A  2810   	ljmp	start
  1311     020A                     __end_of_main:
  1312                           
  1313                           	psect	text1
  1314     03C3                     __ptext1:	
  1315 ;; *************** function _PesoEstoque *****************
  1316 ;; Defined at:
  1317 ;;		line 75 in file "newmain.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;  peso            2    4[BANK0 ] int 
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  2    0[BANK0 ] int 
  1324 ;; Registers used:
  1325 ;;		wreg
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1331 ;;      Params:         0       2       0       0       0
  1332 ;;      Locals:         0       2       0       0       0
  1333 ;;      Temps:          0       2       0       0       0
  1334 ;;      Totals:         0       6       0       0       0
  1335 ;;Total ram usage:        6 bytes
  1336 ;; Hardware stack levels used: 1
  1337 ;; Hardware stack levels required when called: 4
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345     03C3                     _PesoEstoque:	
  1346                           ;psect for function _PesoEstoque
  1347                           
  1348     03C3                     l1244:	
  1349                           ;incstack = 0
  1350                           ; Regs used in _PesoEstoque: [wreg]
  1351                           
  1352                           
  1353                           ;newmain.c: 77:     int peso;;newmain.c: 78:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  1354     03C3  3002               	movlw	2
  1355     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1356     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1357     03C6  00A2               	movwf	??_PesoEstoque
  1358     03C7                     u887:
  1359     03C7  0BA2               	decfsz	??_PesoEstoque,f
  1360     03C8  2BC7               	goto	u887
  1361     03C9  0000               	nop
  1362     03CA                     l1246:
  1363                           
  1364                           ;newmain.c: 79:     ADCON0bits.CHS0 = 0;
  1365     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1366     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1367     03CC  119F               	bcf	31,3	;volatile
  1368                           
  1369                           ;newmain.c: 80:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1370     03CD  3002               	movlw	2
  1371     03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1372     03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1373     03D0  00A2               	movwf	??_PesoEstoque
  1374     03D1                     u897:
  1375     03D1  0BA2               	decfsz	??_PesoEstoque,f
  1376     03D2  2BD1               	goto	u897
  1377     03D3  0000               	nop
  1378     03D4                     l1248:
  1379                           
  1380                           ;newmain.c: 81:     ADCON0bits.CHS1 = 0;
  1381     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1382     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1383     03D6  121F               	bcf	31,4	;volatile
  1384                           
  1385                           ;newmain.c: 82:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1386     03D7  3002               	movlw	2
  1387     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  1388     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  1389     03DA  00A2               	movwf	??_PesoEstoque
  1390     03DB                     u907:
  1391     03DB  0BA2               	decfsz	??_PesoEstoque,f
  1392     03DC  2BDB               	goto	u907
  1393     03DD  0000               	nop
  1394     03DE                     l1250:
  1395                           
  1396                           ;newmain.c: 83:     ADCON0bits.CHS2 = 0;
  1397     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1398     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1399     03E0  129F               	bcf	31,5	;volatile
  1400                           
  1401                           ;newmain.c: 84:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1402     03E1  3002               	movlw	2
  1403     03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1404     03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1405     03E4  00A2               	movwf	??_PesoEstoque
  1406     03E5                     u917:
  1407     03E5  0BA2               	decfsz	??_PesoEstoque,f
  1408     03E6  2BE5               	goto	u917
  1409     03E7  0000               	nop
  1410     03E8                     l1252:
  1411                           
  1412                           ;newmain.c: 85:     ADCON0bits.GO = 1;
  1413     03E8  1283               	bcf	3,5	;RP0=0, select bank0
  1414     03E9  1303               	bcf	3,6	;RP1=0, select bank0
  1415     03EA  151F               	bsf	31,2	;volatile
  1416                           
  1417                           ;newmain.c: 86:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1418     03EB  3002               	movlw	2
  1419     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1420     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1421     03EE  00A2               	movwf	??_PesoEstoque
  1422     03EF                     u927:
  1423     03EF  0BA2               	decfsz	??_PesoEstoque,f
  1424     03F0  2BEF               	goto	u927
  1425     03F1  0000               	nop
  1426                           
  1427                           ;newmain.c: 87:     peso = ADRESH;
  1428     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  1429     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  1430     03F4  081E               	movf	30,w	;volatile
  1431     03F5  00A2               	movwf	??_PesoEstoque
  1432     03F6  01A3               	clrf	??_PesoEstoque+1
  1433     03F7  0822               	movf	??_PesoEstoque,w
  1434     03F8  00A4               	movwf	PesoEstoque@peso
  1435     03F9  0823               	movf	??_PesoEstoque+1,w
  1436     03FA  00A5               	movwf	PesoEstoque@peso+1
  1437                           
  1438                           ;newmain.c: 88:     return peso;
  1439     03FB  0825               	movf	PesoEstoque@peso+1,w
  1440     03FC  00A1               	movwf	?_PesoEstoque+1
  1441     03FD  0824               	movf	PesoEstoque@peso,w
  1442     03FE  00A0               	movwf	?_PesoEstoque
  1443     03FF                     l123:
  1444     03FF  0008               	return
  1445     0400                     __end_of_PesoEstoque:
  1446                           
  1447                           	psect	text2
  1448     0400                     __ptext2:	
  1449 ;; *************** function _PesoCambuca *****************
  1450 ;; Defined at:
  1451 ;;		line 90 in file "newmain.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  peso            2    4[BANK0 ] int 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  2    0[BANK0 ] int 
  1458 ;; Registers used:
  1459 ;;		wreg
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       2       0       0       0
  1466 ;;      Locals:         0       2       0       0       0
  1467 ;;      Temps:          0       2       0       0       0
  1468 ;;      Totals:         0       6       0       0       0
  1469 ;;Total ram usage:        6 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 4
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479     0400                     _PesoCambuca:	
  1480                           ;psect for function _PesoCambuca
  1481                           
  1482     0400                     l1256:	
  1483                           ;incstack = 0
  1484                           ; Regs used in _PesoCambuca: [wreg]
  1485                           
  1486                           
  1487                           ;newmain.c: 92:     int peso;;newmain.c: 93:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  1488     0400  3002               	movlw	2
  1489     0401  1283               	bcf	3,5	;RP0=0, select bank0
  1490     0402  1303               	bcf	3,6	;RP1=0, select bank0
  1491     0403  00A2               	movwf	??_PesoCambuca
  1492     0404                     u937:
  1493     0404  0BA2               	decfsz	??_PesoCambuca,f
  1494     0405  2C04               	goto	u937
  1495     0406  0000               	nop
  1496     0407                     l1258:
  1497                           
  1498                           ;newmain.c: 94:     ADCON0bits.CHS0 = 1;
  1499     0407  1283               	bcf	3,5	;RP0=0, select bank0
  1500     0408  1303               	bcf	3,6	;RP1=0, select bank0
  1501     0409  159F               	bsf	31,3	;volatile
  1502                           
  1503                           ;newmain.c: 95:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1504     040A  3002               	movlw	2
  1505     040B  1283               	bcf	3,5	;RP0=0, select bank0
  1506     040C  1303               	bcf	3,6	;RP1=0, select bank0
  1507     040D  00A2               	movwf	??_PesoCambuca
  1508     040E                     u947:
  1509     040E  0BA2               	decfsz	??_PesoCambuca,f
  1510     040F  2C0E               	goto	u947
  1511     0410  0000               	nop
  1512     0411                     l1260:
  1513                           
  1514                           ;newmain.c: 96:     ADCON0bits.CHS1 = 0;
  1515     0411  1283               	bcf	3,5	;RP0=0, select bank0
  1516     0412  1303               	bcf	3,6	;RP1=0, select bank0
  1517     0413  121F               	bcf	31,4	;volatile
  1518                           
  1519                           ;newmain.c: 97:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1520     0414  3002               	movlw	2
  1521     0415  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0416  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0417  00A2               	movwf	??_PesoCambuca
  1524     0418                     u957:
  1525     0418  0BA2               	decfsz	??_PesoCambuca,f
  1526     0419  2C18               	goto	u957
  1527     041A  0000               	nop
  1528     041B                     l1262:
  1529                           
  1530                           ;newmain.c: 98:     ADCON0bits.CHS2 = 0;
  1531     041B  1283               	bcf	3,5	;RP0=0, select bank0
  1532     041C  1303               	bcf	3,6	;RP1=0, select bank0
  1533     041D  129F               	bcf	31,5	;volatile
  1534                           
  1535                           ;newmain.c: 99:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1536     041E  3002               	movlw	2
  1537     041F  1283               	bcf	3,5	;RP0=0, select bank0
  1538     0420  1303               	bcf	3,6	;RP1=0, select bank0
  1539     0421  00A2               	movwf	??_PesoCambuca
  1540     0422                     u967:
  1541     0422  0BA2               	decfsz	??_PesoCambuca,f
  1542     0423  2C22               	goto	u967
  1543     0424  0000               	nop
  1544     0425                     l1264:
  1545                           
  1546                           ;newmain.c: 100:     ADCON0bits.GO = 1;
  1547     0425  1283               	bcf	3,5	;RP0=0, select bank0
  1548     0426  1303               	bcf	3,6	;RP1=0, select bank0
  1549     0427  151F               	bsf	31,2	;volatile
  1550                           
  1551                           ;newmain.c: 101:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1552     0428  3002               	movlw	2
  1553     0429  1283               	bcf	3,5	;RP0=0, select bank0
  1554     042A  1303               	bcf	3,6	;RP1=0, select bank0
  1555     042B  00A2               	movwf	??_PesoCambuca
  1556     042C                     u977:
  1557     042C  0BA2               	decfsz	??_PesoCambuca,f
  1558     042D  2C2C               	goto	u977
  1559     042E  0000               	nop
  1560                           
  1561                           ;newmain.c: 102:     peso = ADRESH;
  1562     042F  1283               	bcf	3,5	;RP0=0, select bank0
  1563     0430  1303               	bcf	3,6	;RP1=0, select bank0
  1564     0431  081E               	movf	30,w	;volatile
  1565     0432  00A2               	movwf	??_PesoCambuca
  1566     0433  01A3               	clrf	??_PesoCambuca+1
  1567     0434  0822               	movf	??_PesoCambuca,w
  1568     0435  00A4               	movwf	PesoCambuca@peso
  1569     0436  0823               	movf	??_PesoCambuca+1,w
  1570     0437  00A5               	movwf	PesoCambuca@peso+1
  1571                           
  1572                           ;newmain.c: 103:     return peso;
  1573     0438  0825               	movf	PesoCambuca@peso+1,w
  1574     0439  00A1               	movwf	?_PesoCambuca+1
  1575     043A  0824               	movf	PesoCambuca@peso,w
  1576     043B  00A0               	movwf	?_PesoCambuca
  1577     043C                     l126:
  1578     043C  0008               	return
  1579     043D                     __end_of_PesoCambuca:
  1580                           
  1581                           	psect	text3
  1582     04D2                     __ptext3:	
  1583 ;; *************** function _Lcd_Padrao *****************
  1584 ;; Defined at:
  1585 ;;		line 106 in file "newmain.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       0       0       0       0
  1601 ;;      Temps:          0       0       0       0       0
  1602 ;;      Totals:         0       0       0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used: 1
  1605 ;; Hardware stack levels required when called: 7
  1606 ;; This function calls:
  1607 ;;		_Lcd_Clear
  1608 ;;		_Lcd_Set_Cursor
  1609 ;;		_Lcd_Write_String
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615     04D2                     _Lcd_Padrao:	
  1616                           ;psect for function _Lcd_Padrao
  1617                           
  1618     04D2                     l1268:	
  1619                           ;incstack = 0
  1620                           ; Regs used in _Lcd_Padrao: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1621                           
  1622                           
  1623                           ;newmain.c: 107:     Lcd_Clear();
  1624     04D2  120A  118A  2595  120A  118A  	fcall	_Lcd_Clear
  1625                           
  1626                           ;newmain.c: 108:     Lcd_Set_Cursor(1,1);
  1627     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1628     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1629     04D9  01A4               	clrf	Lcd_Set_Cursor@b
  1630     04DA  0AA4               	incf	Lcd_Set_Cursor@b,f
  1631     04DB  3001               	movlw	1
  1632     04DC  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
  1633     04E1                     l1270:
  1634                           
  1635                           ;newmain.c: 109:     Lcd_Write_String("SIGMA DOG");
  1636     04E1  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1637     04E2  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
  1638     04E7                     l1272:
  1639                           
  1640                           ;newmain.c: 110:     Lcd_Set_Cursor(2,1);
  1641     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1642     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1643     04E9  01A4               	clrf	Lcd_Set_Cursor@b
  1644     04EA  0AA4               	incf	Lcd_Set_Cursor@b,f
  1645     04EB  3002               	movlw	2
  1646     04EC  120A  118A  2331  120A  118A  	fcall	_Lcd_Set_Cursor
  1647                           
  1648                           ;newmain.c: 111:     Lcd_Write_String("GRINDSET");
  1649     04F1  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1650     04F2  120A  118A  24A9  120A  118A  	fcall	_Lcd_Write_String
  1651     04F7                     l129:
  1652     04F7  0008               	return
  1653     04F8                     __end_of_Lcd_Padrao:
  1654                           
  1655                           	psect	text4
  1656     04A9                     __ptext4:	
  1657 ;; *************** function _Lcd_Write_String *****************
  1658 ;; Defined at:
  1659 ;;		line 96 in file "./LCD.h"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  a               1    wreg     PTR unsigned char 
  1662 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  1663 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  1664 ;;		 -> STR_2(13), STR_1(14), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  a               1    7[BANK0 ] PTR unsigned char 
  1667 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  1668 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  1669 ;;		 -> STR_2(13), STR_1(14), 
  1670 ;;  i               2    5[BANK0 ] int 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         0       0       0       0       0
  1681 ;;      Locals:         0       3       0       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         0       3       0       0       0
  1684 ;;Total ram usage:        3 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 6
  1687 ;; This function calls:
  1688 ;;		_Lcd_Write_Char
  1689 ;; This function is called by:
  1690 ;;		_Lcd_Padrao
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695     04A9                     _Lcd_Write_String:	
  1696                           ;psect for function _Lcd_Write_String
  1697                           
  1698                           
  1699                           ;incstack = 0
  1700                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1701                           ;Lcd_Write_String@a stored from wreg
  1702     04A9  1283               	bcf	3,5	;RP0=0, select bank0
  1703     04AA  1303               	bcf	3,6	;RP1=0, select bank0
  1704     04AB  00A7               	movwf	Lcd_Write_String@a
  1705     04AC                     l1196:
  1706                           
  1707                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1708     04AC  01A5               	clrf	Lcd_Write_String@i
  1709     04AD  01A6               	clrf	Lcd_Write_String@i+1
  1710     04AE  2CC4               	goto	l1202
  1711     04AF                     l1198:
  1712                           
  1713                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  1714     04AF  0825               	movf	Lcd_Write_String@i,w
  1715     04B0  0727               	addwf	Lcd_Write_String@a,w
  1716     04B1  0084               	movwf	4
  1717     04B2  120A  118A  220A  120A  118A  	fcall	stringdir
  1718     04B7  120A  118A  243D  120A  118A  	fcall	_Lcd_Write_Char
  1719     04BC                     l1200:
  1720     04BC  3001               	movlw	1
  1721     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  1722     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  1723     04BF  07A5               	addwf	Lcd_Write_String@i,f
  1724     04C0  1803               	skipnc
  1725     04C1  0AA6               	incf	Lcd_Write_String@i+1,f
  1726     04C2  3000               	movlw	0
  1727     04C3  07A6               	addwf	Lcd_Write_String@i+1,f
  1728     04C4                     l1202:
  1729     04C4  0825               	movf	Lcd_Write_String@i,w
  1730     04C5  0727               	addwf	Lcd_Write_String@a,w
  1731     04C6  0084               	movwf	4
  1732     04C7  120A  118A  220A  120A  118A  	fcall	stringdir
  1733     04CC  3A00               	xorlw	0
  1734     04CD  1D03               	skipz
  1735     04CE  2CD0               	goto	u561
  1736     04CF  2CD1               	goto	u560
  1737     04D0                     u561:
  1738     04D0  2CAF               	goto	l1198
  1739     04D1                     u560:
  1740     04D1                     l93:
  1741     04D1  0008               	return
  1742     04D2                     __end_of_Lcd_Write_String:
  1743                           
  1744                           	psect	text5
  1745     043D                     __ptext5:	
  1746 ;; *************** function _Lcd_Write_Char *****************
  1747 ;; Defined at:
  1748 ;;		line 80 in file "./LCD.h"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  a               1    wreg     unsigned char 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  a               1    4[BANK0 ] unsigned char 
  1753 ;;  y               1    3[BANK0 ] unsigned char 
  1754 ;;  temp            1    2[BANK0 ] unsigned char 
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, pclath, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1764 ;;      Params:         0       0       0       0       0
  1765 ;;      Locals:         0       3       0       0       0
  1766 ;;      Temps:          0       1       0       0       0
  1767 ;;      Totals:         0       4       0       0       0
  1768 ;;Total ram usage:        4 bytes
  1769 ;; Hardware stack levels used: 1
  1770 ;; Hardware stack levels required when called: 5
  1771 ;; This function calls:
  1772 ;;		_Lcd_Port
  1773 ;; This function is called by:
  1774 ;;		_Lcd_Write_String
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778     043D                     _Lcd_Write_Char:	
  1779                           ;psect for function _Lcd_Write_Char
  1780                           
  1781                           
  1782                           ;incstack = 0
  1783                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1784                           ;Lcd_Write_Char@a stored from wreg
  1785     043D  1283               	bcf	3,5	;RP0=0, select bank0
  1786     043E  1303               	bcf	3,6	;RP1=0, select bank0
  1787     043F  00A4               	movwf	Lcd_Write_Char@a
  1788     0440                     l1144:
  1789                           
  1790                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  1791     0440  0824               	movf	Lcd_Write_Char@a,w
  1792     0441  390F               	andlw	15
  1793     0442  00A2               	movwf	Lcd_Write_Char@temp
  1794                           
  1795                           ;./LCD.h: 84:    y = a&0xF0;
  1796     0443  0824               	movf	Lcd_Write_Char@a,w
  1797     0444  39F0               	andlw	240
  1798     0445  00A3               	movwf	Lcd_Write_Char@y
  1799     0446                     l1146:
  1800                           
  1801                           ;./LCD.h: 85:    RC0 = 1;
  1802     0446  1407               	bsf	7,0	;volatile
  1803     0447                     l1148:
  1804                           
  1805                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  1806     0447  0823               	movf	Lcd_Write_Char@y,w
  1807     0448  00A1               	movwf	??_Lcd_Write_Char
  1808     0449  3004               	movlw	4
  1809     044A                     u475:
  1810     044A  1003               	clrc
  1811     044B  0CA1               	rrf	??_Lcd_Write_Char,f
  1812     044C  3EFF               	addlw	-1
  1813     044D  1D03               	skipz
  1814     044E  2C4A               	goto	u475
  1815     044F  0821               	movf	??_Lcd_Write_Char,w
  1816     0450  120A  118A  253F  120A  118A  	fcall	_Lcd_Port
  1817     0455                     l1150:
  1818                           
  1819                           ;./LCD.h: 87:    RC2 = 1;
  1820     0455  1283               	bcf	3,5	;RP0=0, select bank0
  1821     0456  1303               	bcf	3,6	;RP1=0, select bank0
  1822     0457  1507               	bsf	7,2	;volatile
  1823     0458                     l1152:
  1824                           
  1825                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1826     0458  300C               	movlw	12
  1827     0459  1283               	bcf	3,5	;RP0=0, select bank0
  1828     045A  1303               	bcf	3,6	;RP1=0, select bank0
  1829     045B  00A1               	movwf	??_Lcd_Write_Char
  1830     045C                     u987:
  1831     045C  0BA1               	decfsz	??_Lcd_Write_Char,f
  1832     045D  2C5C               	goto	u987
  1833     045E  0000               	nop
  1834     045F                     l1154:
  1835                           
  1836                           ;./LCD.h: 89:    RC2 = 0;
  1837     045F  1283               	bcf	3,5	;RP0=0, select bank0
  1838     0460  1303               	bcf	3,6	;RP1=0, select bank0
  1839     0461  1107               	bcf	7,2	;volatile
  1840     0462                     l1156:
  1841                           
  1842                           ;./LCD.h: 90:    Lcd_Port(temp);
  1843     0462  0822               	movf	Lcd_Write_Char@temp,w
  1844     0463  120A  118A  253F  120A  118A  	fcall	_Lcd_Port
  1845     0468                     l1158:
  1846                           
  1847                           ;./LCD.h: 91:    RC2 = 1;
  1848     0468  1283               	bcf	3,5	;RP0=0, select bank0
  1849     0469  1303               	bcf	3,6	;RP1=0, select bank0
  1850     046A  1507               	bsf	7,2	;volatile
  1851     046B                     l1160:
  1852                           
  1853                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1854     046B  300C               	movlw	12
  1855     046C  1283               	bcf	3,5	;RP0=0, select bank0
  1856     046D  1303               	bcf	3,6	;RP1=0, select bank0
  1857     046E  00A1               	movwf	??_Lcd_Write_Char
  1858     046F                     u997:
  1859     046F  0BA1               	decfsz	??_Lcd_Write_Char,f
  1860     0470  2C6F               	goto	u997
  1861     0471  0000               	nop
  1862     0472                     l1162:
  1863                           
  1864                           ;./LCD.h: 93:    RC2 = 0;
  1865     0472  1283               	bcf	3,5	;RP0=0, select bank0
  1866     0473  1303               	bcf	3,6	;RP1=0, select bank0
  1867     0474  1107               	bcf	7,2	;volatile
  1868     0475                     l87:
  1869     0475  0008               	return
  1870     0476                     __end_of_Lcd_Write_Char:
  1871                           
  1872                           	psect	text6
  1873     0331                     __ptext6:	
  1874 ;; *************** function _Lcd_Set_Cursor *****************
  1875 ;; Defined at:
  1876 ;;		line 40 in file "./LCD.h"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  a               1    wreg     unsigned char 
  1879 ;;  b               1    4[BANK0 ] unsigned char 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  a               1    6[BANK0 ] unsigned char 
  1882 ;;  temp            1    9[BANK0 ] unsigned char 
  1883 ;;  y               1    8[BANK0 ] unsigned char 
  1884 ;;  z               1    7[BANK0 ] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       1       0       0       0
  1895 ;;      Locals:         0       4       0       0       0
  1896 ;;      Temps:          0       1       0       0       0
  1897 ;;      Totals:         0       6       0       0       0
  1898 ;;Total ram usage:        6 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 6
  1901 ;; This function calls:
  1902 ;;		_Lcd_Cmd
  1903 ;; This function is called by:
  1904 ;;		_Lcd_Padrao
  1905 ;;		_main
  1906 ;; This function uses a non-reentrant model
  1907 ;;
  1908                           
  1909     0331                     _Lcd_Set_Cursor:	
  1910                           ;psect for function _Lcd_Set_Cursor
  1911                           
  1912                           
  1913                           ;incstack = 0
  1914                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1915                           ;Lcd_Set_Cursor@a stored from wreg
  1916     0331  1283               	bcf	3,5	;RP0=0, select bank0
  1917     0332  1303               	bcf	3,6	;RP1=0, select bank0
  1918     0333  00A6               	movwf	Lcd_Set_Cursor@a
  1919     0334                     l1176:
  1920                           
  1921                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1922     0334  0326               	decf	Lcd_Set_Cursor@a,w
  1923     0335  1D03               	btfss	3,2
  1924     0336  2B38               	goto	u521
  1925     0337  2B39               	goto	u520
  1926     0338                     u521:
  1927     0338  2B58               	goto	l1186
  1928     0339                     u520:
  1929     0339                     l1178:
  1930                           
  1931                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1932     0339  0824               	movf	Lcd_Set_Cursor@b,w
  1933     033A  3E7F               	addlw	127
  1934     033B  00A9               	movwf	Lcd_Set_Cursor@temp
  1935                           
  1936                           ;./LCD.h: 46:   z = temp>>4;
  1937     033C  0829               	movf	Lcd_Set_Cursor@temp,w
  1938     033D  00A5               	movwf	??_Lcd_Set_Cursor
  1939     033E  3004               	movlw	4
  1940     033F                     u535:
  1941     033F  1003               	clrc
  1942     0340  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1943     0341  3EFF               	addlw	-1
  1944     0342  1D03               	skipz
  1945     0343  2B3F               	goto	u535
  1946     0344  0825               	movf	??_Lcd_Set_Cursor,w
  1947     0345  00A7               	movwf	Lcd_Set_Cursor@z
  1948     0346                     l1180:
  1949                           
  1950                           ;./LCD.h: 47:   y = temp & 0x0F;
  1951     0346  0829               	movf	Lcd_Set_Cursor@temp,w
  1952     0347  390F               	andlw	15
  1953     0348  00A8               	movwf	Lcd_Set_Cursor@y
  1954     0349                     l1182:
  1955                           
  1956                           ;./LCD.h: 48:   Lcd_Cmd(z);
  1957     0349  0827               	movf	Lcd_Set_Cursor@z,w
  1958     034A  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  1959     034F                     l1184:
  1960                           
  1961                           ;./LCD.h: 49:   Lcd_Cmd(y);
  1962     034F  1283               	bcf	3,5	;RP0=0, select bank0
  1963     0350  1303               	bcf	3,6	;RP1=0, select bank0
  1964     0351  0828               	movf	Lcd_Set_Cursor@y,w
  1965     0352  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  1966                           
  1967                           ;./LCD.h: 50:  }
  1968     0357  2B7C               	goto	l81
  1969     0358                     l1186:
  1970     0358  3002               	movlw	2
  1971     0359  0626               	xorwf	Lcd_Set_Cursor@a,w
  1972     035A  1D03               	btfss	3,2
  1973     035B  2B5D               	goto	u541
  1974     035C  2B5E               	goto	u540
  1975     035D                     u541:
  1976     035D  2B7C               	goto	l81
  1977     035E                     u540:
  1978     035E                     l1188:
  1979                           
  1980                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1981     035E  0824               	movf	Lcd_Set_Cursor@b,w
  1982     035F  3EBF               	addlw	191
  1983     0360  00A9               	movwf	Lcd_Set_Cursor@temp
  1984                           
  1985                           ;./LCD.h: 54:   z = temp>>4;
  1986     0361  0829               	movf	Lcd_Set_Cursor@temp,w
  1987     0362  00A5               	movwf	??_Lcd_Set_Cursor
  1988     0363  3004               	movlw	4
  1989     0364                     u555:
  1990     0364  1003               	clrc
  1991     0365  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1992     0366  3EFF               	addlw	-1
  1993     0367  1D03               	skipz
  1994     0368  2B64               	goto	u555
  1995     0369  0825               	movf	??_Lcd_Set_Cursor,w
  1996     036A  00A7               	movwf	Lcd_Set_Cursor@z
  1997     036B                     l1190:
  1998                           
  1999                           ;./LCD.h: 55:   y = temp & 0x0F;
  2000     036B  0829               	movf	Lcd_Set_Cursor@temp,w
  2001     036C  390F               	andlw	15
  2002     036D  00A8               	movwf	Lcd_Set_Cursor@y
  2003     036E                     l1192:
  2004                           
  2005                           ;./LCD.h: 56:   Lcd_Cmd(z);
  2006     036E  0827               	movf	Lcd_Set_Cursor@z,w
  2007     036F  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2008     0374                     l1194:
  2009                           
  2010                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2011     0374  1283               	bcf	3,5	;RP0=0, select bank0
  2012     0375  1303               	bcf	3,6	;RP1=0, select bank0
  2013     0376  0828               	movf	Lcd_Set_Cursor@y,w
  2014     0377  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2015     037C                     l81:
  2016     037C  0008               	return
  2017     037D                     __end_of_Lcd_Set_Cursor:
  2018                           
  2019                           	psect	text7
  2020     0595                     __ptext7:	
  2021 ;; *************** function _Lcd_Clear *****************
  2022 ;; Defined at:
  2023 ;;		line 34 in file "./LCD.h"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0
  2040 ;;      Totals:         0       0       0       0       0
  2041 ;;Total ram usage:        0 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 6
  2044 ;; This function calls:
  2045 ;;		_Lcd_Cmd
  2046 ;; This function is called by:
  2047 ;;		_Lcd_Padrao
  2048 ;;		_main
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052     0595                     _Lcd_Clear:	
  2053                           ;psect for function _Lcd_Clear
  2054                           
  2055     0595                     l1174:	
  2056                           ;incstack = 0
  2057                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2058                           
  2059                           
  2060                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2061     0595  3000               	movlw	0
  2062     0596  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2063                           
  2064                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2065     059B  3001               	movlw	1
  2066     059C  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2067     05A1                     l75:
  2068     05A1  0008               	return
  2069     05A2                     __end_of_Lcd_Clear:
  2070                           
  2071                           	psect	text8
  2072     0276                     __ptext8:	
  2073 ;; *************** function _Lcd_Init *****************
  2074 ;; Defined at:
  2075 ;;		line 61 in file "./LCD.h"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          0       2       0       0       0
  2092 ;;      Totals:         0       2       0       0       0
  2093 ;;Total ram usage:        2 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 6
  2096 ;; This function calls:
  2097 ;;		_Lcd_Cmd
  2098 ;;		_Lcd_Port
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104     0276                     _Lcd_Init:	
  2105                           ;psect for function _Lcd_Init
  2106                           
  2107     0276                     l1234:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2110                           
  2111                           
  2112                           ;./LCD.h: 63:   Lcd_Port(0x00);
  2113     0276  3000               	movlw	0
  2114     0277  120A  118A  253F  120A  118A  	fcall	_Lcd_Port
  2115     027C                     l1236:
  2116                           
  2117                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2118     027C  301A               	movlw	26
  2119     027D  1283               	bcf	3,5	;RP0=0, select bank0
  2120     027E  1303               	bcf	3,6	;RP1=0, select bank0
  2121     027F  00A5               	movwf	??_Lcd_Init+1
  2122     0280  30F7               	movlw	247
  2123     0281  00A4               	movwf	??_Lcd_Init
  2124     0282                     u1007:
  2125     0282  0BA4               	decfsz	??_Lcd_Init,f
  2126     0283  2A82               	goto	u1007
  2127     0284  0BA5               	decfsz	??_Lcd_Init+1,f
  2128     0285  2A82               	goto	u1007
  2129     0286  2A87               	nop2
  2130     0287                     l1238:
  2131                           
  2132                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  2133     0287  3003               	movlw	3
  2134     0288  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2135                           
  2136                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2137     028D  3007               	movlw	7
  2138     028E  1283               	bcf	3,5	;RP0=0, select bank0
  2139     028F  1303               	bcf	3,6	;RP1=0, select bank0
  2140     0290  00A5               	movwf	??_Lcd_Init+1
  2141     0291  307C               	movlw	124
  2142     0292  00A4               	movwf	??_Lcd_Init
  2143     0293                     u1017:
  2144     0293  0BA4               	decfsz	??_Lcd_Init,f
  2145     0294  2A93               	goto	u1017
  2146     0295  0BA5               	decfsz	??_Lcd_Init+1,f
  2147     0296  2A93               	goto	u1017
  2148     0297  0000               	nop
  2149     0298                     l1240:
  2150                           
  2151                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  2152     0298  3003               	movlw	3
  2153     0299  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2154     029E                     l1242:
  2155                           
  2156                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2157     029E  300F               	movlw	15
  2158     029F  1283               	bcf	3,5	;RP0=0, select bank0
  2159     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2160     02A1  00A5               	movwf	??_Lcd_Init+1
  2161     02A2  3047               	movlw	71
  2162     02A3  00A4               	movwf	??_Lcd_Init
  2163     02A4                     u1027:
  2164     02A4  0BA4               	decfsz	??_Lcd_Init,f
  2165     02A5  2AA4               	goto	u1027
  2166     02A6  0BA5               	decfsz	??_Lcd_Init+1,f
  2167     02A7  2AA4               	goto	u1027
  2168                           
  2169                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  2170     02A8  3003               	movlw	3
  2171     02A9  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2172                           
  2173                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  2174     02AE  3002               	movlw	2
  2175     02AF  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2176                           
  2177                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  2178     02B4  3002               	movlw	2
  2179     02B5  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2180                           
  2181                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  2182     02BA  3008               	movlw	8
  2183     02BB  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2184                           
  2185                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  2186     02C0  3000               	movlw	0
  2187     02C1  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2188                           
  2189                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  2190     02C6  300C               	movlw	12
  2191     02C7  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2192                           
  2193                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  2194     02CC  3000               	movlw	0
  2195     02CD  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2196                           
  2197                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  2198     02D2  3006               	movlw	6
  2199     02D3  120A  118A  255F  120A  118A  	fcall	_Lcd_Cmd
  2200     02D8                     l84:
  2201     02D8  0008               	return
  2202     02D9                     __end_of_Lcd_Init:
  2203                           
  2204                           	psect	text9
  2205     055F                     __ptext9:	
  2206 ;; *************** function _Lcd_Cmd *****************
  2207 ;; Defined at:
  2208 ;;		line 25 in file "./LCD.h"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  a               1    wreg     unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  a               1    3[BANK0 ] unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       0       0       0       0
  2223 ;;      Locals:         0       1       0       0       0
  2224 ;;      Temps:          0       2       0       0       0
  2225 ;;      Totals:         0       3       0       0       0
  2226 ;;Total ram usage:        3 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 5
  2229 ;; This function calls:
  2230 ;;		_Lcd_Port
  2231 ;; This function is called by:
  2232 ;;		_Lcd_Clear
  2233 ;;		_Lcd_Set_Cursor
  2234 ;;		_Lcd_Init
  2235 ;;		_Lcd_Shift_Right
  2236 ;;		_Lcd_Shift_Left
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240     055F                     _Lcd_Cmd:	
  2241                           ;psect for function _Lcd_Cmd
  2242                           
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2246                           ;Lcd_Cmd@a stored from wreg
  2247     055F  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0560  1303               	bcf	3,6	;RP1=0, select bank0
  2249     0561  00A3               	movwf	Lcd_Cmd@a
  2250     0562                     l1134:
  2251                           
  2252                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  2253     0562  1007               	bcf	7,0	;volatile
  2254     0563                     l1136:
  2255                           
  2256                           ;./LCD.h: 28:  Lcd_Port(a);
  2257     0563  0823               	movf	Lcd_Cmd@a,w
  2258     0564  120A  118A  253F  120A  118A  	fcall	_Lcd_Port
  2259     0569                     l1138:
  2260                           
  2261                           ;./LCD.h: 29:  RC2 = 1;
  2262     0569  1283               	bcf	3,5	;RP0=0, select bank0
  2263     056A  1303               	bcf	3,6	;RP1=0, select bank0
  2264     056B  1507               	bsf	7,2	;volatile
  2265     056C                     l1140:
  2266                           
  2267                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2268     056C  3006               	movlw	6
  2269     056D  1283               	bcf	3,5	;RP0=0, select bank0
  2270     056E  1303               	bcf	3,6	;RP1=0, select bank0
  2271     056F  00A2               	movwf	??_Lcd_Cmd+1
  2272     0570  302F               	movlw	47
  2273     0571  00A1               	movwf	??_Lcd_Cmd
  2274     0572                     u1037:
  2275     0572  0BA1               	decfsz	??_Lcd_Cmd,f
  2276     0573  2D72               	goto	u1037
  2277     0574  0BA2               	decfsz	??_Lcd_Cmd+1,f
  2278     0575  2D72               	goto	u1037
  2279     0576  2D77               	nop2
  2280     0577                     l1142:
  2281                           
  2282                           ;./LCD.h: 31:         RC2 = 0;
  2283     0577  1283               	bcf	3,5	;RP0=0, select bank0
  2284     0578  1303               	bcf	3,6	;RP1=0, select bank0
  2285     0579  1107               	bcf	7,2	;volatile
  2286     057A                     l72:
  2287     057A  0008               	return
  2288     057B                     __end_of_Lcd_Cmd:
  2289                           
  2290                           	psect	text10
  2291     053F                     __ptext10:	
  2292 ;; *************** function _Lcd_Port *****************
  2293 ;; Defined at:
  2294 ;;		line 3 in file "./LCD.h"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  a               1    wreg     unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  a               1    0[BANK0 ] unsigned char 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       0       0       0       0
  2309 ;;      Locals:         0       1       0       0       0
  2310 ;;      Temps:          0       0       0       0       0
  2311 ;;      Totals:         0       1       0       0       0
  2312 ;;Total ram usage:        1 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 4
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_Lcd_Cmd
  2319 ;;		_Lcd_Init
  2320 ;;		_Lcd_Write_Char
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324     053F                     _Lcd_Port:	
  2325                           ;psect for function _Lcd_Port
  2326                           
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _Lcd_Port: [wreg]
  2330                           ;Lcd_Port@a stored from wreg
  2331     053F  1283               	bcf	3,5	;RP0=0, select bank0
  2332     0540  1303               	bcf	3,6	;RP1=0, select bank0
  2333     0541  00A0               	movwf	Lcd_Port@a
  2334     0542                     l1124:
  2335                           
  2336                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2337     0542  1C20               	btfss	Lcd_Port@a,0
  2338     0543  2D45               	goto	u431
  2339     0544  2D46               	goto	u430
  2340     0545                     u431:
  2341     0545  2D48               	goto	l61
  2342     0546                     u430:
  2343     0546                     l1126:
  2344                           
  2345                           ;./LCD.h: 6:   RC4 = 1;
  2346     0546  1607               	bsf	7,4	;volatile
  2347     0547  2D49               	goto	l62
  2348     0548                     l61:	
  2349                           ;./LCD.h: 7:  else
  2350                           
  2351                           
  2352                           ;./LCD.h: 8:   RC4 = 0;
  2353     0548  1207               	bcf	7,4	;volatile
  2354     0549                     l62:
  2355                           
  2356                           ;./LCD.h: 10:  if(a & 2)
  2357     0549  1CA0               	btfss	Lcd_Port@a,1
  2358     054A  2D4C               	goto	u441
  2359     054B  2D4D               	goto	u440
  2360     054C                     u441:
  2361     054C  2D4F               	goto	l63
  2362     054D                     u440:
  2363     054D                     l1128:
  2364                           
  2365                           ;./LCD.h: 11:   RC5 = 1;
  2366     054D  1687               	bsf	7,5	;volatile
  2367     054E  2D50               	goto	l64
  2368     054F                     l63:	
  2369                           ;./LCD.h: 12:  else
  2370                           
  2371                           
  2372                           ;./LCD.h: 13:   RC5 = 0;
  2373     054F  1287               	bcf	7,5	;volatile
  2374     0550                     l64:
  2375                           
  2376                           ;./LCD.h: 15:  if(a & 4)
  2377     0550  1D20               	btfss	Lcd_Port@a,2
  2378     0551  2D53               	goto	u451
  2379     0552  2D54               	goto	u450
  2380     0553                     u451:
  2381     0553  2D56               	goto	l65
  2382     0554                     u450:
  2383     0554                     l1130:
  2384                           
  2385                           ;./LCD.h: 16:   RC6 = 1;
  2386     0554  1707               	bsf	7,6	;volatile
  2387     0555  2D57               	goto	l66
  2388     0556                     l65:	
  2389                           ;./LCD.h: 17:  else
  2390                           
  2391                           
  2392                           ;./LCD.h: 18:   RC6 = 0;
  2393     0556  1307               	bcf	7,6	;volatile
  2394     0557                     l66:
  2395                           
  2396                           ;./LCD.h: 20:  if(a & 8)
  2397     0557  1DA0               	btfss	Lcd_Port@a,3
  2398     0558  2D5A               	goto	u461
  2399     0559  2D5B               	goto	u460
  2400     055A                     u461:
  2401     055A  2D5D               	goto	l67
  2402     055B                     u460:
  2403     055B                     l1132:
  2404                           
  2405                           ;./LCD.h: 21:   RC7 = 1;
  2406     055B  1787               	bsf	7,7	;volatile
  2407     055C  2D5E               	goto	l69
  2408     055D                     l67:	
  2409                           ;./LCD.h: 22:  else
  2410                           
  2411                           
  2412                           ;./LCD.h: 23:   RC7 = 0;
  2413     055D  1387               	bcf	7,7	;volatile
  2414     055E                     l69:
  2415     055E  0008               	return
  2416     055F                     __end_of_Lcd_Port:
  2417                           
  2418                           	psect	text11
  2419     02D9                     __ptext11:	
  2420 ;; *************** function _tes *****************
  2421 ;; Defined at:
  2422 ;;		line 48 in file "newmain.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0
  2438 ;;      Temps:          4       0       0       0       0
  2439 ;;      Totals:         4       0       0       0       0
  2440 ;;Total ram usage:        4 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 3
  2443 ;; This function calls:
  2444 ;;		i1_Lcd_Clear
  2445 ;;		i1_Lcd_Set_Cursor
  2446 ;;		i1_Lcd_Write_String
  2447 ;; This function is called by:
  2448 ;;		Interrupt level 1
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452     02D9                     _tes:	
  2453                           ;psect for function _tes
  2454                           
  2455     02D9                     i1l1308:
  2456                           
  2457                           ;newmain.c: 49:     if(TMR1IF){
  2458     02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2459     02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2460     02DB  1C0C               	btfss	12,0	;volatile
  2461     02DC  2ADE               	goto	u63_21
  2462     02DD  2ADF               	goto	u63_20
  2463     02DE                     u63_21:
  2464     02DE  2AF9               	goto	i1l116
  2465     02DF                     u63_20:
  2466     02DF                     i1l1310:
  2467                           
  2468                           ;newmain.c: 50:         PIR1bits.TMR1IF = 0;
  2469     02DF  100C               	bcf	12,0	;volatile
  2470     02E0                     i1l1312:
  2471                           
  2472                           ;newmain.c: 51:         TMR1L = 0xDC;
  2473     02E0  30DC               	movlw	220
  2474     02E1  008E               	movwf	14	;volatile
  2475                           
  2476                           ;newmain.c: 52:         TMR1H = 0X0B;
  2477     02E2  300B               	movlw	11
  2478     02E3  008F               	movwf	15	;volatile
  2479                           
  2480                           ;newmain.c: 53:         conta++;
  2481     02E4  3001               	movlw	1
  2482     02E5  07AD               	addwf	_conta,f
  2483     02E6  1803               	skipnc
  2484     02E7  0AAE               	incf	_conta+1,f
  2485     02E8  3000               	movlw	0
  2486     02E9  07AE               	addwf	_conta+1,f
  2487     02EA                     i1l1314:
  2488                           
  2489                           ;newmain.c: 54:         if(conta == 8){
  2490     02EA  3008               	movlw	8
  2491     02EB  062D               	xorwf	_conta,w
  2492     02EC  042E               	iorwf	_conta+1,w
  2493     02ED  1D03               	btfss	3,2
  2494     02EE  2AF0               	goto	u64_21
  2495     02EF  2AF1               	goto	u64_20
  2496     02F0                     u64_21:
  2497     02F0  2B26               	goto	i1l120
  2498     02F1                     u64_20:
  2499     02F1                     i1l1316:
  2500                           
  2501                           ;newmain.c: 55:             T1CONbits.TMR1ON = 0;
  2502     02F1  1010               	bcf	16,0	;volatile
  2503     02F2                     i1l1318:
  2504                           
  2505                           ;newmain.c: 56:             conta = 0;
  2506     02F2  01AD               	clrf	_conta
  2507     02F3  01AE               	clrf	_conta+1
  2508     02F4                     i1l1320:
  2509                           
  2510                           ;newmain.c: 57:             aux_timer = 1;
  2511     02F4  3001               	movlw	1
  2512     02F5  00B1               	movwf	_aux_timer
  2513     02F6  3000               	movlw	0
  2514     02F7  00B2               	movwf	_aux_timer+1
  2515     02F8  2B26               	goto	i1l120
  2516     02F9                     i1l116:	
  2517                           ;newmain.c: 61:     else if (INTCONbits.INTF)
  2518                           
  2519     02F9  1C8B               	btfss	11,1	;volatile
  2520     02FA  2AFC               	goto	u65_21
  2521     02FB  2AFD               	goto	u65_20
  2522     02FC                     u65_21:
  2523     02FC  2B26               	goto	i1l120
  2524     02FD                     u65_20:
  2525     02FD                     i1l1322:
  2526                           
  2527                           ;newmain.c: 62:     {;newmain.c: 63:         INTCONbits.INTF = 0;
  2528     02FD  108B               	bcf	11,1	;volatile
  2529                           
  2530                           ;newmain.c: 64:         PORTDbits.RD7 = 0;
  2531     02FE  1388               	bcf	8,7	;volatile
  2532     02FF                     i1l1324:
  2533                           
  2534                           ;newmain.c: 65:         Lcd_Clear();
  2535     02FF  120A  118A  25A2  120A  118A  	fcall	i1_Lcd_Clear
  2536                           
  2537                           ;newmain.c: 66:         Lcd_Set_Cursor(1,1);
  2538     0304  01F4               	clrf	i1Lcd_Set_Cursor@b
  2539     0305  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2540     0306  3001               	movlw	1
  2541     0307  120A  118A  237D  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2542     030C                     i1l1326:
  2543                           
  2544                           ;newmain.c: 67:         Lcd_Write_String("FUNCIONAMENTO");
  2545     030C  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2546     030D  120A  118A  24F8  120A  118A  	fcall	i1_Lcd_Write_String
  2547     0312                     i1l1328:
  2548                           
  2549                           ;newmain.c: 68:         Lcd_Set_Cursor(2,1);
  2550     0312  01F4               	clrf	i1Lcd_Set_Cursor@b
  2551     0313  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2552     0314  3002               	movlw	2
  2553     0315  120A  118A  237D  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2554                           
  2555                           ;newmain.c: 69:         Lcd_Write_String("INTERROMPIDO");
  2556     031A  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2557     031B  120A  118A  24F8  120A  118A  	fcall	i1_Lcd_Write_String
  2558     0320                     i1l1330:
  2559                           
  2560                           ;newmain.c: 70:         interrupcao = 1;
  2561     0320  3001               	movlw	1
  2562     0321  1283               	bcf	3,5	;RP0=0, select bank0
  2563     0322  1303               	bcf	3,6	;RP1=0, select bank0
  2564     0323  00AF               	movwf	_interrupcao
  2565     0324  3000               	movlw	0
  2566     0325  00B0               	movwf	_interrupcao+1
  2567     0326                     i1l120:
  2568     0326  087D               	movf	??_tes+3,w
  2569     0327  00FF               	movwf	btemp+1
  2570     0328  087C               	movf	??_tes+2,w
  2571     0329  008A               	movwf	10
  2572     032A  087B               	movf	??_tes+1,w
  2573     032B  0084               	movwf	4
  2574     032C  0E7A               	swapf	??_tes,w
  2575     032D  0083               	movwf	3
  2576     032E  0EFE               	swapf	btemp,f
  2577     032F  0E7E               	swapf	btemp,w
  2578     0330  0009               	retfie
  2579     0331                     __end_of_tes:
  2580                           
  2581                           	psect	intentry
  2582     0004                     __pintentry:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _tes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2585                           
  2586     0004                     interrupt_function:
  2587     007E                     saved_w	set	btemp
  2588     0004  00FE               	movwf	btemp
  2589     0005  0E03               	swapf	3,w
  2590     0006  00FA               	movwf	??_tes
  2591     0007  0804               	movf	4,w
  2592     0008  00FB               	movwf	??_tes+1
  2593     0009  080A               	movf	10,w
  2594     000A  00FC               	movwf	??_tes+2
  2595     000B  087F               	movf	btemp+1,w
  2596     000C  00FD               	movwf	??_tes+3
  2597     000D  120A  118A  2AD9   	ljmp	_tes
  2598                           
  2599                           	psect	text12
  2600     04F8                     __ptext12:	
  2601 ;; *************** function i1_Lcd_Write_String *****************
  2602 ;; Defined at:
  2603 ;;		line 96 in file "./LCD.h"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  a               1    wreg     PTR unsigned char 
  2606 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  2607 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  2608 ;;		 -> STR_2(13), STR_1(14), 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  a               1    5[COMMON] PTR unsigned char 
  2611 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  2612 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  2613 ;;		 -> STR_2(13), STR_1(14), 
  2614 ;;  i               2    6[COMMON] int 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  1    wreg      void 
  2617 ;; Registers used:
  2618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         0       0       0       0       0
  2625 ;;      Locals:         3       0       0       0       0
  2626 ;;      Temps:          0       0       0       0       0
  2627 ;;      Totals:         3       0       0       0       0
  2628 ;;Total ram usage:        3 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 2
  2631 ;; This function calls:
  2632 ;;		i1_Lcd_Write_Char
  2633 ;; This function is called by:
  2634 ;;		_tes
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638     04F8                     i1_Lcd_Write_String:	
  2639                           ;psect for function i1_Lcd_Write_String
  2640                           
  2641                           
  2642                           ;incstack = 0
  2643 ;; using string table level
  2644                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2645                           ;i1Lcd_Write_String@a stored from wreg
  2646     04F8  00F5               	movwf	i1Lcd_Write_String@a
  2647     04F9                     i1l1296:
  2648                           
  2649                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2650     04F9  01F6               	clrf	i1Lcd_Write_String@i
  2651     04FA  01F7               	clrf	i1Lcd_Write_String@i+1
  2652     04FB  2D0F               	goto	i1l1302
  2653     04FC                     i1l1298:
  2654                           
  2655                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  2656     04FC  0876               	movf	i1Lcd_Write_String@i,w
  2657     04FD  0775               	addwf	i1Lcd_Write_String@a,w
  2658     04FE  0084               	movwf	4
  2659     04FF  120A  118A  220A  120A  118A  	fcall	stringdir
  2660     0504  120A  118A  2476  120A  118A  	fcall	i1_Lcd_Write_Char
  2661     0509                     i1l1300:
  2662     0509  3001               	movlw	1
  2663     050A  07F6               	addwf	i1Lcd_Write_String@i,f
  2664     050B  1803               	skipnc
  2665     050C  0AF7               	incf	i1Lcd_Write_String@i+1,f
  2666     050D  3000               	movlw	0
  2667     050E  07F7               	addwf	i1Lcd_Write_String@i+1,f
  2668     050F                     i1l1302:
  2669     050F  0876               	movf	i1Lcd_Write_String@i,w
  2670     0510  0775               	addwf	i1Lcd_Write_String@a,w
  2671     0511  0084               	movwf	4
  2672     0512  120A  118A  220A  120A  118A  	fcall	stringdir
  2673     0517  3A00               	xorlw	0
  2674     0518  1D03               	skipz
  2675     0519  2D1B               	goto	u62_21
  2676     051A  2D1C               	goto	u62_20
  2677     051B                     u62_21:
  2678     051B  2CFC               	goto	i1l1298
  2679     051C                     u62_20:
  2680     051C                     i1l93:
  2681     051C  0008               	return
  2682     051D                     __end_ofi1_Lcd_Write_String:
  2683                           
  2684                           	psect	text13
  2685     0476                     __ptext13:	
  2686 ;; *************** function i1_Lcd_Write_Char *****************
  2687 ;; Defined at:
  2688 ;;		line 80 in file "./LCD.h"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  a               1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  a               1    4[COMMON] unsigned char 
  2693 ;;  y               1    3[COMMON] unsigned char 
  2694 ;;  temp            1    2[COMMON] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0, pclath, cstack
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       0       0       0       0
  2705 ;;      Locals:         3       0       0       0       0
  2706 ;;      Temps:          1       0       0       0       0
  2707 ;;      Totals:         4       0       0       0       0
  2708 ;;Total ram usage:        4 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 1
  2711 ;; This function calls:
  2712 ;;		i1_Lcd_Port
  2713 ;; This function is called by:
  2714 ;;		i1_Lcd_Write_String
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     0476                     i1_Lcd_Write_Char:	
  2719                           ;psect for function i1_Lcd_Write_Char
  2720                           
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2724                           ;i1Lcd_Write_Char@a stored from wreg
  2725     0476  00F4               	movwf	i1Lcd_Write_Char@a
  2726     0477                     i1l1214:
  2727                           
  2728                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  2729     0477  0874               	movf	i1Lcd_Write_Char@a,w
  2730     0478  390F               	andlw	15
  2731     0479  00F2               	movwf	i1Lcd_Write_Char@temp
  2732                           
  2733                           ;./LCD.h: 84:    y = a&0xF0;
  2734     047A  0874               	movf	i1Lcd_Write_Char@a,w
  2735     047B  39F0               	andlw	240
  2736     047C  00F3               	movwf	i1Lcd_Write_Char@y
  2737     047D                     i1l1216:
  2738                           
  2739                           ;./LCD.h: 85:    RC0 = 1;
  2740     047D  1283               	bcf	3,5	;RP0=0, select bank0
  2741     047E  1303               	bcf	3,6	;RP1=0, select bank0
  2742     047F  1407               	bsf	7,0	;volatile
  2743     0480                     i1l1218:
  2744                           
  2745                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  2746     0480  0873               	movf	i1Lcd_Write_Char@y,w
  2747     0481  00F1               	movwf	??i1_Lcd_Write_Char
  2748     0482  3004               	movlw	4
  2749     0483                     u57_25:
  2750     0483  1003               	clrc
  2751     0484  0CF1               	rrf	??i1_Lcd_Write_Char,f
  2752     0485  3EFF               	addlw	-1
  2753     0486  1D03               	skipz
  2754     0487  2C83               	goto	u57_25
  2755     0488  0871               	movf	??i1_Lcd_Write_Char,w
  2756     0489  120A  118A  251D  120A  118A  	fcall	i1_Lcd_Port
  2757     048E                     i1l1220:
  2758                           
  2759                           ;./LCD.h: 87:    RC2 = 1;
  2760     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2761     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2762     0490  1507               	bsf	7,2	;volatile
  2763     0491                     i1l1222:
  2764                           
  2765                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2766     0491  300D               	movlw	13
  2767     0492  00F1               	movwf	??i1_Lcd_Write_Char
  2768     0493                     u104_27:
  2769     0493  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2770     0494  2C93               	goto	u104_27
  2771     0495                     i1l1224:
  2772                           
  2773                           ;./LCD.h: 89:    RC2 = 0;
  2774     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2775     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2776     0497  1107               	bcf	7,2	;volatile
  2777     0498                     i1l1226:
  2778                           
  2779                           ;./LCD.h: 90:    Lcd_Port(temp);
  2780     0498  0872               	movf	i1Lcd_Write_Char@temp,w
  2781     0499  120A  118A  251D  120A  118A  	fcall	i1_Lcd_Port
  2782     049E                     i1l1228:
  2783                           
  2784                           ;./LCD.h: 91:    RC2 = 1;
  2785     049E  1283               	bcf	3,5	;RP0=0, select bank0
  2786     049F  1303               	bcf	3,6	;RP1=0, select bank0
  2787     04A0  1507               	bsf	7,2	;volatile
  2788     04A1                     i1l1230:
  2789                           
  2790                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2791     04A1  300D               	movlw	13
  2792     04A2  00F1               	movwf	??i1_Lcd_Write_Char
  2793     04A3                     u105_27:
  2794     04A3  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2795     04A4  2CA3               	goto	u105_27
  2796     04A5                     i1l1232:
  2797                           
  2798                           ;./LCD.h: 93:    RC2 = 0;
  2799     04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2800     04A6  1303               	bcf	3,6	;RP1=0, select bank0
  2801     04A7  1107               	bcf	7,2	;volatile
  2802     04A8                     i1l87:
  2803     04A8  0008               	return
  2804     04A9                     __end_ofi1_Lcd_Write_Char:
  2805                           
  2806                           	psect	text14
  2807     037D                     __ptext14:	
  2808 ;; *************** function i1_Lcd_Set_Cursor *****************
  2809 ;; Defined at:
  2810 ;;		line 40 in file "./LCD.h"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  a               1    wreg     unsigned char 
  2813 ;;  b               1    4[COMMON] unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  a               1    6[COMMON] unsigned char 
  2816 ;;  temp            1    9[COMMON] unsigned char 
  2817 ;;  y               1    8[COMMON] unsigned char 
  2818 ;;  z               1    7[COMMON] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         1       0       0       0       0
  2829 ;;      Locals:         4       0       0       0       0
  2830 ;;      Temps:          1       0       0       0       0
  2831 ;;      Totals:         6       0       0       0       0
  2832 ;;Total ram usage:        6 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 2
  2835 ;; This function calls:
  2836 ;;		i1_Lcd_Cmd
  2837 ;; This function is called by:
  2838 ;;		_tes
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842     037D                     i1_Lcd_Set_Cursor:	
  2843                           ;psect for function i1_Lcd_Set_Cursor
  2844                           
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2848                           ;i1Lcd_Set_Cursor@a stored from wreg
  2849     037D  00F6               	movwf	i1Lcd_Set_Cursor@a
  2850     037E                     i1l1276:
  2851                           
  2852                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  2853     037E  0376               	decf	i1Lcd_Set_Cursor@a,w
  2854     037F  1D03               	btfss	3,2
  2855     0380  2B82               	goto	u58_21
  2856     0381  2B83               	goto	u58_20
  2857     0382                     u58_21:
  2858     0382  2BA0               	goto	i1l1286
  2859     0383                     u58_20:
  2860     0383                     i1l1278:
  2861                           
  2862                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  2863     0383  0874               	movf	i1Lcd_Set_Cursor@b,w
  2864     0384  3E7F               	addlw	127
  2865     0385  00F9               	movwf	i1Lcd_Set_Cursor@temp
  2866                           
  2867                           ;./LCD.h: 46:   z = temp>>4;
  2868     0386  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2869     0387  00F5               	movwf	??i1_Lcd_Set_Cursor
  2870     0388  3004               	movlw	4
  2871     0389                     u59_25:
  2872     0389  1003               	clrc
  2873     038A  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2874     038B  3EFF               	addlw	-1
  2875     038C  1D03               	skipz
  2876     038D  2B89               	goto	u59_25
  2877     038E  0875               	movf	??i1_Lcd_Set_Cursor,w
  2878     038F  00F7               	movwf	i1Lcd_Set_Cursor@z
  2879     0390                     i1l1280:
  2880                           
  2881                           ;./LCD.h: 47:   y = temp & 0x0F;
  2882     0390  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2883     0391  390F               	andlw	15
  2884     0392  00F8               	movwf	i1Lcd_Set_Cursor@y
  2885     0393                     i1l1282:
  2886                           
  2887                           ;./LCD.h: 48:   Lcd_Cmd(z);
  2888     0393  0877               	movf	i1Lcd_Set_Cursor@z,w
  2889     0394  120A  118A  257B  120A  118A  	fcall	i1_Lcd_Cmd
  2890     0399                     i1l1284:
  2891                           
  2892                           ;./LCD.h: 49:   Lcd_Cmd(y);
  2893     0399  0878               	movf	i1Lcd_Set_Cursor@y,w
  2894     039A  120A  118A  257B  120A  118A  	fcall	i1_Lcd_Cmd
  2895                           
  2896                           ;./LCD.h: 50:  }
  2897     039F  2BC2               	goto	i1l81
  2898     03A0                     i1l1286:
  2899     03A0  3002               	movlw	2
  2900     03A1  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  2901     03A2  1D03               	btfss	3,2
  2902     03A3  2BA5               	goto	u60_21
  2903     03A4  2BA6               	goto	u60_20
  2904     03A5                     u60_21:
  2905     03A5  2BC2               	goto	i1l81
  2906     03A6                     u60_20:
  2907     03A6                     i1l1288:
  2908                           
  2909                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  2910     03A6  0874               	movf	i1Lcd_Set_Cursor@b,w
  2911     03A7  3EBF               	addlw	191
  2912     03A8  00F9               	movwf	i1Lcd_Set_Cursor@temp
  2913                           
  2914                           ;./LCD.h: 54:   z = temp>>4;
  2915     03A9  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2916     03AA  00F5               	movwf	??i1_Lcd_Set_Cursor
  2917     03AB  3004               	movlw	4
  2918     03AC                     u61_25:
  2919     03AC  1003               	clrc
  2920     03AD  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2921     03AE  3EFF               	addlw	-1
  2922     03AF  1D03               	skipz
  2923     03B0  2BAC               	goto	u61_25
  2924     03B1  0875               	movf	??i1_Lcd_Set_Cursor,w
  2925     03B2  00F7               	movwf	i1Lcd_Set_Cursor@z
  2926     03B3                     i1l1290:
  2927                           
  2928                           ;./LCD.h: 55:   y = temp & 0x0F;
  2929     03B3  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2930     03B4  390F               	andlw	15
  2931     03B5  00F8               	movwf	i1Lcd_Set_Cursor@y
  2932     03B6                     i1l1292:
  2933                           
  2934                           ;./LCD.h: 56:   Lcd_Cmd(z);
  2935     03B6  0877               	movf	i1Lcd_Set_Cursor@z,w
  2936     03B7  120A  118A  257B  120A  118A  	fcall	i1_Lcd_Cmd
  2937     03BC                     i1l1294:
  2938                           
  2939                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2940     03BC  0878               	movf	i1Lcd_Set_Cursor@y,w
  2941     03BD  120A  118A  257B  120A  118A  	fcall	i1_Lcd_Cmd
  2942     03C2                     i1l81:
  2943     03C2  0008               	return
  2944     03C3                     __end_ofi1_Lcd_Set_Cursor:
  2945                           
  2946                           	psect	text15
  2947     05A2                     __ptext15:	
  2948 ;; *************** function i1_Lcd_Clear *****************
  2949 ;; Defined at:
  2950 ;;		line 34 in file "./LCD.h"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         0       0       0       0       0
  2968 ;;Total ram usage:        0 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 2
  2971 ;; This function calls:
  2972 ;;		i1_Lcd_Cmd
  2973 ;; This function is called by:
  2974 ;;		_tes
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     05A2                     i1_Lcd_Clear:	
  2979                           ;psect for function i1_Lcd_Clear
  2980                           
  2981     05A2                     i1l1274:	
  2982                           ;incstack = 0
  2983                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2984                           
  2985                           
  2986                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2987     05A2  3000               	movlw	0
  2988     05A3  120A  118A  257B  120A  118A  	fcall	i1_Lcd_Cmd
  2989                           
  2990                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2991     05A8  3001               	movlw	1
  2992     05A9  120A  118A  257B  120A  118A  	fcall	i1_Lcd_Cmd
  2993     05AE                     i1l75:
  2994     05AE  0008               	return
  2995     05AF                     __end_ofi1_Lcd_Clear:
  2996                           
  2997                           	psect	text16
  2998     057B                     __ptext16:	
  2999 ;; *************** function i1_Lcd_Cmd *****************
  3000 ;; Defined at:
  3001 ;;		line 25 in file "./LCD.h"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  a               1    wreg     unsigned char 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  a               1    3[COMMON] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         0       0       0       0       0
  3016 ;;      Locals:         1       0       0       0       0
  3017 ;;      Temps:          2       0       0       0       0
  3018 ;;      Totals:         3       0       0       0       0
  3019 ;;Total ram usage:        3 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 1
  3022 ;; This function calls:
  3023 ;;		i1_Lcd_Port
  3024 ;; This function is called by:
  3025 ;;		i1_Lcd_Clear
  3026 ;;		i1_Lcd_Set_Cursor
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030     057B                     i1_Lcd_Cmd:	
  3031                           ;psect for function i1_Lcd_Cmd
  3032                           
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3036                           ;i1Lcd_Cmd@a stored from wreg
  3037     057B  00F3               	movwf	i1Lcd_Cmd@a
  3038     057C                     i1l1204:
  3039                           
  3040                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  3041     057C  1283               	bcf	3,5	;RP0=0, select bank0
  3042     057D  1303               	bcf	3,6	;RP1=0, select bank0
  3043     057E  1007               	bcf	7,0	;volatile
  3044     057F                     i1l1206:
  3045                           
  3046                           ;./LCD.h: 28:  Lcd_Port(a);
  3047     057F  0873               	movf	i1Lcd_Cmd@a,w
  3048     0580  120A  118A  251D  120A  118A  	fcall	i1_Lcd_Port
  3049     0585                     i1l1208:
  3050                           
  3051                           ;./LCD.h: 29:  RC2 = 1;
  3052     0585  1283               	bcf	3,5	;RP0=0, select bank0
  3053     0586  1303               	bcf	3,6	;RP1=0, select bank0
  3054     0587  1507               	bsf	7,2	;volatile
  3055     0588                     i1l1210:
  3056                           
  3057                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3058     0588  3006               	movlw	6
  3059     0589  00F2               	movwf	??i1_Lcd_Cmd+1
  3060     058A  3030               	movlw	48
  3061     058B  00F1               	movwf	??i1_Lcd_Cmd
  3062     058C                     u106_27:
  3063     058C  0BF1               	decfsz	??i1_Lcd_Cmd,f
  3064     058D  2D8C               	goto	u106_27
  3065     058E  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  3066     058F  2D8C               	goto	u106_27
  3067     0590  0000               	nop
  3068     0591                     i1l1212:
  3069                           
  3070                           ;./LCD.h: 31:         RC2 = 0;
  3071     0591  1283               	bcf	3,5	;RP0=0, select bank0
  3072     0592  1303               	bcf	3,6	;RP1=0, select bank0
  3073     0593  1107               	bcf	7,2	;volatile
  3074     0594                     i1l72:
  3075     0594  0008               	return
  3076     0595                     __end_ofi1_Lcd_Cmd:
  3077                           
  3078                           	psect	text17
  3079     051D                     __ptext17:	
  3080 ;; *************** function i1_Lcd_Port *****************
  3081 ;; Defined at:
  3082 ;;		line 3 in file "./LCD.h"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  a               1    wreg     unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  a               1    0[COMMON] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         1       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0
  3099 ;;      Totals:         1       0       0       0       0
  3100 ;;Total ram usage:        1 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; This function calls:
  3103 ;;		Nothing
  3104 ;; This function is called by:
  3105 ;;		i1_Lcd_Cmd
  3106 ;;		i1_Lcd_Write_Char
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110     051D                     i1_Lcd_Port:	
  3111                           ;psect for function i1_Lcd_Port
  3112                           
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in i1_Lcd_Port: [wreg]
  3116                           ;i1Lcd_Port@a stored from wreg
  3117     051D  00F0               	movwf	i1Lcd_Port@a
  3118     051E                     i1l1164:
  3119                           
  3120                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  3121     051E  1C70               	btfss	i1Lcd_Port@a,0
  3122     051F  2D21               	goto	u48_21
  3123     0520  2D22               	goto	u48_20
  3124     0521                     u48_21:
  3125     0521  2D26               	goto	i1l61
  3126     0522                     u48_20:
  3127     0522                     i1l1166:
  3128                           
  3129                           ;./LCD.h: 6:   RC4 = 1;
  3130     0522  1283               	bcf	3,5	;RP0=0, select bank0
  3131     0523  1303               	bcf	3,6	;RP1=0, select bank0
  3132     0524  1607               	bsf	7,4	;volatile
  3133     0525  2D29               	goto	i1l62
  3134     0526                     i1l61:	
  3135                           ;./LCD.h: 7:  else
  3136                           
  3137                           
  3138                           ;./LCD.h: 8:   RC4 = 0;
  3139     0526  1283               	bcf	3,5	;RP0=0, select bank0
  3140     0527  1303               	bcf	3,6	;RP1=0, select bank0
  3141     0528  1207               	bcf	7,4	;volatile
  3142     0529                     i1l62:
  3143                           
  3144                           ;./LCD.h: 10:  if(a & 2)
  3145     0529  1CF0               	btfss	i1Lcd_Port@a,1
  3146     052A  2D2C               	goto	u49_21
  3147     052B  2D2D               	goto	u49_20
  3148     052C                     u49_21:
  3149     052C  2D2F               	goto	i1l63
  3150     052D                     u49_20:
  3151     052D                     i1l1168:
  3152                           
  3153                           ;./LCD.h: 11:   RC5 = 1;
  3154     052D  1687               	bsf	7,5	;volatile
  3155     052E  2D30               	goto	i1l64
  3156     052F                     i1l63:	
  3157                           ;./LCD.h: 12:  else
  3158                           
  3159                           
  3160                           ;./LCD.h: 13:   RC5 = 0;
  3161     052F  1287               	bcf	7,5	;volatile
  3162     0530                     i1l64:
  3163                           
  3164                           ;./LCD.h: 15:  if(a & 4)
  3165     0530  1D70               	btfss	i1Lcd_Port@a,2
  3166     0531  2D33               	goto	u50_21
  3167     0532  2D34               	goto	u50_20
  3168     0533                     u50_21:
  3169     0533  2D36               	goto	i1l65
  3170     0534                     u50_20:
  3171     0534                     i1l1170:
  3172                           
  3173                           ;./LCD.h: 16:   RC6 = 1;
  3174     0534  1707               	bsf	7,6	;volatile
  3175     0535  2D37               	goto	i1l66
  3176     0536                     i1l65:	
  3177                           ;./LCD.h: 17:  else
  3178                           
  3179                           
  3180                           ;./LCD.h: 18:   RC6 = 0;
  3181     0536  1307               	bcf	7,6	;volatile
  3182     0537                     i1l66:
  3183                           
  3184                           ;./LCD.h: 20:  if(a & 8)
  3185     0537  1DF0               	btfss	i1Lcd_Port@a,3
  3186     0538  2D3A               	goto	u51_21
  3187     0539  2D3B               	goto	u51_20
  3188     053A                     u51_21:
  3189     053A  2D3D               	goto	i1l67
  3190     053B                     u51_20:
  3191     053B                     i1l1172:
  3192                           
  3193                           ;./LCD.h: 21:   RC7 = 1;
  3194     053B  1787               	bsf	7,7	;volatile
  3195     053C  2D3E               	goto	i1l69
  3196     053D                     i1l67:	
  3197                           ;./LCD.h: 22:  else
  3198                           
  3199                           
  3200                           ;./LCD.h: 23:   RC7 = 0;
  3201     053D  1387               	bcf	7,7	;volatile
  3202     053E                     i1l69:
  3203     053E  0008               	return
  3204     053F                     __end_ofi1_Lcd_Port:
  3205     007E                     btemp	set	126	;btemp
  3206     007E                     wtemp0	set	126
  3207                           
  3208                           	psect	config
  3209                           
  3210                           ;Config register CONFIG @ 0x2007
  3211                           ;	Oscillator Selection bits
  3212                           ;	FOSC = HS, HS oscillator
  3213                           ;	Watchdog Timer Enable bit
  3214                           ;	WDTE = OFF, WDT disabled
  3215                           ;	Power-up Timer Enable bit
  3216                           ;	PWRTE = ON, PWRT enabled
  3217                           ;	Brown-out Reset Enable bit
  3218                           ;	BOREN = ON, BOR enabled
  3219                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3220                           ;	LVP = 0x1, unprogrammed default
  3221                           ;	Data EEPROM Memory Code Protection bit
  3222                           ;	CPD = 0x1, unprogrammed default
  3223                           ;	Flash Program Memory Write Enable bits
  3224                           ;	WRT = 0x3, unprogrammed default
  3225                           ;	In-Circuit Debugger Mode bit
  3226                           ;	DEBUG = 0x1, unprogrammed default
  3227                           ;	Flash Program Memory Code Protection bit
  3228                           ;	CP = 0x1, unpro  3229     2007                     	org	8199
  3230     2007  3FF2               	dw	16370

Data Sizes:
    Strings     102
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[9]), STR_9(CODE[17]), STR_8(CODE[16]), STR_7(CODE[14]), 
		 -> STR_6(CODE[16]), STR_5(CODE[14]), STR_4(CODE[9]), STR_3(CODE[10]), 
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    _tes->i1_Lcd_Set_Cursor
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Padrao->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3836
                                             10 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                         _Lcd_Padrao
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _PesoCambuca
                        _PesoEstoque
 ---------------------------------------------------------------------------------
 (1) _PesoEstoque                                          6     4      2      23
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _PesoCambuca                                          6     4      2      23
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Padrao                                           0     0      0    1796
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     598
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1    1088
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tes                                                  4     4      0     810
                                             10 COMMON     4     4      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_String                                   3     3      0     268
                                              5 COMMON     3     3      0
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     6     5      1     432
                                              4 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Padrao
     _Lcd_Clear
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _PesoCambuca
   _PesoEstoque

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Jul 22 00:12:17 2022

                         pc 0002                          l61 0548                          l62 0549  
                        l63 054F                          l64 0550                          l72 057A  
                        l65 0556                          l81 037C                          l66 0557  
                        l67 055D                          l75 05A1                          l84 02D8  
                        l69 055E                          l93 04D1                          l87 0475  
                        fsr 0004                         l123 03FF                         l141 009B  
                       l126 043C                         l135 0074                         l144 00A8  
                       l136 0068                         l129 04F7                         l138 007C  
                       l149 0126                         l158 01EA                         _RC0 0038  
                       _RC2 003A                         _RC4 003C                         _RC5 003D  
                       _RC6 003E                         _RC7 003F                         u430 0546  
                       u431 0545                         u440 054D                         u520 0339  
                       u441 054C                         u521 0338                         u450 0554  
                       u451 0553                         u460 055B                         u540 035E  
                       u700 00A8                         u461 055A                         u541 035D  
                       u701 00A7                         u710 00AF                         u535 033F  
                       u711 00AE                         u560 04D1                         u800 01C8  
                       u720 00EB                         u561 04D0                         u801 01C7  
                       u721 00EA                         u810 01DD                         u730 00FF  
                       u555 0364                         u475 044A                         u811 01DC  
                       u731 00FE                         u820 01E6                         u740 0107  
                       u660 006C                         u821 01E5                         u741 0106  
                       u725 00E7                         u661 006B                         u830 01EA  
                       u750 0125                         u670 007C                         u831 01E9  
                       u815 01D9                         u751 0124                         u735 00FB  
                       u671 007B                         u840 01F3                         u760 013B  
                       u680 0080                         u841 01F2                         u761 013A  
                       u681 007F                         u770 014F                         u690 00A2  
                       u907 03DB                         u771 014E                         u691 00A1  
                       u780 0157                         u917 03E5                         u781 0156  
                       u765 0137                         u790 0194                         u927 03EF  
                       u791 0193                         u775 014B                         u937 0404  
                       u857 00CC                         u947 040E                         u795 0190  
                       u867 0175                         u957 0418                         u877 0200  
                       u967 0422                         u887 03C7                         u977 042C  
                       u897 03D1                         u987 045C                         u997 046F  
                       _tes 02D9                         fsr0 0004                        l1200 04BC  
                      l1130 0554                        l1202 04C4                        l1132 055B  
                      l1124 0542                        l1140 056C                        l1126 0546  
                      l1142 0577                        l1134 0562                        l1150 0455  
                      l1128 054D                        l1136 0563                        l1240 0298  
                      l1160 046B                        l1152 0458                        l1144 0440  
                      l1400 0082                        l1138 0569                        l1242 029E  
                      l1234 0276                        l1162 0472                        l1154 045F  
                      l1146 0446                        l1250 03DE                        l1410 00A2  
                      l1402 0087                        l1236 027C                        l1180 0346  
                      l1156 0462                        l1148 0447                        l1260 0411  
                      l1252 03E8                        l1244 03C3                        l1420 00D2  
                      l1412 00A9                        l1404 0091                        l1340 002F  
                      l1238 0287                        l1174 0595                        l1190 036B  
                      l1182 0349                        l1158 0468                        l1270 04E1  
                      l1262 041B                        l1246 03CA                        l1430 0116  
                      l1414 00AF                        l1406 0097                        l1422 00D7  
                      l1350 0036                        l1342 0032                        l1334 0025  
                      l1192 036E                        l1184 034F                        l1176 0334  
                      l1272 04E7                        l1264 0425                        l1256 0400  
                      l1248 03D4                        l1440 014F                        l1432 011D  
                      l1424 00EB                        l1416 00BE                        l1408 009C  
                      l1360 003F                        l1352 0037                        l1344 0033  
                      l1336 002B                        l1194 0374                        l1178 0339  
                      l1186 0358                        l1258 0407                        l1450 017B  
                      l1442 0157                        l1426 00FF                        l1418 00C4  
                      l1370 004A                        l1362 0044                        l1354 0038  
                      l1346 0034                        l1338 002C                        l1188 035E  
                      l1196 04AC                        l1268 04D2                        l1460 019E  
                      l1444 0158                        l1436 0127                        l1428 0107  
                      l1452 0180                        l1380 0055                        l1372 004D  
                      l1364 0047                        l1356 003B                        l1348 0035  
                      l1198 04AF                        l1470 01C2                        l1462 01A8  
                      l1454 0194                        l1446 0167                        l1438 013B  
                      l1390 0065                        l1382 0056                        l1374 004E  
                      l1366 0048                        l1358 003E                        l1480 01DE  
                      l1464 01AE                        l1456 0198                        l1448 016D  
                      l1392 006C                        l1384 005B                        l1376 0051  
                      l1368 0049                        l1482 01E6                        l1466 01B8  
                      l1458 0199                        l1394 006E                        l1386 0060  
                      l1378 0052                        l1484 01ED                        l1476 01C9  
                      l1468 01BE                        l1396 0074                        l1388 0063  
                      l1486 01F3                        l1398 0080                        l1488 01F8  
                      ?_tes 0070                        STR_1 023F                        STR_2 024D  
                      STR_3 025A                        STR_4 026D                        STR_5 0231  
                      STR_6 0221                        STR_7 0231                        STR_8 0221  
                      STR_9 0210                        u1007 0282                        u1017 0293  
                      u1027 02A4                        u1037 0572                        i1l61 0526  
                      i1l62 0529                        i1l63 052F                        i1l64 0530  
                      i1l72 0594                        i1l65 0536                        i1l81 03C2  
                      i1l66 0537                        i1l67 053D                        i1l75 05AE  
                      i1l69 053E                        i1l93 051C                        i1l87 04A8  
         ?_Lcd_Write_String 0070                        _main 0025                        btemp 007E  
                      start 0010          ??_Lcd_Write_String 0025             __end_of_Lcd_Cmd 057B  
                     ??_tes 007A                  _Lcd_Padrao 04D2                       ?_main 0070  
                     STR_10 0264                       i1l120 0326                       i1l116 02F9  
         ?i1_Lcd_Set_Cursor 0074                       _TMR1H 000F                       _TMR1L 000E  
                     u50_20 0534                       u50_21 0533                       u51_20 053B  
                     u51_21 053A                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       u60_20 03A6  
                     u60_21 03A5                       u61_25 03AC                       u62_20 051C  
                     u62_21 051B                       u63_20 02DF                       u63_21 02DE  
                     u48_20 0522                       u64_20 02F1                       u48_21 0521  
                     u64_21 02F0                       u49_20 052D                       u65_20 02FD  
                     u49_21 052C                       u65_21 02FC                       _TRISA 0085  
                     _TRISB 0086                       u57_25 0483                       _TRISC 0087  
                     _TRISD 0088                       u58_20 0383                       u58_21 0382  
                     u59_25 0389                 ?i1_Lcd_Port 0070          ??i1_Lcd_Set_Cursor 0075  
                     _conta 002D                       _valor 0033                       pclath 000A  
                     status 0003                       wtemp0 007E               ??_PesoCambuca 0022  
          __end_of_Lcd_Init 02D9            __end_of_Lcd_Port 055F             __initialization 0013  
              __end_of_main 020A               ??_PesoEstoque 0022                      ??_main 002A  
                    _ADRESH 001E                      _ADRESL 009E                      i1l1210 0588  
                    i1l1212 0591                      i1l1204 057C                      i1l1220 048E  
                    i1l1300 0509                      i1l1206 057F                      i1l1230 04A1  
                    i1l1222 0491                      i1l1214 0477                      i1l1302 050F  
                    i1l1310 02DF                      i1l1208 0585                      i1l1232 04A5  
                    i1l1224 0495                      i1l1216 047D                      i1l1320 02F4  
                    i1l1312 02E0                      i1l1170 0534                      i1l1226 0498  
                    i1l1218 0480                      i1l1330 0320                      i1l1322 02FD  
                    i1l1314 02EA                      i1l1172 053B                      i1l1164 051E  
                    i1l1228 049E                      i1l1324 02FF                      i1l1316 02F1  
                    i1l1308 02D9                      i1l1166 0522                      i1l1326 030C  
                    i1l1318 02F2                      i1l1168 052D                      i1l1280 0390  
                    i1l1328 0312                      i1l1274 05A2                      i1l1290 03B3  
                    i1l1282 0393                      i1l1292 03B6                      i1l1284 0399  
                    i1l1276 037E                      i1l1294 03BC                      i1l1278 0383  
                    i1l1286 03A0                      u104_27 0493                      i1l1288 03A6  
                    i1l1296 04F9                      i1l1298 04FC                      u105_27 04A3  
                    u106_27 058C           ?i1_Lcd_Write_Char 0070                   ??_Lcd_Cmd 0021  
                    _TMR1IF 0060                ?i1_Lcd_Clear 0070          ??i1_Lcd_Write_Char 0071  
         __end_ofi1_Lcd_Cmd 0595           i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073  
       __end_of_PesoCambuca 043D                 ?_Lcd_Padrao 0070         __end_of_PesoEstoque 0400  
                    saved_w 007E             Lcd_Set_Cursor@a 0026             Lcd_Set_Cursor@b 0024  
           Lcd_Set_Cursor@y 0028             Lcd_Set_Cursor@z 0027     __end_of__initialization 0021  
         __end_of_Lcd_Clear 05A2              __pcstackCOMMON 0070              _Lcd_Set_Cursor 0331  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                  __pbssBANK0 002D  
               _PesoCambuca 0400                  __pmaintext 0025                 _PesoEstoque 03C3  
                __pintentry 0004      __end_of_Lcd_Set_Cursor 037D                ??i1_Lcd_Port 0070  
                ??_Lcd_Init 0024                  ??_Lcd_Port 0020                  __stringtab 020A  
            _Lcd_Write_Char 043D                     _Lcd_Cmd 055F          __end_ofi1_Lcd_Port 053F  
           ?_Lcd_Set_Cursor 0024                     __ptext1 03C3                     __ptext2 0400  
                   __ptext3 04D2                     __ptext4 04A9                     __ptext5 043D  
                   __ptext6 0331                     __ptext7 0595                     __ptext8 0276  
                   __ptext9 055F                   _T1CONbits 0010  __end_ofi1_Lcd_Write_String 051D  
    __end_of_Lcd_Write_Char 0476        end_of_initialization 0021                   Lcd_Port@a 0020  
           PesoCambuca@peso 0024                ??_Lcd_Padrao 002A                   i1_Lcd_Cmd 057B  
                 _PORTBbits 0006                   _PORTDbits 0008             ?_Lcd_Write_Char 0070  
         Lcd_Write_String@a 0027           Lcd_Write_String@i 0025          __end_of_Lcd_Padrao 04F8  
                 _Lcd_Clear 0595                  ?i1_Lcd_Cmd 0070            _Lcd_Write_String 04A9  
       start_initialization 0013                 __end_of_tes 0331            i1_Lcd_Set_Cursor 037D  
              ?_PesoCambuca 0020                  ?_Lcd_Clear 0070                ?_PesoEstoque 0020  
           Lcd_Write_Char@a 0024             Lcd_Write_Char@y 0023                   ___latbits 0002  
             __pcstackBANK0 0020        i1Lcd_Write_Char@temp 0072                    ?_Lcd_Cmd 0070  
          ??_Lcd_Set_Cursor 0025            i1_Lcd_Write_Char 0476                 ??i1_Lcd_Cmd 0071  
      i1Lcd_Set_Cursor@temp 0079                   __pstrings 020A                   _aux_timer 0031  
         interrupt_function 0004               ??i1_Lcd_Clear 0074                    _PIE1bits 008C  
        i1_Lcd_Write_String 04F8                    Lcd_Cmd@a 0023                    _PIR1bits 000C  
               ??_Lcd_Clear 0024         ?i1_Lcd_Write_String 0070                  _ADCON0bits 001F  
               __stringbase 020F                  _ADCON1bits 009F            ??_Lcd_Write_Char 0021  
                  _Lcd_Init 0276                    _Lcd_Port 053F        ??i1_Lcd_Write_String 0075  
  __end_of_Lcd_Write_String 04D2                _peso_cambuca 0037         __end_ofi1_Lcd_Clear 05AF  
              _peso_estoque 0035          __end_of__stringtab 0210    __end_ofi1_Lcd_Set_Cursor 03C3  
         i1Lcd_Set_Cursor@a 0076           i1Lcd_Set_Cursor@b 0074           i1Lcd_Set_Cursor@y 0078  
         i1Lcd_Set_Cursor@z 0077                    __ptext10 053F                    __ptext11 02D9  
                  __ptext12 04F8                    __ptext13 0476                    __ptext14 037D  
                  __ptext15 05A2                    __ptext16 057B                    __ptext17 051D  
               i1Lcd_Port@a 0070                 _interrupcao 002F         i1Lcd_Write_String@a 0075  
       i1Lcd_Write_String@i 0076                  _INTCONbits 000B          Lcd_Write_Char@temp 0022  
                  intlevel1 0000    __end_ofi1_Lcd_Write_Char 04A9                 i1_Lcd_Clear 05A2  
                i1Lcd_Cmd@a 0073                   stringcode 020A          Lcd_Set_Cursor@temp 0029  
                _OPTION_REG 0081                  i1_Lcd_Port 051D                    stringdir 020A  
                  stringtab 020A             PesoEstoque@peso 0024  
