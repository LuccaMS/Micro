

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jul 21 21:27:53 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0094                     	;# 
   111     0098                     	;# 
   112     0099                     	;# 
   113     009C                     	;# 
   114     009D                     	;# 
   115     009E                     	;# 
   116     009F                     	;# 
   117     010C                     	;# 
   118     010D                     	;# 
   119     010E                     	;# 
   120     010F                     	;# 
   121     018C                     	;# 
   122     018D                     	;# 
   123     0000                     	;# 
   124     0001                     	;# 
   125     0002                     	;# 
   126     0003                     	;# 
   127     0004                     	;# 
   128     0005                     	;# 
   129     0006                     	;# 
   130     0007                     	;# 
   131     0008                     	;# 
   132     0009                     	;# 
   133     000A                     	;# 
   134     000B                     	;# 
   135     000C                     	;# 
   136     000D                     	;# 
   137     000E                     	;# 
   138     000E                     	;# 
   139     000F                     	;# 
   140     0010                     	;# 
   141     0011                     	;# 
   142     0012                     	;# 
   143     0013                     	;# 
   144     0014                     	;# 
   145     0015                     	;# 
   146     0015                     	;# 
   147     0016                     	;# 
   148     0017                     	;# 
   149     0018                     	;# 
   150     0019                     	;# 
   151     001A                     	;# 
   152     001B                     	;# 
   153     001B                     	;# 
   154     001C                     	;# 
   155     001D                     	;# 
   156     001E                     	;# 
   157     001F                     	;# 
   158     0081                     	;# 
   159     0085                     	;# 
   160     0086                     	;# 
   161     0087                     	;# 
   162     0088                     	;# 
   163     0089                     	;# 
   164     008C                     	;# 
   165     008D                     	;# 
   166     008E                     	;# 
   167     0091                     	;# 
   168     0092                     	;# 
   169     0093                     	;# 
   170     0094                     	;# 
   171     0098                     	;# 
   172     0099                     	;# 
   173     009C                     	;# 
   174     009D                     	;# 
   175     009E                     	;# 
   176     009F                     	;# 
   177     010C                     	;# 
   178     010D                     	;# 
   179     010E                     	;# 
   180     010F                     	;# 
   181     018C                     	;# 
   182     018D                     	;# 
   183     0006                     _PORTBbits	set	6
   184     001E                     _ADRESH	set	30
   185     001F                     _ADCON0bits	set	31
   186     0008                     _PORTD	set	8
   187     0007                     _PORTC	set	7
   188     0006                     _PORTB	set	6
   189     0005                     _PORTA	set	5
   190     0008                     _PORTDbits	set	8
   191     000B                     _INTCONbits	set	11
   192     0010                     _T1CONbits	set	16
   193     000F                     _TMR1H	set	15
   194     000E                     _TMR1L	set	14
   195     000C                     _PIR1bits	set	12
   196     0060                     _TMR1IF	set	96
   197     003A                     _RC2	set	58
   198     0038                     _RC0	set	56
   199     003F                     _RC7	set	63
   200     003E                     _RC6	set	62
   201     003D                     _RC5	set	61
   202     003C                     _RC4	set	60
   203     009E                     _ADRESL	set	158
   204     009F                     _ADCON1bits	set	159
   205     008C                     _PIE1bits	set	140
   206     0081                     _OPTION_REG	set	129
   207     0088                     _TRISD	set	136
   208     0087                     _TRISC	set	135
   209     0086                     _TRISB	set	134
   210     0085                     _TRISA	set	133
   211                           
   212                           	psect	strings
   213     0212                     __pstrings:
   214     0212                     stringtab:
   215     0212                     __stringtab:
   216     0212                     stringcode:	
   217                           ;	String table - string pointers are 1 byte each
   218                           
   219     0212                     stringdir:
   220     0212  3002               	movlw	high stringdir
   221     0213  008A               	movwf	10
   222     0214  0804               	movf	4,w
   223     0215  0A84               	incf	4,f
   224     0216  0782               	addwf	2,f
   225     0217                     __stringbase:
   226     0217  3400               	retlw	0
   227     0218                     __end_of__stringtab:
   228     0218                     STR_1:
   229     0218  3449               	retlw	73	;'I'
   230     0219  344E               	retlw	78	;'N'
   231     021A  3454               	retlw	84	;'T'
   232     021B  3445               	retlw	69	;'E'
   233     021C  3452               	retlw	82	;'R'
   234     021D  3452               	retlw	82	;'R'
   235     021E  344F               	retlw	79	;'O'
   236     021F  344D               	retlw	77	;'M'
   237     0220  3450               	retlw	80	;'P'
   238     0221  3449               	retlw	73	;'I'
   239     0222  3444               	retlw	68	;'D'
   240     0223  344F               	retlw	79	;'O'
   241     0224  342E               	retlw	46	;'.'
   242     0225  342E               	retlw	46	;'.'
   243     0226  342E               	retlw	46	;'.'
   244     0227  3400               	retlw	0
   245     0228                     STR_5:
   246     0228  3452               	retlw	82	;'R'
   247     0229  3441               	retlw	65	;'A'
   248     022A  3443               	retlw	67	;'C'
   249     022B  3441               	retlw	65	;'A'
   250     022C  344F               	retlw	79	;'O'
   251     022D  3420               	retlw	32	;' '
   252     022E  3443               	retlw	67	;'C'
   253     022F  344F               	retlw	79	;'O'
   254     0230  344C               	retlw	76	;'L'
   255     0231  344F               	retlw	79	;'O'
   256     0232  3443               	retlw	67	;'C'
   257     0233  3441               	retlw	65	;'A'
   258     0234  3444               	retlw	68	;'D'
   259     0235  3441               	retlw	65	;'A'
   260     0236  342E               	retlw	46	;'.'
   261     0237  3400               	retlw	0
   262     0238                     STR_4:
   263     0238  3444               	retlw	68	;'D'
   264     0239  3445               	retlw	69	;'E'
   265     023A  3453               	retlw	83	;'S'
   266     023B  3450               	retlw	80	;'P'
   267     023C  3445               	retlw	69	;'E'
   268     023D  344A               	retlw	74	;'J'
   269     023E  3441               	retlw	65	;'A'
   270     023F  344E               	retlw	78	;'N'
   271     0240  3444               	retlw	68	;'D'
   272     0241  344F               	retlw	79	;'O'
   273     0242  342E               	retlw	46	;'.'
   274     0243  342E               	retlw	46	;'.'
   275     0244  342E               	retlw	46	;'.'
   276     0245  3400               	retlw	0
   277     0246                     STR_2:
   278     0246  3453               	retlw	83	;'S'
   279     0247  3449               	retlw	73	;'I'
   280     0248  3447               	retlw	71	;'G'
   281     0249  344D               	retlw	77	;'M'
   282     024A  3441               	retlw	65	;'A'
   283     024B  3420               	retlw	32	;' '
   284     024C  3444               	retlw	68	;'D'
   285     024D  344F               	retlw	79	;'O'
   286     024E  3447               	retlw	71	;'G'
   287     024F  3400               	retlw	0
   288     0250                     STR_3:
   289     0250  3447               	retlw	71	;'G'
   290     0251  3452               	retlw	82	;'R'
   291     0252  3449               	retlw	73	;'I'
   292     0253  344E               	retlw	78	;'N'
   293     0254  3444               	retlw	68	;'D'
   294     0255  3453               	retlw	83	;'S'
   295     0256  3445               	retlw	69	;'E'
   296     0257  3454               	retlw	84	;'T'
   297     0258  3400               	retlw	0
   298                           
   299                           	psect	cinit
   300     0013                     start_initialization:	
   301                           ; #config settings
   302                           
   303     0013                     __initialization:
   304                           
   305                           ; Clear objects allocated to BANK0
   306     0013  1283               	bcf	3,5	;RP0=0, select bank0
   307     0014  1303               	bcf	3,6	;RP1=0, select bank0
   308     0015  01AD               	clrf	__pbssBANK0& (0+127)
   309     0016  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   310     0017  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   311     0018  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   312     0019  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   313     001A  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   314     001B  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   315     001C  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   316     001D  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   317     001E  01B6               	clrf	(__pbssBANK0+9)& (0+127)
   318     001F  01B7               	clrf	(__pbssBANK0+10)& (0+127)
   319     0020  01B8               	clrf	(__pbssBANK0+11)& (0+127)
   320     0021                     end_of_initialization:	
   321                           ;End of C runtime variable initialization code
   322                           
   323     0021                     __end_of__initialization:
   324     0021  0183               	clrf	3
   325     0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   326                           
   327                           	psect	bssBANK0
   328     002D                     __pbssBANK0:
   329     002D                     _conta:
   330     002D                     	ds	2
   331     002F                     _interrupcao:
   332     002F                     	ds	2
   333     0031                     _aux_despejo:
   334     0031                     	ds	2
   335     0033                     _valor:
   336     0033                     	ds	2
   337     0035                     _peso_estoque:
   338     0035                     	ds	2
   339     0037                     _peso_cambuca:
   340     0037                     	ds	2
   341                           
   342                           	psect	cstackCOMMON
   343     0070                     __pcstackCOMMON:
   344     0070                     ?_Lcd_Port:
   345     0070                     ?_Lcd_Cmd:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_Lcd_Clear:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_Lcd_Init:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?_Lcd_Write_Char:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_Lcd_Write_String:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_tes:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ?_Lcd_Padrao:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ?_main:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?i1_Lcd_Port:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ??i1_Lcd_Port:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?i1_Lcd_Cmd:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ?i1_Lcd_Clear:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?i1_Lcd_Write_Char:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?i1_Lcd_Write_String:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     i1Lcd_Port@a:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           ; 1 bytes @ 0x0
   392     0070                     	ds	1
   393     0071                     ??i1_Lcd_Cmd:
   394     0071                     ??i1_Lcd_Write_Char:	
   395                           ; 1 bytes @ 0x1
   396                           
   397                           
   398                           ; 1 bytes @ 0x1
   399     0071                     	ds	1
   400     0072                     i1Lcd_Write_Char@temp:
   401                           
   402                           ; 1 bytes @ 0x2
   403     0072                     	ds	1
   404     0073                     i1Lcd_Cmd@a:
   405     0073                     i1Lcd_Write_Char@y:	
   406                           ; 1 bytes @ 0x3
   407                           
   408                           
   409                           ; 1 bytes @ 0x3
   410     0073                     	ds	1
   411     0074                     ??i1_Lcd_Clear:
   412     0074                     ?i1_Lcd_Set_Cursor:	
   413                           ; 1 bytes @ 0x4
   414                           
   415     0074                     i1Lcd_Set_Cursor@b:	
   416                           ; 1 bytes @ 0x4
   417                           
   418     0074                     i1Lcd_Write_Char@a:	
   419                           ; 1 bytes @ 0x4
   420                           
   421                           
   422                           ; 1 bytes @ 0x4
   423     0074                     	ds	1
   424     0075                     ??i1_Lcd_Set_Cursor:
   425     0075                     ??i1_Lcd_Write_String:	
   426                           ; 1 bytes @ 0x5
   427                           
   428     0075                     i1Lcd_Write_String@a:	
   429                           ; 1 bytes @ 0x5
   430                           
   431                           
   432                           ; 1 bytes @ 0x5
   433     0075                     	ds	1
   434     0076                     i1Lcd_Set_Cursor@a:
   435     0076                     i1Lcd_Write_String@i:	
   436                           ; 1 bytes @ 0x6
   437                           
   438                           
   439                           ; 2 bytes @ 0x6
   440     0076                     	ds	1
   441     0077                     i1Lcd_Set_Cursor@z:
   442                           
   443                           ; 1 bytes @ 0x7
   444     0077                     	ds	1
   445     0078                     i1Lcd_Set_Cursor@y:
   446                           
   447                           ; 1 bytes @ 0x8
   448     0078                     	ds	1
   449     0079                     i1Lcd_Set_Cursor@temp:
   450                           
   451                           ; 1 bytes @ 0x9
   452     0079                     	ds	1
   453     007A                     ??_tes:
   454                           
   455                           ; 1 bytes @ 0xA
   456     007A                     	ds	4
   457                           
   458                           	psect	cstackBANK0
   459     0020                     __pcstackBANK0:
   460     0020                     ??_Lcd_Port:
   461     0020                     Lcd_Port@a:	
   462                           ; 1 bytes @ 0x0
   463                           
   464                           
   465                           ; 1 bytes @ 0x0
   466     0020                     	ds	1
   467     0021                     ??_Lcd_Cmd:
   468     0021                     ??_Lcd_Write_Char:	
   469                           ; 1 bytes @ 0x1
   470                           
   471                           
   472                           ; 1 bytes @ 0x1
   473     0021                     	ds	1
   474     0022                     Lcd_Write_Char@temp:
   475                           
   476                           ; 1 bytes @ 0x2
   477     0022                     	ds	1
   478     0023                     Lcd_Cmd@a:
   479     0023                     Lcd_Write_Char@y:	
   480                           ; 1 bytes @ 0x3
   481                           
   482                           
   483                           ; 1 bytes @ 0x3
   484     0023                     	ds	1
   485     0024                     ??_Lcd_Clear:
   486     0024                     ?_Lcd_Set_Cursor:	
   487                           ; 1 bytes @ 0x4
   488                           
   489     0024                     ??_Lcd_Init:	
   490                           ; 1 bytes @ 0x4
   491                           
   492     0024                     Lcd_Set_Cursor@b:	
   493                           ; 1 bytes @ 0x4
   494                           
   495     0024                     Lcd_Write_Char@a:	
   496                           ; 1 bytes @ 0x4
   497                           
   498                           
   499                           ; 1 bytes @ 0x4
   500     0024                     	ds	1
   501     0025                     ??_Lcd_Set_Cursor:
   502     0025                     ??_Lcd_Write_String:	
   503                           ; 1 bytes @ 0x5
   504                           
   505     0025                     Lcd_Write_String@i:	
   506                           ; 1 bytes @ 0x5
   507                           
   508                           
   509                           ; 2 bytes @ 0x5
   510     0025                     	ds	1
   511     0026                     Lcd_Set_Cursor@a:
   512                           
   513                           ; 1 bytes @ 0x6
   514     0026                     	ds	1
   515     0027                     Lcd_Set_Cursor@z:
   516     0027                     Lcd_Write_String@a:	
   517                           ; 1 bytes @ 0x7
   518                           
   519                           
   520                           ; 1 bytes @ 0x7
   521     0027                     	ds	1
   522     0028                     Lcd_Set_Cursor@y:
   523                           
   524                           ; 1 bytes @ 0x8
   525     0028                     	ds	1
   526     0029                     Lcd_Set_Cursor@temp:
   527                           
   528                           ; 1 bytes @ 0x9
   529     0029                     	ds	1
   530     002A                     ??_Lcd_Padrao:
   531     002A                     ??_main:	
   532                           ; 1 bytes @ 0xA
   533                           
   534                           
   535                           ; 1 bytes @ 0xA
   536     002A                     	ds	3
   537                           
   538                           	psect	maintext
   539     0025                     __pmaintext:	
   540 ;;
   541 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   542 ;;
   543 ;; *************** function _main *****************
   544 ;; Defined at:
   545 ;;		line 81 in file "newmain.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      void 
   552 ;; Registers used:
   553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : B00/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          0       3       0       0       0
   562 ;;      Totals:         0       3       0       0       0
   563 ;;Total ram usage:        3 bytes
   564 ;; Hardware stack levels required when called: 8
   565 ;; This function calls:
   566 ;;		_Lcd_Clear
   567 ;;		_Lcd_Init
   568 ;;		_Lcd_Padrao
   569 ;;		_Lcd_Set_Cursor
   570 ;;		_Lcd_Write_String
   571 ;; This function is called by:
   572 ;;		Startup code after reset
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576     0025                     _main:	
   577                           ;psect for function _main
   578                           
   579     0025                     l1219:	
   580                           ;incstack = 0
   581                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   582                           
   583                           
   584                           ;newmain.c: 82:     TRISA = 0b11111111;
   585     0025  30FF               	movlw	255
   586     0026  1683               	bsf	3,5	;RP0=1, select bank1
   587     0027  1303               	bcf	3,6	;RP1=0, select bank1
   588     0028  0085               	movwf	5	;volatile
   589                           
   590                           ;newmain.c: 83:     TRISB = 0b00000011;
   591     0029  3003               	movlw	3
   592     002A  0086               	movwf	6	;volatile
   593     002B                     l1221:
   594                           
   595                           ;newmain.c: 84:     TRISC = 0;
   596     002B  0187               	clrf	7	;volatile
   597     002C                     l1223:
   598                           
   599                           ;newmain.c: 85:     TRISD = 0;
   600     002C  0188               	clrf	8	;volatile
   601                           
   602                           ;newmain.c: 86:     OPTION_REG = 0b00111111;
   603     002D  303F               	movlw	63
   604     002E  0081               	movwf	1	;volatile
   605     002F                     l1225:
   606                           
   607                           ;newmain.c: 87:     PORTA = 0;
   608     002F  1283               	bcf	3,5	;RP0=0, select bank0
   609     0030  1303               	bcf	3,6	;RP1=0, select bank0
   610     0031  0185               	clrf	5	;volatile
   611     0032                     l1227:
   612                           
   613                           ;newmain.c: 88:     PORTB = 0;
   614     0032  0186               	clrf	6	;volatile
   615     0033                     l1229:
   616                           
   617                           ;newmain.c: 89:     PORTC = 0;
   618     0033  0187               	clrf	7	;volatile
   619     0034                     l1231:
   620                           
   621                           ;newmain.c: 90:     PORTD = 0;
   622     0034  0188               	clrf	8	;volatile
   623     0035                     l1233:
   624                           
   625                           ;newmain.c: 92:     INTCONbits.GIE = 1;
   626     0035  178B               	bsf	11,7	;volatile
   627     0036                     l1235:
   628                           
   629                           ;newmain.c: 93:     INTCONbits.PEIE = 1;
   630     0036  170B               	bsf	11,6	;volatile
   631     0037                     l1237:
   632                           
   633                           ;newmain.c: 94:     INTCONbits.INTE=1;
   634     0037  160B               	bsf	11,4	;volatile
   635     0038                     l1239:
   636                           
   637                           ;newmain.c: 98:     PIE1bits.TMR1IE = 1;
   638     0038  1683               	bsf	3,5	;RP0=1, select bank1
   639     0039  1303               	bcf	3,6	;RP1=0, select bank1
   640     003A  140C               	bsf	12,0	;volatile
   641     003B                     l1241:
   642                           
   643                           ;newmain.c: 99:     T1CONbits.TMR1CS = 0;
   644     003B  1283               	bcf	3,5	;RP0=0, select bank0
   645     003C  1303               	bcf	3,6	;RP1=0, select bank0
   646     003D  1090               	bcf	16,1	;volatile
   647     003E                     l1243:
   648                           
   649                           ;newmain.c: 100:     T1CONbits.T1CKPS0 = 1;
   650     003E  1610               	bsf	16,4	;volatile
   651     003F                     l1245:
   652                           
   653                           ;newmain.c: 101:     T1CONbits.T1CKPS1 = 1;
   654     003F  1690               	bsf	16,5	;volatile
   655                           
   656                           ;newmain.c: 107:     TMR1L = 0xDC;
   657     0040  30DC               	movlw	220
   658     0041  008E               	movwf	14	;volatile
   659                           
   660                           ;newmain.c: 108:     TMR1H = 0X0B;
   661     0042  300B               	movlw	11
   662     0043  008F               	movwf	15	;volatile
   663     0044                     l1247:
   664                           
   665                           ;newmain.c: 111:     ADCON1bits.PCFG0 = 0;
   666     0044  1683               	bsf	3,5	;RP0=1, select bank1
   667     0045  1303               	bcf	3,6	;RP1=0, select bank1
   668     0046  101F               	bcf	31,0	;volatile
   669     0047                     l1249:
   670                           
   671                           ;newmain.c: 112:     ADCON1bits.PCFG1 = 0;
   672     0047  109F               	bcf	31,1	;volatile
   673     0048                     l1251:
   674                           
   675                           ;newmain.c: 113:     ADCON1bits.PCFG2 = 1;
   676     0048  151F               	bsf	31,2	;volatile
   677     0049                     l1253:
   678                           
   679                           ;newmain.c: 114:     ADCON1bits.PCFG3 = 0;
   680     0049  119F               	bcf	31,3	;volatile
   681     004A                     l1255:
   682                           
   683                           ;newmain.c: 116:  ADCON0bits.ADCS0 = 0;
   684     004A  1283               	bcf	3,5	;RP0=0, select bank0
   685     004B  1303               	bcf	3,6	;RP1=0, select bank0
   686     004C  131F               	bcf	31,6	;volatile
   687     004D                     l1257:
   688                           
   689                           ;newmain.c: 117:     ADCON0bits.ADCS1 = 0;
   690     004D  139F               	bcf	31,7	;volatile
   691     004E                     l1259:
   692                           
   693                           ;newmain.c: 119:     ADCON1bits.ADFM = 0;
   694     004E  1683               	bsf	3,5	;RP0=1, select bank1
   695     004F  1303               	bcf	3,6	;RP1=0, select bank1
   696     0050  139F               	bcf	31,7	;volatile
   697     0051                     l1261:
   698                           
   699                           ;newmain.c: 122:     ADRESL = 0x00;
   700     0051  019E               	clrf	30	;volatile
   701     0052                     l1263:
   702                           
   703                           ;newmain.c: 123:     ADRESH = 0x00;
   704     0052  1283               	bcf	3,5	;RP0=0, select bank0
   705     0053  1303               	bcf	3,6	;RP1=0, select bank0
   706     0054  019E               	clrf	30	;volatile
   707     0055                     l1265:
   708                           
   709                           ;newmain.c: 125:     ADCON0bits.ADON = 1;
   710     0055  141F               	bsf	31,0	;volatile
   711     0056                     l1267:
   712                           
   713                           ;newmain.c: 127:     Lcd_Init();
   714     0056  120A  118A  2118  120A  118A  	fcall	_Lcd_Init
   715     005B                     l1269:
   716                           
   717                           ;newmain.c: 128:     Lcd_Padrao();
   718     005B  120A  118A  2334  120A  118A  	fcall	_Lcd_Padrao
   719     0060                     l1271:
   720                           
   721                           ;newmain.c: 129:     PORTDbits.RD5 = 1;
   722     0060  1283               	bcf	3,5	;RP0=0, select bank0
   723     0061  1303               	bcf	3,6	;RP1=0, select bank0
   724     0062  1688               	bsf	8,5	;volatile
   725     0063                     l1273:
   726                           
   727                           ;newmain.c: 130:     interrupcao = 0;
   728     0063  01AF               	clrf	_interrupcao
   729     0064  01B0               	clrf	_interrupcao+1
   730     0065                     l1275:
   731                           
   732                           ;newmain.c: 131:     aux_despejo = 0;
   733     0065  01B1               	clrf	_aux_despejo
   734     0066  01B2               	clrf	_aux_despejo+1
   735     0067                     l1277:
   736                           
   737                           ;newmain.c: 134:        ADCON0bits.CHS0 = 0;
   738     0067  1283               	bcf	3,5	;RP0=0, select bank0
   739     0068  1303               	bcf	3,6	;RP1=0, select bank0
   740     0069  119F               	bcf	31,3	;volatile
   741     006A                     l1279:
   742                           
   743                           ;newmain.c: 135:        ADCON0bits.CHS1 = 0;
   744     006A  121F               	bcf	31,4	;volatile
   745     006B                     l1281:
   746                           
   747                           ;newmain.c: 136:        ADCON0bits.CHS2 = 0;
   748     006B  129F               	bcf	31,5	;volatile
   749     006C                     l1283:
   750                           
   751                           ;newmain.c: 137:        ADCON0bits.GO = 1;
   752     006C  151F               	bsf	31,2	;volatile
   753     006D                     l1285:
   754                           
   755                           ;newmain.c: 138:        _delay((unsigned long)((10)*(4000000/4000000.0)));
   756     006D  3002               	movlw	2
   757     006E  1283               	bcf	3,5	;RP0=0, select bank0
   758     006F  1303               	bcf	3,6	;RP1=0, select bank0
   759     0070  00AA               	movwf	??_main
   760     0071                     u557:
   761     0071  0BAA               	decfsz	??_main,f
   762     0072  2871               	goto	u557
   763     0073  0000               	nop
   764     0074                     l1287:
   765                           
   766                           ;newmain.c: 139:        peso_cambuca = ADRESH;
   767     0074  1283               	bcf	3,5	;RP0=0, select bank0
   768     0075  1303               	bcf	3,6	;RP1=0, select bank0
   769     0076  081E               	movf	30,w	;volatile
   770     0077  00AA               	movwf	??_main
   771     0078  01AB               	clrf	??_main+1
   772     0079  082A               	movf	??_main,w
   773     007A  00B7               	movwf	_peso_cambuca
   774     007B  082B               	movf	??_main+1,w
   775     007C  00B8               	movwf	_peso_cambuca+1
   776     007D                     l1289:
   777                           
   778                           ;newmain.c: 141:        _delay((unsigned long)((1000)*(4000000/4000.0)));
   779     007D  3006               	movlw	6
   780     007E  1283               	bcf	3,5	;RP0=0, select bank0
   781     007F  1303               	bcf	3,6	;RP1=0, select bank0
   782     0080  00AC               	movwf	??_main+2
   783     0081  3013               	movlw	19
   784     0082  00AB               	movwf	??_main+1
   785     0083  30AD               	movlw	173
   786     0084  00AA               	movwf	??_main
   787     0085                     u567:
   788     0085  0BAA               	decfsz	??_main,f
   789     0086  2885               	goto	u567
   790     0087  0BAB               	decfsz	??_main+1,f
   791     0088  2885               	goto	u567
   792     0089  0BAC               	decfsz	??_main+2,f
   793     008A  2885               	goto	u567
   794     008B                     l1291:
   795                           
   796                           ;newmain.c: 143:        ADCON0bits.CHS0 = 1;
   797     008B  1283               	bcf	3,5	;RP0=0, select bank0
   798     008C  1303               	bcf	3,6	;RP1=0, select bank0
   799     008D  159F               	bsf	31,3	;volatile
   800     008E                     l1293:
   801                           
   802                           ;newmain.c: 144:        ADCON0bits.CHS1 = 0;
   803     008E  121F               	bcf	31,4	;volatile
   804     008F                     l1295:
   805                           
   806                           ;newmain.c: 145:        ADCON0bits.CHS2 = 0;
   807     008F  129F               	bcf	31,5	;volatile
   808     0090                     l1297:
   809                           
   810                           ;newmain.c: 146:        ADCON0bits.GO = 1;
   811     0090  151F               	bsf	31,2	;volatile
   812     0091                     l1299:
   813                           
   814                           ;newmain.c: 147:        _delay((unsigned long)((10)*(4000000/4000000.0)));
   815     0091  3002               	movlw	2
   816     0092  1283               	bcf	3,5	;RP0=0, select bank0
   817     0093  1303               	bcf	3,6	;RP1=0, select bank0
   818     0094  00AA               	movwf	??_main
   819     0095                     u577:
   820     0095  0BAA               	decfsz	??_main,f
   821     0096  2895               	goto	u577
   822     0097  0000               	nop
   823     0098                     l1301:
   824                           
   825                           ;newmain.c: 148:        peso_estoque = ADRESH;
   826     0098  1283               	bcf	3,5	;RP0=0, select bank0
   827     0099  1303               	bcf	3,6	;RP1=0, select bank0
   828     009A  081E               	movf	30,w	;volatile
   829     009B  00AA               	movwf	??_main
   830     009C  01AB               	clrf	??_main+1
   831     009D  082A               	movf	??_main,w
   832     009E  00B5               	movwf	_peso_estoque
   833     009F  082B               	movf	??_main+1,w
   834     00A0  00B6               	movwf	_peso_estoque+1
   835     00A1                     l1303:
   836                           
   837                           ;newmain.c: 150:         if(interrupcao == 1){
   838     00A1  032F               	decf	_interrupcao,w
   839     00A2  0430               	iorwf	_interrupcao+1,w
   840     00A3  1D03               	btfss	3,2
   841     00A4  28A6               	goto	u511
   842     00A5  28A7               	goto	u510
   843     00A6                     u511:
   844     00A6  28BC               	goto	l1311
   845     00A7                     u510:
   846     00A7                     l1305:
   847                           
   848                           ;newmain.c: 151:             interrupcao = 0;
   849     00A7  01AF               	clrf	_interrupcao
   850     00A8  01B0               	clrf	_interrupcao+1
   851     00A9                     l1307:
   852                           
   853                           ;newmain.c: 152:             _delay((unsigned long)((2000)*(4000000/4000.0)));
   854     00A9  300B               	movlw	11
   855     00AA  1283               	bcf	3,5	;RP0=0, select bank0
   856     00AB  1303               	bcf	3,6	;RP1=0, select bank0
   857     00AC  00AC               	movwf	??_main+2
   858     00AD  3026               	movlw	38
   859     00AE  00AB               	movwf	??_main+1
   860     00AF  305D               	movlw	93
   861     00B0  00AA               	movwf	??_main
   862     00B1                     u587:
   863     00B1  0BAA               	decfsz	??_main,f
   864     00B2  28B1               	goto	u587
   865     00B3  0BAB               	decfsz	??_main+1,f
   866     00B4  28B1               	goto	u587
   867     00B5  0BAC               	decfsz	??_main+2,f
   868     00B6  28B1               	goto	u587
   869     00B7                     l1309:
   870                           
   871                           ;newmain.c: 153:             Lcd_Padrao();
   872     00B7  120A  118A  2334  120A  118A  	fcall	_Lcd_Padrao
   873     00BC                     l1311:
   874                           
   875                           ;newmain.c: 155:         PORTDbits.RD7 = 0;
   876     00BC  1283               	bcf	3,5	;RP0=0, select bank0
   877     00BD  1303               	bcf	3,6	;RP1=0, select bank0
   878     00BE  1388               	bcf	8,7	;volatile
   879     00BF                     l1313:
   880                           
   881                           ;newmain.c: 156:         if(PORTBbits.RB1 == 0){
   882     00BF  1886               	btfsc	6,1	;volatile
   883     00C0  28C2               	goto	u521
   884     00C1  28C3               	goto	u520
   885     00C2                     u521:
   886     00C2  2867               	goto	l1277
   887     00C3                     u520:
   888     00C3                     l1315:
   889                           
   890                           ;newmain.c: 157:             aux_despejo = 0;
   891     00C3  01B1               	clrf	_aux_despejo
   892     00C4  01B2               	clrf	_aux_despejo+1
   893     00C5                     l1317:
   894                           
   895                           ;newmain.c: 158:             Lcd_Clear();
   896     00C5  120A  118A  23F7  120A  118A  	fcall	_Lcd_Clear
   897     00CA                     l1319:
   898                           
   899                           ;newmain.c: 159:             Lcd_Set_Cursor(1,1);
   900     00CA  1283               	bcf	3,5	;RP0=0, select bank0
   901     00CB  1303               	bcf	3,6	;RP1=0, select bank0
   902     00CC  01A4               	clrf	Lcd_Set_Cursor@b
   903     00CD  0AA4               	incf	Lcd_Set_Cursor@b,f
   904     00CE  3001               	movlw	1
   905     00CF  120A  118A  217B  120A  118A  	fcall	_Lcd_Set_Cursor
   906     00D4                     l1321:
   907                           
   908                           ;newmain.c: 160:             Lcd_Write_String("DESPEJANDO...");
   909     00D4  3021               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   910     00D5  120A  118A  230B  120A  118A  	fcall	_Lcd_Write_String
   911     00DA                     l1323:
   912                           
   913                           ;newmain.c: 161:             T1CONbits.TMR1ON = 1;
   914     00DA  1283               	bcf	3,5	;RP0=0, select bank0
   915     00DB  1303               	bcf	3,6	;RP1=0, select bank0
   916     00DC  1410               	bsf	16,0	;volatile
   917                           
   918                           ;newmain.c: 162:             while (aux_despejo == 0){
   919     00DD  28DF               	goto	l1325
   920     00DE                     l132:
   921                           
   922                           ;newmain.c: 163:                 PORTDbits.RD7 = 1;
   923     00DE  1788               	bsf	8,7	;volatile
   924     00DF                     l1325:
   925                           
   926                           ;newmain.c: 162:             while (aux_despejo == 0){
   927     00DF  0831               	movf	_aux_despejo,w
   928     00E0  0432               	iorwf	_aux_despejo+1,w
   929     00E1  1903               	btfsc	3,2
   930     00E2  28E4               	goto	u531
   931     00E3  28E5               	goto	u530
   932     00E4                     u531:
   933     00E4  28DE               	goto	l132
   934     00E5                     u530:
   935     00E5                     l133:
   936                           
   937                           ;newmain.c: 165:             PORTDbits.RD7 = 0;
   938     00E5  1388               	bcf	8,7	;volatile
   939     00E6                     l1327:
   940                           
   941                           ;newmain.c: 166:             if(interrupcao == 0){
   942     00E6  082F               	movf	_interrupcao,w
   943     00E7  0430               	iorwf	_interrupcao+1,w
   944     00E8  1D03               	btfss	3,2
   945     00E9  28EB               	goto	u541
   946     00EA  28EC               	goto	u540
   947     00EB                     u541:
   948     00EB  2901               	goto	l1333
   949     00EC                     u540:
   950     00EC                     l1329:
   951                           
   952                           ;newmain.c: 167:                 Lcd_Clear();
   953     00EC  120A  118A  23F7  120A  118A  	fcall	_Lcd_Clear
   954                           
   955                           ;newmain.c: 168:                 Lcd_Set_Cursor(1,1);
   956     00F1  1283               	bcf	3,5	;RP0=0, select bank0
   957     00F2  1303               	bcf	3,6	;RP1=0, select bank0
   958     00F3  01A4               	clrf	Lcd_Set_Cursor@b
   959     00F4  0AA4               	incf	Lcd_Set_Cursor@b,f
   960     00F5  3001               	movlw	1
   961     00F6  120A  118A  217B  120A  118A  	fcall	_Lcd_Set_Cursor
   962     00FB                     l1331:
   963                           
   964                           ;newmain.c: 169:                 Lcd_Write_String("RACAO COLOCADA.");
   965     00FB  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   966     00FC  120A  118A  230B  120A  118A  	fcall	_Lcd_Write_String
   967     0101                     l1333:
   968                           
   969                           ;newmain.c: 171:             _delay((unsigned long)((2000)*(4000000/4000.0)));
   970     0101  300B               	movlw	11
   971     0102  1283               	bcf	3,5	;RP0=0, select bank0
   972     0103  1303               	bcf	3,6	;RP1=0, select bank0
   973     0104  00AC               	movwf	??_main+2
   974     0105  3026               	movlw	38
   975     0106  00AB               	movwf	??_main+1
   976     0107  305D               	movlw	93
   977     0108  00AA               	movwf	??_main
   978     0109                     u597:
   979     0109  0BAA               	decfsz	??_main,f
   980     010A  2909               	goto	u597
   981     010B  0BAB               	decfsz	??_main+1,f
   982     010C  2909               	goto	u597
   983     010D  0BAC               	decfsz	??_main+2,f
   984     010E  2909               	goto	u597
   985     010F                     l1335:
   986                           
   987                           ;newmain.c: 172:             Lcd_Padrao();
   988     010F  120A  118A  2334  120A  118A  	fcall	_Lcd_Padrao
   989     0114  2867               	goto	l1277
   990     0115  120A  118A  2810   	ljmp	start
   991     0118                     __end_of_main:
   992                           
   993                           	psect	text1
   994     0334                     __ptext1:	
   995 ;; *************** function _Lcd_Padrao *****************
   996 ;; Defined at:
   997 ;;		line 73 in file "newmain.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         0       0       0       0       0
  1015 ;;Total ram usage:        0 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 7
  1018 ;; This function calls:
  1019 ;;		_Lcd_Clear
  1020 ;;		_Lcd_Set_Cursor
  1021 ;;		_Lcd_Write_String
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027     0334                     _Lcd_Padrao:	
  1028                           ;psect for function _Lcd_Padrao
  1029                           
  1030     0334                     l1153:	
  1031                           ;incstack = 0
  1032                           ; Regs used in _Lcd_Padrao: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1033                           
  1034                           
  1035                           ;newmain.c: 74:     Lcd_Clear();
  1036     0334  120A  118A  23F7  120A  118A  	fcall	_Lcd_Clear
  1037                           
  1038                           ;newmain.c: 75:     Lcd_Set_Cursor(1,1);
  1039     0339  1283               	bcf	3,5	;RP0=0, select bank0
  1040     033A  1303               	bcf	3,6	;RP1=0, select bank0
  1041     033B  01A4               	clrf	Lcd_Set_Cursor@b
  1042     033C  0AA4               	incf	Lcd_Set_Cursor@b,f
  1043     033D  3001               	movlw	1
  1044     033E  120A  118A  217B  120A  118A  	fcall	_Lcd_Set_Cursor
  1045     0343                     l1155:
  1046                           
  1047                           ;newmain.c: 76:     Lcd_Write_String("SIGMA DOG");
  1048     0343  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1049     0344  120A  118A  230B  120A  118A  	fcall	_Lcd_Write_String
  1050     0349                     l1157:
  1051                           
  1052                           ;newmain.c: 77:     Lcd_Set_Cursor(2,1);
  1053     0349  1283               	bcf	3,5	;RP0=0, select bank0
  1054     034A  1303               	bcf	3,6	;RP1=0, select bank0
  1055     034B  01A4               	clrf	Lcd_Set_Cursor@b
  1056     034C  0AA4               	incf	Lcd_Set_Cursor@b,f
  1057     034D  3002               	movlw	2
  1058     034E  120A  118A  217B  120A  118A  	fcall	_Lcd_Set_Cursor
  1059                           
  1060                           ;newmain.c: 78:     Lcd_Write_String("GRINDSET");
  1061     0353  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1062     0354  120A  118A  230B  120A  118A  	fcall	_Lcd_Write_String
  1063     0359                     l123:
  1064     0359  0008               	return
  1065     035A                     __end_of_Lcd_Padrao:
  1066                           
  1067                           	psect	text2
  1068     030B                     __ptext2:	
  1069 ;; *************** function _Lcd_Write_String *****************
  1070 ;; Defined at:
  1071 ;;		line 96 in file "./LCD.h"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  a               1    wreg     PTR unsigned char 
  1074 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  1075 ;;		 -> STR_1(16), 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  a               1    7[BANK0 ] PTR unsigned char 
  1078 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  1079 ;;		 -> STR_1(16), 
  1080 ;;  i               2    5[BANK0 ] int 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1090 ;;      Params:         0       0       0       0       0
  1091 ;;      Locals:         0       3       0       0       0
  1092 ;;      Temps:          0       0       0       0       0
  1093 ;;      Totals:         0       3       0       0       0
  1094 ;;Total ram usage:        3 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 6
  1097 ;; This function calls:
  1098 ;;		_Lcd_Write_Char
  1099 ;; This function is called by:
  1100 ;;		_Lcd_Padrao
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105     030B                     _Lcd_Write_String:	
  1106                           ;psect for function _Lcd_Write_String
  1107                           
  1108                           
  1109                           ;incstack = 0
  1110                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1111                           ;Lcd_Write_String@a stored from wreg
  1112     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1113     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1114     030D  00A7               	movwf	Lcd_Write_String@a
  1115     030E                     l1105:
  1116                           
  1117                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1118     030E  01A5               	clrf	Lcd_Write_String@i
  1119     030F  01A6               	clrf	Lcd_Write_String@i+1
  1120     0310  2B26               	goto	l1111
  1121     0311                     l1107:
  1122                           
  1123                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  1124     0311  0825               	movf	Lcd_Write_String@i,w
  1125     0312  0727               	addwf	Lcd_Write_String@a,w
  1126     0313  0084               	movwf	4
  1127     0314  120A  118A  2212  120A  118A  	fcall	stringdir
  1128     0319  120A  118A  229F  120A  118A  	fcall	_Lcd_Write_Char
  1129     031E                     l1109:
  1130     031E  3001               	movlw	1
  1131     031F  1283               	bcf	3,5	;RP0=0, select bank0
  1132     0320  1303               	bcf	3,6	;RP1=0, select bank0
  1133     0321  07A5               	addwf	Lcd_Write_String@i,f
  1134     0322  1803               	skipnc
  1135     0323  0AA6               	incf	Lcd_Write_String@i+1,f
  1136     0324  3000               	movlw	0
  1137     0325  07A6               	addwf	Lcd_Write_String@i+1,f
  1138     0326                     l1111:
  1139     0326  0825               	movf	Lcd_Write_String@i,w
  1140     0327  0727               	addwf	Lcd_Write_String@a,w
  1141     0328  0084               	movwf	4
  1142     0329  120A  118A  2212  120A  118A  	fcall	stringdir
  1143     032E  3A00               	xorlw	0
  1144     032F  1D03               	skipz
  1145     0330  2B32               	goto	u411
  1146     0331  2B33               	goto	u410
  1147     0332                     u411:
  1148     0332  2B11               	goto	l1107
  1149     0333                     u410:
  1150     0333                     l93:
  1151     0333  0008               	return
  1152     0334                     __end_of_Lcd_Write_String:
  1153                           
  1154                           	psect	text3
  1155     029F                     __ptext3:	
  1156 ;; *************** function _Lcd_Write_Char *****************
  1157 ;; Defined at:
  1158 ;;		line 80 in file "./LCD.h"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  a               1    wreg     unsigned char 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  a               1    4[BANK0 ] unsigned char 
  1163 ;;  y               1    3[BANK0 ] unsigned char 
  1164 ;;  temp            1    2[BANK0 ] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       3       0       0       0
  1176 ;;      Temps:          0       1       0       0       0
  1177 ;;      Totals:         0       4       0       0       0
  1178 ;;Total ram usage:        4 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 5
  1181 ;; This function calls:
  1182 ;;		_Lcd_Port
  1183 ;; This function is called by:
  1184 ;;		_Lcd_Write_String
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188     029F                     _Lcd_Write_Char:	
  1189                           ;psect for function _Lcd_Write_Char
  1190                           
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1194                           ;Lcd_Write_Char@a stored from wreg
  1195     029F  1283               	bcf	3,5	;RP0=0, select bank0
  1196     02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1197     02A1  00A4               	movwf	Lcd_Write_Char@a
  1198     02A2                     l1053:
  1199                           
  1200                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  1201     02A2  0824               	movf	Lcd_Write_Char@a,w
  1202     02A3  390F               	andlw	15
  1203     02A4  00A2               	movwf	Lcd_Write_Char@temp
  1204                           
  1205                           ;./LCD.h: 84:    y = a&0xF0;
  1206     02A5  0824               	movf	Lcd_Write_Char@a,w
  1207     02A6  39F0               	andlw	240
  1208     02A7  00A3               	movwf	Lcd_Write_Char@y
  1209     02A8                     l1055:
  1210                           
  1211                           ;./LCD.h: 85:    RC0 = 1;
  1212     02A8  1407               	bsf	7,0	;volatile
  1213     02A9                     l1057:
  1214                           
  1215                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  1216     02A9  0823               	movf	Lcd_Write_Char@y,w
  1217     02AA  00A1               	movwf	??_Lcd_Write_Char
  1218     02AB  3004               	movlw	4
  1219     02AC                     u325:
  1220     02AC  1003               	clrc
  1221     02AD  0CA1               	rrf	??_Lcd_Write_Char,f
  1222     02AE  3EFF               	addlw	-1
  1223     02AF  1D03               	skipz
  1224     02B0  2AAC               	goto	u325
  1225     02B1  0821               	movf	??_Lcd_Write_Char,w
  1226     02B2  120A  118A  23A1  120A  118A  	fcall	_Lcd_Port
  1227     02B7                     l1059:
  1228                           
  1229                           ;./LCD.h: 87:    RC2 = 1;
  1230     02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1231     02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1232     02B9  1507               	bsf	7,2	;volatile
  1233     02BA                     l1061:
  1234                           
  1235                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1236     02BA  300C               	movlw	12
  1237     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1238     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1239     02BD  00A1               	movwf	??_Lcd_Write_Char
  1240     02BE                     u607:
  1241     02BE  0BA1               	decfsz	??_Lcd_Write_Char,f
  1242     02BF  2ABE               	goto	u607
  1243     02C0  0000               	nop
  1244     02C1                     l1063:
  1245                           
  1246                           ;./LCD.h: 89:    RC2 = 0;
  1247     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1248     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1249     02C3  1107               	bcf	7,2	;volatile
  1250     02C4                     l1065:
  1251                           
  1252                           ;./LCD.h: 90:    Lcd_Port(temp);
  1253     02C4  0822               	movf	Lcd_Write_Char@temp,w
  1254     02C5  120A  118A  23A1  120A  118A  	fcall	_Lcd_Port
  1255     02CA                     l1067:
  1256                           
  1257                           ;./LCD.h: 91:    RC2 = 1;
  1258     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1259     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  1260     02CC  1507               	bsf	7,2	;volatile
  1261     02CD                     l1069:
  1262                           
  1263                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1264     02CD  300C               	movlw	12
  1265     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1266     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1267     02D0  00A1               	movwf	??_Lcd_Write_Char
  1268     02D1                     u617:
  1269     02D1  0BA1               	decfsz	??_Lcd_Write_Char,f
  1270     02D2  2AD1               	goto	u617
  1271     02D3  0000               	nop
  1272     02D4                     l1071:
  1273                           
  1274                           ;./LCD.h: 93:    RC2 = 0;
  1275     02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1276     02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1277     02D6  1107               	bcf	7,2	;volatile
  1278     02D7                     l87:
  1279     02D7  0008               	return
  1280     02D8                     __end_of_Lcd_Write_Char:
  1281                           
  1282                           	psect	text4
  1283     017B                     __ptext4:	
  1284 ;; *************** function _Lcd_Set_Cursor *****************
  1285 ;; Defined at:
  1286 ;;		line 40 in file "./LCD.h"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  a               1    wreg     unsigned char 
  1289 ;;  b               1    4[BANK0 ] unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  a               1    6[BANK0 ] unsigned char 
  1292 ;;  temp            1    9[BANK0 ] unsigned char 
  1293 ;;  y               1    8[BANK0 ] unsigned char 
  1294 ;;  z               1    7[BANK0 ] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, pclath, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         0       1       0       0       0
  1305 ;;      Locals:         0       4       0       0       0
  1306 ;;      Temps:          0       1       0       0       0
  1307 ;;      Totals:         0       6       0       0       0
  1308 ;;Total ram usage:        6 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; Hardware stack levels required when called: 6
  1311 ;; This function calls:
  1312 ;;		_Lcd_Cmd
  1313 ;; This function is called by:
  1314 ;;		_Lcd_Padrao
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319     017B                     _Lcd_Set_Cursor:	
  1320                           ;psect for function _Lcd_Set_Cursor
  1321                           
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1325                           ;Lcd_Set_Cursor@a stored from wreg
  1326     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1327     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1328     017D  00A6               	movwf	Lcd_Set_Cursor@a
  1329     017E                     l1085:
  1330                           
  1331                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1332     017E  0326               	decf	Lcd_Set_Cursor@a,w
  1333     017F  1D03               	btfss	3,2
  1334     0180  2982               	goto	u371
  1335     0181  2983               	goto	u370
  1336     0182                     u371:
  1337     0182  29A2               	goto	l1095
  1338     0183                     u370:
  1339     0183                     l1087:
  1340                           
  1341                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1342     0183  0824               	movf	Lcd_Set_Cursor@b,w
  1343     0184  3E7F               	addlw	127
  1344     0185  00A9               	movwf	Lcd_Set_Cursor@temp
  1345                           
  1346                           ;./LCD.h: 46:   z = temp>>4;
  1347     0186  0829               	movf	Lcd_Set_Cursor@temp,w
  1348     0187  00A5               	movwf	??_Lcd_Set_Cursor
  1349     0188  3004               	movlw	4
  1350     0189                     u385:
  1351     0189  1003               	clrc
  1352     018A  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1353     018B  3EFF               	addlw	-1
  1354     018C  1D03               	skipz
  1355     018D  2989               	goto	u385
  1356     018E  0825               	movf	??_Lcd_Set_Cursor,w
  1357     018F  00A7               	movwf	Lcd_Set_Cursor@z
  1358     0190                     l1089:
  1359                           
  1360                           ;./LCD.h: 47:   y = temp & 0x0F;
  1361     0190  0829               	movf	Lcd_Set_Cursor@temp,w
  1362     0191  390F               	andlw	15
  1363     0192  00A8               	movwf	Lcd_Set_Cursor@y
  1364     0193                     l1091:
  1365                           
  1366                           ;./LCD.h: 48:   Lcd_Cmd(z);
  1367     0193  0827               	movf	Lcd_Set_Cursor@z,w
  1368     0194  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1369     0199                     l1093:
  1370                           
  1371                           ;./LCD.h: 49:   Lcd_Cmd(y);
  1372     0199  1283               	bcf	3,5	;RP0=0, select bank0
  1373     019A  1303               	bcf	3,6	;RP1=0, select bank0
  1374     019B  0828               	movf	Lcd_Set_Cursor@y,w
  1375     019C  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1376                           
  1377                           ;./LCD.h: 50:  }
  1378     01A1  29C6               	goto	l81
  1379     01A2                     l1095:
  1380     01A2  3002               	movlw	2
  1381     01A3  0626               	xorwf	Lcd_Set_Cursor@a,w
  1382     01A4  1D03               	btfss	3,2
  1383     01A5  29A7               	goto	u391
  1384     01A6  29A8               	goto	u390
  1385     01A7                     u391:
  1386     01A7  29C6               	goto	l81
  1387     01A8                     u390:
  1388     01A8                     l1097:
  1389                           
  1390                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1391     01A8  0824               	movf	Lcd_Set_Cursor@b,w
  1392     01A9  3EBF               	addlw	191
  1393     01AA  00A9               	movwf	Lcd_Set_Cursor@temp
  1394                           
  1395                           ;./LCD.h: 54:   z = temp>>4;
  1396     01AB  0829               	movf	Lcd_Set_Cursor@temp,w
  1397     01AC  00A5               	movwf	??_Lcd_Set_Cursor
  1398     01AD  3004               	movlw	4
  1399     01AE                     u405:
  1400     01AE  1003               	clrc
  1401     01AF  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1402     01B0  3EFF               	addlw	-1
  1403     01B1  1D03               	skipz
  1404     01B2  29AE               	goto	u405
  1405     01B3  0825               	movf	??_Lcd_Set_Cursor,w
  1406     01B4  00A7               	movwf	Lcd_Set_Cursor@z
  1407     01B5                     l1099:
  1408                           
  1409                           ;./LCD.h: 55:   y = temp & 0x0F;
  1410     01B5  0829               	movf	Lcd_Set_Cursor@temp,w
  1411     01B6  390F               	andlw	15
  1412     01B7  00A8               	movwf	Lcd_Set_Cursor@y
  1413     01B8                     l1101:
  1414                           
  1415                           ;./LCD.h: 56:   Lcd_Cmd(z);
  1416     01B8  0827               	movf	Lcd_Set_Cursor@z,w
  1417     01B9  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1418     01BE                     l1103:
  1419                           
  1420                           ;./LCD.h: 57:   Lcd_Cmd(y);
  1421     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1422     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1423     01C0  0828               	movf	Lcd_Set_Cursor@y,w
  1424     01C1  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1425     01C6                     l81:
  1426     01C6  0008               	return
  1427     01C7                     __end_of_Lcd_Set_Cursor:
  1428                           
  1429                           	psect	text5
  1430     03F7                     __ptext5:	
  1431 ;; *************** function _Lcd_Clear *****************
  1432 ;; Defined at:
  1433 ;;		line 34 in file "./LCD.h"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;		None
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;		None
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       0       0       0       0
  1449 ;;      Temps:          0       0       0       0       0
  1450 ;;      Totals:         0       0       0       0       0
  1451 ;;Total ram usage:        0 bytes
  1452 ;; Hardware stack levels used: 1
  1453 ;; Hardware stack levels required when called: 6
  1454 ;; This function calls:
  1455 ;;		_Lcd_Cmd
  1456 ;; This function is called by:
  1457 ;;		_Lcd_Padrao
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462     03F7                     _Lcd_Clear:	
  1463                           ;psect for function _Lcd_Clear
  1464                           
  1465     03F7                     l1083:	
  1466                           ;incstack = 0
  1467                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1468                           
  1469                           
  1470                           ;./LCD.h: 36:  Lcd_Cmd(0);
  1471     03F7  3000               	movlw	0
  1472     03F8  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1473                           
  1474                           ;./LCD.h: 37:  Lcd_Cmd(1);
  1475     03FD  3001               	movlw	1
  1476     03FE  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1477     0403                     l75:
  1478     0403  0008               	return
  1479     0404                     __end_of_Lcd_Clear:
  1480                           
  1481                           	psect	text6
  1482     0118                     __ptext6:	
  1483 ;; *************** function _Lcd_Init *****************
  1484 ;; Defined at:
  1485 ;;		line 61 in file "./LCD.h"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0, pclath, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1499 ;;      Params:         0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0
  1501 ;;      Temps:          0       2       0       0       0
  1502 ;;      Totals:         0       2       0       0       0
  1503 ;;Total ram usage:        2 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 6
  1506 ;; This function calls:
  1507 ;;		_Lcd_Cmd
  1508 ;;		_Lcd_Port
  1509 ;; This function is called by:
  1510 ;;		_main
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514     0118                     _Lcd_Init:	
  1515                           ;psect for function _Lcd_Init
  1516                           
  1517     0118                     l1143:	
  1518                           ;incstack = 0
  1519                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1520                           
  1521                           
  1522                           ;./LCD.h: 63:   Lcd_Port(0x00);
  1523     0118  3000               	movlw	0
  1524     0119  120A  118A  23A1  120A  118A  	fcall	_Lcd_Port
  1525     011E                     l1145:
  1526                           
  1527                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1528     011E  301A               	movlw	26
  1529     011F  1283               	bcf	3,5	;RP0=0, select bank0
  1530     0120  1303               	bcf	3,6	;RP1=0, select bank0
  1531     0121  00A5               	movwf	??_Lcd_Init+1
  1532     0122  30F7               	movlw	247
  1533     0123  00A4               	movwf	??_Lcd_Init
  1534     0124                     u627:
  1535     0124  0BA4               	decfsz	??_Lcd_Init,f
  1536     0125  2924               	goto	u627
  1537     0126  0BA5               	decfsz	??_Lcd_Init+1,f
  1538     0127  2924               	goto	u627
  1539     0128  2929               	nop2
  1540     0129                     l1147:
  1541                           
  1542                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  1543     0129  3003               	movlw	3
  1544     012A  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1545                           
  1546                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1547     012F  3007               	movlw	7
  1548     0130  1283               	bcf	3,5	;RP0=0, select bank0
  1549     0131  1303               	bcf	3,6	;RP1=0, select bank0
  1550     0132  00A5               	movwf	??_Lcd_Init+1
  1551     0133  307C               	movlw	124
  1552     0134  00A4               	movwf	??_Lcd_Init
  1553     0135                     u637:
  1554     0135  0BA4               	decfsz	??_Lcd_Init,f
  1555     0136  2935               	goto	u637
  1556     0137  0BA5               	decfsz	??_Lcd_Init+1,f
  1557     0138  2935               	goto	u637
  1558     0139  0000               	nop
  1559     013A                     l1149:
  1560                           
  1561                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  1562     013A  3003               	movlw	3
  1563     013B  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1564     0140                     l1151:
  1565                           
  1566                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1567     0140  300F               	movlw	15
  1568     0141  1283               	bcf	3,5	;RP0=0, select bank0
  1569     0142  1303               	bcf	3,6	;RP1=0, select bank0
  1570     0143  00A5               	movwf	??_Lcd_Init+1
  1571     0144  3047               	movlw	71
  1572     0145  00A4               	movwf	??_Lcd_Init
  1573     0146                     u647:
  1574     0146  0BA4               	decfsz	??_Lcd_Init,f
  1575     0147  2946               	goto	u647
  1576     0148  0BA5               	decfsz	??_Lcd_Init+1,f
  1577     0149  2946               	goto	u647
  1578                           
  1579                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  1580     014A  3003               	movlw	3
  1581     014B  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1582                           
  1583                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  1584     0150  3002               	movlw	2
  1585     0151  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1586                           
  1587                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  1588     0156  3002               	movlw	2
  1589     0157  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1590                           
  1591                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  1592     015C  3008               	movlw	8
  1593     015D  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1594                           
  1595                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  1596     0162  3000               	movlw	0
  1597     0163  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1598                           
  1599                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  1600     0168  300C               	movlw	12
  1601     0169  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1602                           
  1603                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  1604     016E  3000               	movlw	0
  1605     016F  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1606                           
  1607                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  1608     0174  3006               	movlw	6
  1609     0175  120A  118A  23C1  120A  118A  	fcall	_Lcd_Cmd
  1610     017A                     l84:
  1611     017A  0008               	return
  1612     017B                     __end_of_Lcd_Init:
  1613                           
  1614                           	psect	text7
  1615     03C1                     __ptext7:	
  1616 ;; *************** function _Lcd_Cmd *****************
  1617 ;; Defined at:
  1618 ;;		line 25 in file "./LCD.h"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  a               1    wreg     unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  a               1    3[BANK0 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       0       0       0       0
  1633 ;;      Locals:         0       1       0       0       0
  1634 ;;      Temps:          0       2       0       0       0
  1635 ;;      Totals:         0       3       0       0       0
  1636 ;;Total ram usage:        3 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 5
  1639 ;; This function calls:
  1640 ;;		_Lcd_Port
  1641 ;; This function is called by:
  1642 ;;		_Lcd_Clear
  1643 ;;		_Lcd_Set_Cursor
  1644 ;;		_Lcd_Init
  1645 ;;		_Lcd_Shift_Right
  1646 ;;		_Lcd_Shift_Left
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650     03C1                     _Lcd_Cmd:	
  1651                           ;psect for function _Lcd_Cmd
  1652                           
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1656                           ;Lcd_Cmd@a stored from wreg
  1657     03C1  1283               	bcf	3,5	;RP0=0, select bank0
  1658     03C2  1303               	bcf	3,6	;RP1=0, select bank0
  1659     03C3  00A3               	movwf	Lcd_Cmd@a
  1660     03C4                     l1043:
  1661                           
  1662                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  1663     03C4  1007               	bcf	7,0	;volatile
  1664     03C5                     l1045:
  1665                           
  1666                           ;./LCD.h: 28:  Lcd_Port(a);
  1667     03C5  0823               	movf	Lcd_Cmd@a,w
  1668     03C6  120A  118A  23A1  120A  118A  	fcall	_Lcd_Port
  1669     03CB                     l1047:
  1670                           
  1671                           ;./LCD.h: 29:  RC2 = 1;
  1672     03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1673     03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1674     03CD  1507               	bsf	7,2	;volatile
  1675     03CE                     l1049:
  1676                           
  1677                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1678     03CE  3006               	movlw	6
  1679     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1680     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1681     03D1  00A2               	movwf	??_Lcd_Cmd+1
  1682     03D2  302F               	movlw	47
  1683     03D3  00A1               	movwf	??_Lcd_Cmd
  1684     03D4                     u657:
  1685     03D4  0BA1               	decfsz	??_Lcd_Cmd,f
  1686     03D5  2BD4               	goto	u657
  1687     03D6  0BA2               	decfsz	??_Lcd_Cmd+1,f
  1688     03D7  2BD4               	goto	u657
  1689     03D8  2BD9               	nop2
  1690     03D9                     l1051:
  1691                           
  1692                           ;./LCD.h: 31:         RC2 = 0;
  1693     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1694     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1695     03DB  1107               	bcf	7,2	;volatile
  1696     03DC                     l72:
  1697     03DC  0008               	return
  1698     03DD                     __end_of_Lcd_Cmd:
  1699                           
  1700                           	psect	text8
  1701     03A1                     __ptext8:	
  1702 ;; *************** function _Lcd_Port *****************
  1703 ;; Defined at:
  1704 ;;		line 3 in file "./LCD.h"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  a               1    wreg     unsigned char 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  a               1    0[BANK0 ] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       1       0       0       0
  1720 ;;      Temps:          0       0       0       0       0
  1721 ;;      Totals:         0       1       0       0       0
  1722 ;;Total ram usage:        1 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 4
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_Lcd_Cmd
  1729 ;;		_Lcd_Init
  1730 ;;		_Lcd_Write_Char
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734     03A1                     _Lcd_Port:	
  1735                           ;psect for function _Lcd_Port
  1736                           
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _Lcd_Port: [wreg]
  1740                           ;Lcd_Port@a stored from wreg
  1741     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1742     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1743     03A3  00A0               	movwf	Lcd_Port@a
  1744     03A4                     l1033:
  1745                           
  1746                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  1747     03A4  1C20               	btfss	Lcd_Port@a,0
  1748     03A5  2BA7               	goto	u281
  1749     03A6  2BA8               	goto	u280
  1750     03A7                     u281:
  1751     03A7  2BAA               	goto	l61
  1752     03A8                     u280:
  1753     03A8                     l1035:
  1754                           
  1755                           ;./LCD.h: 6:   RC4 = 1;
  1756     03A8  1607               	bsf	7,4	;volatile
  1757     03A9  2BAB               	goto	l62
  1758     03AA                     l61:	
  1759                           ;./LCD.h: 7:  else
  1760                           
  1761                           
  1762                           ;./LCD.h: 8:   RC4 = 0;
  1763     03AA  1207               	bcf	7,4	;volatile
  1764     03AB                     l62:
  1765                           
  1766                           ;./LCD.h: 10:  if(a & 2)
  1767     03AB  1CA0               	btfss	Lcd_Port@a,1
  1768     03AC  2BAE               	goto	u291
  1769     03AD  2BAF               	goto	u290
  1770     03AE                     u291:
  1771     03AE  2BB1               	goto	l63
  1772     03AF                     u290:
  1773     03AF                     l1037:
  1774                           
  1775                           ;./LCD.h: 11:   RC5 = 1;
  1776     03AF  1687               	bsf	7,5	;volatile
  1777     03B0  2BB2               	goto	l64
  1778     03B1                     l63:	
  1779                           ;./LCD.h: 12:  else
  1780                           
  1781                           
  1782                           ;./LCD.h: 13:   RC5 = 0;
  1783     03B1  1287               	bcf	7,5	;volatile
  1784     03B2                     l64:
  1785                           
  1786                           ;./LCD.h: 15:  if(a & 4)
  1787     03B2  1D20               	btfss	Lcd_Port@a,2
  1788     03B3  2BB5               	goto	u301
  1789     03B4  2BB6               	goto	u300
  1790     03B5                     u301:
  1791     03B5  2BB8               	goto	l65
  1792     03B6                     u300:
  1793     03B6                     l1039:
  1794                           
  1795                           ;./LCD.h: 16:   RC6 = 1;
  1796     03B6  1707               	bsf	7,6	;volatile
  1797     03B7  2BB9               	goto	l66
  1798     03B8                     l65:	
  1799                           ;./LCD.h: 17:  else
  1800                           
  1801                           
  1802                           ;./LCD.h: 18:   RC6 = 0;
  1803     03B8  1307               	bcf	7,6	;volatile
  1804     03B9                     l66:
  1805                           
  1806                           ;./LCD.h: 20:  if(a & 8)
  1807     03B9  1DA0               	btfss	Lcd_Port@a,3
  1808     03BA  2BBC               	goto	u311
  1809     03BB  2BBD               	goto	u310
  1810     03BC                     u311:
  1811     03BC  2BBF               	goto	l67
  1812     03BD                     u310:
  1813     03BD                     l1041:
  1814                           
  1815                           ;./LCD.h: 21:   RC7 = 1;
  1816     03BD  1787               	bsf	7,7	;volatile
  1817     03BE  2BC0               	goto	l69
  1818     03BF                     l67:	
  1819                           ;./LCD.h: 22:  else
  1820                           
  1821                           
  1822                           ;./LCD.h: 23:   RC7 = 0;
  1823     03BF  1387               	bcf	7,7	;volatile
  1824     03C0                     l69:
  1825     03C0  0008               	return
  1826     03C1                     __end_of_Lcd_Port:
  1827                           
  1828                           	psect	text9
  1829     01C7                     __ptext9:	
  1830 ;; *************** function _tes *****************
  1831 ;; Defined at:
  1832 ;;		line 47 in file "newmain.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1846 ;;      Params:         0       0       0       0       0
  1847 ;;      Locals:         0       0       0       0       0
  1848 ;;      Temps:          4       0       0       0       0
  1849 ;;      Totals:         4       0       0       0       0
  1850 ;;Total ram usage:        4 bytes
  1851 ;; Hardware stack levels used: 1
  1852 ;; Hardware stack levels required when called: 3
  1853 ;; This function calls:
  1854 ;;		i1_Lcd_Clear
  1855 ;;		i1_Lcd_Set_Cursor
  1856 ;;		i1_Lcd_Write_String
  1857 ;; This function is called by:
  1858 ;;		Interrupt level 1
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862     01C7                     _tes:	
  1863                           ;psect for function _tes
  1864                           
  1865     01C7                     i1l1193:
  1866                           
  1867                           ;newmain.c: 48:     if(TMR1IF){
  1868     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1869     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1870     01C9  1C0C               	btfss	12,0	;volatile
  1871     01CA  29CC               	goto	u48_21
  1872     01CB  29CD               	goto	u48_20
  1873     01CC                     u48_21:
  1874     01CC  29E7               	goto	i1l116
  1875     01CD                     u48_20:
  1876     01CD                     i1l1195:
  1877                           
  1878                           ;newmain.c: 49:         PIR1bits.TMR1IF = 0;
  1879     01CD  100C               	bcf	12,0	;volatile
  1880     01CE                     i1l1197:
  1881                           
  1882                           ;newmain.c: 50:         TMR1L = 0xDC;
  1883     01CE  30DC               	movlw	220
  1884     01CF  008E               	movwf	14	;volatile
  1885                           
  1886                           ;newmain.c: 51:         TMR1H = 0X0B;
  1887     01D0  300B               	movlw	11
  1888     01D1  008F               	movwf	15	;volatile
  1889                           
  1890                           ;newmain.c: 52:         conta++;
  1891     01D2  3001               	movlw	1
  1892     01D3  07AD               	addwf	_conta,f
  1893     01D4  1803               	skipnc
  1894     01D5  0AAE               	incf	_conta+1,f
  1895     01D6  3000               	movlw	0
  1896     01D7  07AE               	addwf	_conta+1,f
  1897     01D8                     i1l1199:
  1898                           
  1899                           ;newmain.c: 53:         if(conta == 8){
  1900     01D8  3008               	movlw	8
  1901     01D9  062D               	xorwf	_conta,w
  1902     01DA  042E               	iorwf	_conta+1,w
  1903     01DB  1D03               	btfss	3,2
  1904     01DC  29DE               	goto	u49_21
  1905     01DD  29DF               	goto	u49_20
  1906     01DE                     u49_21:
  1907     01DE  2A07               	goto	i1l120
  1908     01DF                     u49_20:
  1909     01DF                     i1l1201:
  1910                           
  1911                           ;newmain.c: 54:             T1CONbits.TMR1ON = 0;
  1912     01DF  1010               	bcf	16,0	;volatile
  1913     01E0                     i1l1203:
  1914                           
  1915                           ;newmain.c: 55:             conta = 0;
  1916     01E0  01AD               	clrf	_conta
  1917     01E1  01AE               	clrf	_conta+1
  1918     01E2                     i1l1205:
  1919                           
  1920                           ;newmain.c: 56:             aux_despejo = 1;
  1921     01E2  3001               	movlw	1
  1922     01E3  00B1               	movwf	_aux_despejo
  1923     01E4  3000               	movlw	0
  1924     01E5  00B2               	movwf	_aux_despejo+1
  1925     01E6  2A07               	goto	i1l120
  1926     01E7                     i1l116:	
  1927                           ;newmain.c: 60:     else if (INTCONbits.INTF)
  1928                           
  1929     01E7  1C8B               	btfss	11,1	;volatile
  1930     01E8  29EA               	goto	u50_21
  1931     01E9  29EB               	goto	u50_20
  1932     01EA                     u50_21:
  1933     01EA  2A07               	goto	i1l120
  1934     01EB                     u50_20:
  1935     01EB                     i1l1207:
  1936                           
  1937                           ;newmain.c: 61:     {;newmain.c: 62:         INTCONbits.INTF = 0;
  1938     01EB  108B               	bcf	11,1	;volatile
  1939                           
  1940                           ;newmain.c: 63:         PORTDbits.RD7 = 0;
  1941     01EC  1388               	bcf	8,7	;volatile
  1942     01ED                     i1l1209:
  1943                           
  1944                           ;newmain.c: 64:         Lcd_Clear();
  1945     01ED  120A  118A  2404  120A  118A  	fcall	i1_Lcd_Clear
  1946                           
  1947                           ;newmain.c: 65:         Lcd_Set_Cursor(1,1);
  1948     01F2  01F4               	clrf	i1Lcd_Set_Cursor@b
  1949     01F3  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  1950     01F4  3001               	movlw	1
  1951     01F5  120A  118A  2259  120A  118A  	fcall	i1_Lcd_Set_Cursor
  1952     01FA                     i1l1211:
  1953                           
  1954                           ;newmain.c: 66:         Lcd_Write_String("INTERROMPIDO...");
  1955     01FA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1956     01FB  120A  118A  235A  120A  118A  	fcall	i1_Lcd_Write_String
  1957     0200                     i1l1213:
  1958                           
  1959                           ;newmain.c: 67:         interrupcao = 1;
  1960     0200  3001               	movlw	1
  1961     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1962     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1963     0203  00AF               	movwf	_interrupcao
  1964     0204  3000               	movlw	0
  1965     0205  00B0               	movwf	_interrupcao+1
  1966     0206  29E2               	goto	i1l1205
  1967     0207                     i1l120:
  1968     0207  087D               	movf	??_tes+3,w
  1969     0208  00FF               	movwf	btemp+1
  1970     0209  087C               	movf	??_tes+2,w
  1971     020A  008A               	movwf	10
  1972     020B  087B               	movf	??_tes+1,w
  1973     020C  0084               	movwf	4
  1974     020D  0E7A               	swapf	??_tes,w
  1975     020E  0083               	movwf	3
  1976     020F  0EFE               	swapf	btemp,f
  1977     0210  0E7E               	swapf	btemp,w
  1978     0211  0009               	retfie
  1979     0212                     __end_of_tes:
  1980                           
  1981                           	psect	intentry
  1982     0004                     __pintentry:	
  1983                           ;incstack = 0
  1984                           ; Regs used in _tes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1985                           
  1986     0004                     interrupt_function:
  1987     007E                     saved_w	set	btemp
  1988     0004  00FE               	movwf	btemp
  1989     0005  0E03               	swapf	3,w
  1990     0006  00FA               	movwf	??_tes
  1991     0007  0804               	movf	4,w
  1992     0008  00FB               	movwf	??_tes+1
  1993     0009  080A               	movf	10,w
  1994     000A  00FC               	movwf	??_tes+2
  1995     000B  087F               	movf	btemp+1,w
  1996     000C  00FD               	movwf	??_tes+3
  1997     000D  120A  118A  29C7   	ljmp	_tes
  1998                           
  1999                           	psect	text10
  2000     035A                     __ptext10:	
  2001 ;; *************** function i1_Lcd_Write_String *****************
  2002 ;; Defined at:
  2003 ;;		line 96 in file "./LCD.h"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  a               1    wreg     PTR unsigned char 
  2006 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  2007 ;;		 -> STR_1(16), 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  a               1    5[COMMON] PTR unsigned char 
  2010 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  2011 ;;		 -> STR_1(16), 
  2012 ;;  i               2    6[COMMON] int 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         3       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0
  2025 ;;      Totals:         3       0       0       0       0
  2026 ;;Total ram usage:        3 bytes
  2027 ;; Hardware stack levels used: 1
  2028 ;; Hardware stack levels required when called: 2
  2029 ;; This function calls:
  2030 ;;		i1_Lcd_Write_Char
  2031 ;; This function is called by:
  2032 ;;		_tes
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036     035A                     i1_Lcd_Write_String:	
  2037                           ;psect for function i1_Lcd_Write_String
  2038                           
  2039                           
  2040                           ;incstack = 0
  2041 ;; using string table level
  2042                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2043                           ;i1Lcd_Write_String@a stored from wreg
  2044     035A  00F5               	movwf	i1Lcd_Write_String@a
  2045     035B                     i1l1181:
  2046                           
  2047                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2048     035B  01F6               	clrf	i1Lcd_Write_String@i
  2049     035C  01F7               	clrf	i1Lcd_Write_String@i+1
  2050     035D  2B71               	goto	i1l1187
  2051     035E                     i1l1183:
  2052                           
  2053                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  2054     035E  0876               	movf	i1Lcd_Write_String@i,w
  2055     035F  0775               	addwf	i1Lcd_Write_String@a,w
  2056     0360  0084               	movwf	4
  2057     0361  120A  118A  2212  120A  118A  	fcall	stringdir
  2058     0366  120A  118A  22D8  120A  118A  	fcall	i1_Lcd_Write_Char
  2059     036B                     i1l1185:
  2060     036B  3001               	movlw	1
  2061     036C  07F6               	addwf	i1Lcd_Write_String@i,f
  2062     036D  1803               	skipnc
  2063     036E  0AF7               	incf	i1Lcd_Write_String@i+1,f
  2064     036F  3000               	movlw	0
  2065     0370  07F7               	addwf	i1Lcd_Write_String@i+1,f
  2066     0371                     i1l1187:
  2067     0371  0876               	movf	i1Lcd_Write_String@i,w
  2068     0372  0775               	addwf	i1Lcd_Write_String@a,w
  2069     0373  0084               	movwf	4
  2070     0374  120A  118A  2212  120A  118A  	fcall	stringdir
  2071     0379  3A00               	xorlw	0
  2072     037A  1D03               	skipz
  2073     037B  2B7D               	goto	u47_21
  2074     037C  2B7E               	goto	u47_20
  2075     037D                     u47_21:
  2076     037D  2B5E               	goto	i1l1183
  2077     037E                     u47_20:
  2078     037E                     i1l93:
  2079     037E  0008               	return
  2080     037F                     __end_ofi1_Lcd_Write_String:
  2081                           
  2082                           	psect	text11
  2083     02D8                     __ptext11:	
  2084 ;; *************** function i1_Lcd_Write_Char *****************
  2085 ;; Defined at:
  2086 ;;		line 80 in file "./LCD.h"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  a               1    wreg     unsigned char 
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  a               1    4[COMMON] unsigned char 
  2091 ;;  y               1    3[COMMON] unsigned char 
  2092 ;;  temp            1    2[COMMON] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0, pclath, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         0       0       0       0       0
  2103 ;;      Locals:         3       0       0       0       0
  2104 ;;      Temps:          1       0       0       0       0
  2105 ;;      Totals:         4       0       0       0       0
  2106 ;;Total ram usage:        4 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 1
  2109 ;; This function calls:
  2110 ;;		i1_Lcd_Port
  2111 ;; This function is called by:
  2112 ;;		i1_Lcd_Write_String
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116     02D8                     i1_Lcd_Write_Char:	
  2117                           ;psect for function i1_Lcd_Write_Char
  2118                           
  2119                           
  2120                           ;incstack = 0
  2121                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2122                           ;i1Lcd_Write_Char@a stored from wreg
  2123     02D8  00F4               	movwf	i1Lcd_Write_Char@a
  2124     02D9                     i1l1123:
  2125                           
  2126                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  2127     02D9  0874               	movf	i1Lcd_Write_Char@a,w
  2128     02DA  390F               	andlw	15
  2129     02DB  00F2               	movwf	i1Lcd_Write_Char@temp
  2130                           
  2131                           ;./LCD.h: 84:    y = a&0xF0;
  2132     02DC  0874               	movf	i1Lcd_Write_Char@a,w
  2133     02DD  39F0               	andlw	240
  2134     02DE  00F3               	movwf	i1Lcd_Write_Char@y
  2135     02DF                     i1l1125:
  2136                           
  2137                           ;./LCD.h: 85:    RC0 = 1;
  2138     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2139     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2140     02E1  1407               	bsf	7,0	;volatile
  2141     02E2                     i1l1127:
  2142                           
  2143                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  2144     02E2  0873               	movf	i1Lcd_Write_Char@y,w
  2145     02E3  00F1               	movwf	??i1_Lcd_Write_Char
  2146     02E4  3004               	movlw	4
  2147     02E5                     u42_25:
  2148     02E5  1003               	clrc
  2149     02E6  0CF1               	rrf	??i1_Lcd_Write_Char,f
  2150     02E7  3EFF               	addlw	-1
  2151     02E8  1D03               	skipz
  2152     02E9  2AE5               	goto	u42_25
  2153     02EA  0871               	movf	??i1_Lcd_Write_Char,w
  2154     02EB  120A  118A  237F  120A  118A  	fcall	i1_Lcd_Port
  2155     02F0                     i1l1129:
  2156                           
  2157                           ;./LCD.h: 87:    RC2 = 1;
  2158     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2159     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  2160     02F2  1507               	bsf	7,2	;volatile
  2161     02F3                     i1l1131:
  2162                           
  2163                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2164     02F3  300D               	movlw	13
  2165     02F4  00F1               	movwf	??i1_Lcd_Write_Char
  2166     02F5                     u66_27:
  2167     02F5  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2168     02F6  2AF5               	goto	u66_27
  2169     02F7                     i1l1133:
  2170                           
  2171                           ;./LCD.h: 89:    RC2 = 0;
  2172     02F7  1283               	bcf	3,5	;RP0=0, select bank0
  2173     02F8  1303               	bcf	3,6	;RP1=0, select bank0
  2174     02F9  1107               	bcf	7,2	;volatile
  2175     02FA                     i1l1135:
  2176                           
  2177                           ;./LCD.h: 90:    Lcd_Port(temp);
  2178     02FA  0872               	movf	i1Lcd_Write_Char@temp,w
  2179     02FB  120A  118A  237F  120A  118A  	fcall	i1_Lcd_Port
  2180     0300                     i1l1137:
  2181                           
  2182                           ;./LCD.h: 91:    RC2 = 1;
  2183     0300  1283               	bcf	3,5	;RP0=0, select bank0
  2184     0301  1303               	bcf	3,6	;RP1=0, select bank0
  2185     0302  1507               	bsf	7,2	;volatile
  2186     0303                     i1l1139:
  2187                           
  2188                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2189     0303  300D               	movlw	13
  2190     0304  00F1               	movwf	??i1_Lcd_Write_Char
  2191     0305                     u67_27:
  2192     0305  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2193     0306  2B05               	goto	u67_27
  2194     0307                     i1l1141:
  2195                           
  2196                           ;./LCD.h: 93:    RC2 = 0;
  2197     0307  1283               	bcf	3,5	;RP0=0, select bank0
  2198     0308  1303               	bcf	3,6	;RP1=0, select bank0
  2199     0309  1107               	bcf	7,2	;volatile
  2200     030A                     i1l87:
  2201     030A  0008               	return
  2202     030B                     __end_ofi1_Lcd_Write_Char:
  2203                           
  2204                           	psect	text12
  2205     0259                     __ptext12:	
  2206 ;; *************** function i1_Lcd_Set_Cursor *****************
  2207 ;; Defined at:
  2208 ;;		line 40 in file "./LCD.h"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  a               1    wreg     unsigned char 
  2211 ;;  b               1    4[COMMON] unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  a               1    6[COMMON] unsigned char 
  2214 ;;  temp            1    9[COMMON] unsigned char 
  2215 ;;  y               1    8[COMMON] unsigned char 
  2216 ;;  z               1    7[COMMON] unsigned char 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         1       0       0       0       0
  2227 ;;      Locals:         4       0       0       0       0
  2228 ;;      Temps:          1       0       0       0       0
  2229 ;;      Totals:         6       0       0       0       0
  2230 ;;Total ram usage:        6 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 2
  2233 ;; This function calls:
  2234 ;;		i1_Lcd_Cmd
  2235 ;; This function is called by:
  2236 ;;		_tes
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240     0259                     i1_Lcd_Set_Cursor:	
  2241                           ;psect for function i1_Lcd_Set_Cursor
  2242                           
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2246                           ;i1Lcd_Set_Cursor@a stored from wreg
  2247     0259  00F6               	movwf	i1Lcd_Set_Cursor@a
  2248     025A                     i1l1161:
  2249                           
  2250                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  2251     025A  0376               	decf	i1Lcd_Set_Cursor@a,w
  2252     025B  1D03               	btfss	3,2
  2253     025C  2A5E               	goto	u43_21
  2254     025D  2A5F               	goto	u43_20
  2255     025E                     u43_21:
  2256     025E  2A7C               	goto	i1l1171
  2257     025F                     u43_20:
  2258     025F                     i1l1163:
  2259                           
  2260                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  2261     025F  0874               	movf	i1Lcd_Set_Cursor@b,w
  2262     0260  3E7F               	addlw	127
  2263     0261  00F9               	movwf	i1Lcd_Set_Cursor@temp
  2264                           
  2265                           ;./LCD.h: 46:   z = temp>>4;
  2266     0262  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2267     0263  00F5               	movwf	??i1_Lcd_Set_Cursor
  2268     0264  3004               	movlw	4
  2269     0265                     u44_25:
  2270     0265  1003               	clrc
  2271     0266  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2272     0267  3EFF               	addlw	-1
  2273     0268  1D03               	skipz
  2274     0269  2A65               	goto	u44_25
  2275     026A  0875               	movf	??i1_Lcd_Set_Cursor,w
  2276     026B  00F7               	movwf	i1Lcd_Set_Cursor@z
  2277     026C                     i1l1165:
  2278                           
  2279                           ;./LCD.h: 47:   y = temp & 0x0F;
  2280     026C  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2281     026D  390F               	andlw	15
  2282     026E  00F8               	movwf	i1Lcd_Set_Cursor@y
  2283     026F                     i1l1167:
  2284                           
  2285                           ;./LCD.h: 48:   Lcd_Cmd(z);
  2286     026F  0877               	movf	i1Lcd_Set_Cursor@z,w
  2287     0270  120A  118A  23DD  120A  118A  	fcall	i1_Lcd_Cmd
  2288     0275                     i1l1169:
  2289                           
  2290                           ;./LCD.h: 49:   Lcd_Cmd(y);
  2291     0275  0878               	movf	i1Lcd_Set_Cursor@y,w
  2292     0276  120A  118A  23DD  120A  118A  	fcall	i1_Lcd_Cmd
  2293                           
  2294                           ;./LCD.h: 50:  }
  2295     027B  2A9E               	goto	i1l81
  2296     027C                     i1l1171:
  2297     027C  3002               	movlw	2
  2298     027D  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  2299     027E  1D03               	btfss	3,2
  2300     027F  2A81               	goto	u45_21
  2301     0280  2A82               	goto	u45_20
  2302     0281                     u45_21:
  2303     0281  2A9E               	goto	i1l81
  2304     0282                     u45_20:
  2305     0282                     i1l1173:
  2306                           
  2307                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  2308     0282  0874               	movf	i1Lcd_Set_Cursor@b,w
  2309     0283  3EBF               	addlw	191
  2310     0284  00F9               	movwf	i1Lcd_Set_Cursor@temp
  2311                           
  2312                           ;./LCD.h: 54:   z = temp>>4;
  2313     0285  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2314     0286  00F5               	movwf	??i1_Lcd_Set_Cursor
  2315     0287  3004               	movlw	4
  2316     0288                     u46_25:
  2317     0288  1003               	clrc
  2318     0289  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2319     028A  3EFF               	addlw	-1
  2320     028B  1D03               	skipz
  2321     028C  2A88               	goto	u46_25
  2322     028D  0875               	movf	??i1_Lcd_Set_Cursor,w
  2323     028E  00F7               	movwf	i1Lcd_Set_Cursor@z
  2324     028F                     i1l1175:
  2325                           
  2326                           ;./LCD.h: 55:   y = temp & 0x0F;
  2327     028F  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2328     0290  390F               	andlw	15
  2329     0291  00F8               	movwf	i1Lcd_Set_Cursor@y
  2330     0292                     i1l1177:
  2331                           
  2332                           ;./LCD.h: 56:   Lcd_Cmd(z);
  2333     0292  0877               	movf	i1Lcd_Set_Cursor@z,w
  2334     0293  120A  118A  23DD  120A  118A  	fcall	i1_Lcd_Cmd
  2335     0298                     i1l1179:
  2336                           
  2337                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2338     0298  0878               	movf	i1Lcd_Set_Cursor@y,w
  2339     0299  120A  118A  23DD  120A  118A  	fcall	i1_Lcd_Cmd
  2340     029E                     i1l81:
  2341     029E  0008               	return
  2342     029F                     __end_ofi1_Lcd_Set_Cursor:
  2343                           
  2344                           	psect	text13
  2345     0404                     __ptext13:	
  2346 ;; *************** function i1_Lcd_Clear *****************
  2347 ;; Defined at:
  2348 ;;		line 34 in file "./LCD.h"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, pclath, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0
  2365 ;;      Totals:         0       0       0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 2
  2369 ;; This function calls:
  2370 ;;		i1_Lcd_Cmd
  2371 ;; This function is called by:
  2372 ;;		_tes
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376     0404                     i1_Lcd_Clear:	
  2377                           ;psect for function i1_Lcd_Clear
  2378                           
  2379     0404                     i1l1159:	
  2380                           ;incstack = 0
  2381                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2382                           
  2383                           
  2384                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2385     0404  3000               	movlw	0
  2386     0405  120A  118A  23DD  120A  118A  	fcall	i1_Lcd_Cmd
  2387                           
  2388                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2389     040A  3001               	movlw	1
  2390     040B  120A  118A  23DD  120A  118A  	fcall	i1_Lcd_Cmd
  2391     0410                     i1l75:
  2392     0410  0008               	return
  2393     0411                     __end_ofi1_Lcd_Clear:
  2394                           
  2395                           	psect	text14
  2396     03DD                     __ptext14:	
  2397 ;; *************** function i1_Lcd_Cmd *****************
  2398 ;; Defined at:
  2399 ;;		line 25 in file "./LCD.h"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  a               1    wreg     unsigned char 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  a               1    3[COMMON] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, pclath, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2413 ;;      Params:         0       0       0       0       0
  2414 ;;      Locals:         1       0       0       0       0
  2415 ;;      Temps:          2       0       0       0       0
  2416 ;;      Totals:         3       0       0       0       0
  2417 ;;Total ram usage:        3 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 1
  2420 ;; This function calls:
  2421 ;;		i1_Lcd_Port
  2422 ;; This function is called by:
  2423 ;;		i1_Lcd_Clear
  2424 ;;		i1_Lcd_Set_Cursor
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428     03DD                     i1_Lcd_Cmd:	
  2429                           ;psect for function i1_Lcd_Cmd
  2430                           
  2431                           
  2432                           ;incstack = 0
  2433                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2434                           ;i1Lcd_Cmd@a stored from wreg
  2435     03DD  00F3               	movwf	i1Lcd_Cmd@a
  2436     03DE                     i1l1113:
  2437                           
  2438                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  2439     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2440     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2441     03E0  1007               	bcf	7,0	;volatile
  2442     03E1                     i1l1115:
  2443                           
  2444                           ;./LCD.h: 28:  Lcd_Port(a);
  2445     03E1  0873               	movf	i1Lcd_Cmd@a,w
  2446     03E2  120A  118A  237F  120A  118A  	fcall	i1_Lcd_Port
  2447     03E7                     i1l1117:
  2448                           
  2449                           ;./LCD.h: 29:  RC2 = 1;
  2450     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2451     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2452     03E9  1507               	bsf	7,2	;volatile
  2453     03EA                     i1l1119:
  2454                           
  2455                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2456     03EA  3006               	movlw	6
  2457     03EB  00F2               	movwf	??i1_Lcd_Cmd+1
  2458     03EC  3030               	movlw	48
  2459     03ED  00F1               	movwf	??i1_Lcd_Cmd
  2460     03EE                     u68_27:
  2461     03EE  0BF1               	decfsz	??i1_Lcd_Cmd,f
  2462     03EF  2BEE               	goto	u68_27
  2463     03F0  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  2464     03F1  2BEE               	goto	u68_27
  2465     03F2  0000               	nop
  2466     03F3                     i1l1121:
  2467                           
  2468                           ;./LCD.h: 31:         RC2 = 0;
  2469     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2470     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2471     03F5  1107               	bcf	7,2	;volatile
  2472     03F6                     i1l72:
  2473     03F6  0008               	return
  2474     03F7                     __end_ofi1_Lcd_Cmd:
  2475                           
  2476                           	psect	text15
  2477     037F                     __ptext15:	
  2478 ;; *************** function i1_Lcd_Port *****************
  2479 ;; Defined at:
  2480 ;;		line 3 in file "./LCD.h"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  a               1    wreg     unsigned char 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  a               1    0[COMMON] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  1    wreg      void 
  2487 ;; Registers used:
  2488 ;;		wreg
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2494 ;;      Params:         0       0       0       0       0
  2495 ;;      Locals:         1       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0
  2497 ;;      Totals:         1       0       0       0       0
  2498 ;;Total ram usage:        1 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		i1_Lcd_Cmd
  2504 ;;		i1_Lcd_Write_Char
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508     037F                     i1_Lcd_Port:	
  2509                           ;psect for function i1_Lcd_Port
  2510                           
  2511                           
  2512                           ;incstack = 0
  2513                           ; Regs used in i1_Lcd_Port: [wreg]
  2514                           ;i1Lcd_Port@a stored from wreg
  2515     037F  00F0               	movwf	i1Lcd_Port@a
  2516     0380                     i1l1073:
  2517                           
  2518                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2519     0380  1C70               	btfss	i1Lcd_Port@a,0
  2520     0381  2B83               	goto	u33_21
  2521     0382  2B84               	goto	u33_20
  2522     0383                     u33_21:
  2523     0383  2B88               	goto	i1l61
  2524     0384                     u33_20:
  2525     0384                     i1l1075:
  2526                           
  2527                           ;./LCD.h: 6:   RC4 = 1;
  2528     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2529     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2530     0386  1607               	bsf	7,4	;volatile
  2531     0387  2B8B               	goto	i1l62
  2532     0388                     i1l61:	
  2533                           ;./LCD.h: 7:  else
  2534                           
  2535                           
  2536                           ;./LCD.h: 8:   RC4 = 0;
  2537     0388  1283               	bcf	3,5	;RP0=0, select bank0
  2538     0389  1303               	bcf	3,6	;RP1=0, select bank0
  2539     038A  1207               	bcf	7,4	;volatile
  2540     038B                     i1l62:
  2541                           
  2542                           ;./LCD.h: 10:  if(a & 2)
  2543     038B  1CF0               	btfss	i1Lcd_Port@a,1
  2544     038C  2B8E               	goto	u34_21
  2545     038D  2B8F               	goto	u34_20
  2546     038E                     u34_21:
  2547     038E  2B91               	goto	i1l63
  2548     038F                     u34_20:
  2549     038F                     i1l1077:
  2550                           
  2551                           ;./LCD.h: 11:   RC5 = 1;
  2552     038F  1687               	bsf	7,5	;volatile
  2553     0390  2B92               	goto	i1l64
  2554     0391                     i1l63:	
  2555                           ;./LCD.h: 12:  else
  2556                           
  2557                           
  2558                           ;./LCD.h: 13:   RC5 = 0;
  2559     0391  1287               	bcf	7,5	;volatile
  2560     0392                     i1l64:
  2561                           
  2562                           ;./LCD.h: 15:  if(a & 4)
  2563     0392  1D70               	btfss	i1Lcd_Port@a,2
  2564     0393  2B95               	goto	u35_21
  2565     0394  2B96               	goto	u35_20
  2566     0395                     u35_21:
  2567     0395  2B98               	goto	i1l65
  2568     0396                     u35_20:
  2569     0396                     i1l1079:
  2570                           
  2571                           ;./LCD.h: 16:   RC6 = 1;
  2572     0396  1707               	bsf	7,6	;volatile
  2573     0397  2B99               	goto	i1l66
  2574     0398                     i1l65:	
  2575                           ;./LCD.h: 17:  else
  2576                           
  2577                           
  2578                           ;./LCD.h: 18:   RC6 = 0;
  2579     0398  1307               	bcf	7,6	;volatile
  2580     0399                     i1l66:
  2581                           
  2582                           ;./LCD.h: 20:  if(a & 8)
  2583     0399  1DF0               	btfss	i1Lcd_Port@a,3
  2584     039A  2B9C               	goto	u36_21
  2585     039B  2B9D               	goto	u36_20
  2586     039C                     u36_21:
  2587     039C  2B9F               	goto	i1l67
  2588     039D                     u36_20:
  2589     039D                     i1l1081:
  2590                           
  2591                           ;./LCD.h: 21:   RC7 = 1;
  2592     039D  1787               	bsf	7,7	;volatile
  2593     039E  2BA0               	goto	i1l69
  2594     039F                     i1l67:	
  2595                           ;./LCD.h: 22:  else
  2596                           
  2597                           
  2598                           ;./LCD.h: 23:   RC7 = 0;
  2599     039F  1387               	bcf	7,7	;volatile
  2600     03A0                     i1l69:
  2601     03A0  0008               	return
  2602     03A1                     __end_ofi1_Lcd_Port:
  2603     007E                     btemp	set	126	;btemp
  2604     007E                     wtemp0	set	126
  2605                           
  2606                           	psect	config
  2607                           
  2608                           ;Config register CONFIG @ 0x2007
  2609                           ;	Oscillator Selection bits
  2610                           ;	FOSC = HS, HS oscillator
  2611                           ;	Watchdog Timer Enable bit
  2612                           ;	WDTE = OFF, WDT disabled
  2613                           ;	Power-up Timer Enable bit
  2614                           ;	PWRTE = ON, PWRT enabled
  2615                           ;	Brown-out Reset Enable bit
  2616                           ;	BOREN = ON, BOR enabled
  2617                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2618                           ;	LVP = 0x1, unprogrammed default
  2619                           ;	Data EEPROM Memory Code Protection bit
  2620                           ;	CPD = 0x1, unprogrammed default
  2621                           ;	Flash Program Memory Write Enable bits
  2622                           ;	WRT = 0x3, unprogrammed default
  2623                           ;	In-Circuit Debugger Mode bit
  2624                           ;	DEBUG = 0x1, unprogrammed default
  2625                           ;	Flash Program Memory Code Protection bit
  2626                           ;	CP = 0x1, unpro  2627     2007                     	org	8199
  2628     2007  3FF2               	dw	16370

Data Sizes:
    Strings     65
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_5(CODE[16]), STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    _tes->i1_Lcd_Set_Cursor
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Padrao->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2752
                                             10 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                         _Lcd_Padrao
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Padrao                                           0     0      0    1277
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     433
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     734
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tes                                                  4     4      0     784
                                             10 COMMON     4     4      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_String                                   3     3      0     268
                                              5 COMMON     3     3      0
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     6     5      1     406
                                              4 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Padrao
     _Lcd_Clear
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jul 21 21:27:53 2022

                         pc 0002                          l61 03AA                          l62 03AB  
                        l63 03B1                          l64 03B2                          l72 03DC  
                        l65 03B8                          l81 01C6                          l66 03B9  
                        l67 03BF                          l75 0403                          l84 017A  
                        l69 03C0                          l93 0333                          l87 02D7  
                        fsr 0004                         l123 0359                         l132 00DE  
                       l133 00E5                         _RC0 0038                         _RC2 003A  
                       _RC4 003C                         _RC5 003D                         _RC6 003E  
                       _RC7 003F                         u300 03B6                         u301 03B5  
                       u310 03BD                         u311 03BC                         u410 0333  
                       u411 0332                         u405 01AE                         u325 02AC  
                       u510 00A7                         u511 00A6                         u280 03A8  
                       u520 00C3                         u281 03A7                         u521 00C2  
                       u290 03AF                         u370 0183                         u530 00E5  
                       u291 03AE                         u371 0182                         u531 00E4  
                       u540 00EC                         u541 00EB                         u390 01A8  
                       u391 01A7                         u607 02BE                         u385 0189  
                       u617 02D1                         u627 0124                         u637 0135  
                       u557 0071                         u647 0146                         u567 0085  
                       u657 03D4                         u577 0095                         u587 00B1  
                       u597 0109                         _tes 01C7                         fsr0 0004  
                      l1101 01B8                        l1103 01BE                        l1111 0326  
                      l1041 03BD                        l1033 03A4                        l1105 030E  
                      l1035 03A8                        l1051 03D9                        l1043 03C4  
                      l1107 0311                        l1037 03AF                        l1045 03C5  
                      l1061 02BA                        l1053 02A2                        l1109 031E  
                      l1301 0098                        l1221 002B                        l1039 03B6  
                      l1047 03CB                        l1151 0140                        l1143 0118  
                      l1071 02D4                        l1063 02C1                        l1055 02A8  
                      l1311 00BC                        l1303 00A1                        l1231 0034  
                      l1223 002C                        l1049 03CE                        l1145 011E  
                      l1065 02C4                        l1057 02A9                        l1153 0334  
                      l1321 00D4                        l1313 00BF                        l1305 00A7  
                      l1241 003B                        l1233 0035                        l1225 002F  
                      l1147 0129                        l1083 03F7                        l1091 0193  
                      l1067 02CA                        l1059 02B7                        l1155 0343  
                      l1331 00FB                        l1323 00DA                        l1315 00C3  
                      l1307 00A9                        l1251 0048                        l1243 003E  
                      l1235 0036                        l1227 0032                        l1219 0025  
                      l1149 013A                        l1093 0199                        l1085 017E  
                      l1069 02CD                        l1157 0349                        l1333 0101  
                      l1325 00DF                        l1317 00C5                        l1309 00B7  
                      l1261 0051                        l1253 0049                        l1245 003F  
                      l1237 0037                        l1229 0033                        l1087 0183  
                      l1095 01A2                        l1335 010F                        l1327 00E6  
                      l1319 00CA                        l1271 0060                        l1263 0052  
                      l1255 004A                        l1247 0044                        l1239 0038  
                      l1097 01A8                        l1089 0190                        l1329 00EC  
                      l1281 006B                        l1273 0063                        l1265 0055  
                      l1257 004D                        l1249 0047                        l1099 01B5  
                      l1291 008B                        l1283 006C                        l1275 0065  
                      l1267 0056                        l1259 004E                        l1293 008E  
                      l1285 006D                        l1277 0067                        l1269 005B  
                      l1295 008F                        l1287 0074                        l1279 006A  
                      l1297 0090                        l1289 007D                        l1299 0091  
                      ?_tes 0070                        STR_1 0218                        STR_2 0246  
                      STR_3 0250                        STR_4 0238                        STR_5 0228  
                      i1l61 0388                        i1l62 038B                        i1l63 0391  
                      i1l64 0392                        i1l72 03F6                        i1l65 0398  
                      i1l81 029E                        i1l66 0399                        i1l67 039F  
                      i1l75 0410                        i1l69 03A0                        i1l93 037E  
                      i1l87 030A           ?_Lcd_Write_String 0070                        _main 0025  
                      btemp 007E                        start 0010          ??_Lcd_Write_String 0025  
           __end_of_Lcd_Cmd 03DD                       ??_tes 007A                  _Lcd_Padrao 0334  
                     ?_main 0070                       i1l120 0207                       i1l116 01E7  
         ?i1_Lcd_Set_Cursor 0074                       u33_20 0384                       u33_21 0383  
                     _TMR1H 000F                       _TMR1L 000E                       u34_20 038F  
                     u50_20 01EB                       u34_21 038E                       u50_21 01EA  
                     u42_25 02E5                       u35_20 0396                       u43_20 025F  
                     u35_21 0395                       u43_21 025E                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     u36_20 039D                       u36_21 039C                       u44_25 0265  
                     u45_20 0282                       u45_21 0281                       u46_25 0288  
                     u47_20 037E                       u47_21 037D                       u48_20 01CD  
                     u48_21 01CC                       u49_20 01DF                       u49_21 01DE  
                     _TRISA 0085                       _TRISB 0086                       _TRISC 0087  
                     _TRISD 0088                       u66_27 02F5                       u67_27 0305  
                     u68_27 03EE                 ?i1_Lcd_Port 0070          ??i1_Lcd_Set_Cursor 0075  
                     _conta 002D                       _valor 0033                       pclath 000A  
                     status 0003                       wtemp0 007E            __end_of_Lcd_Init 017B  
          __end_of_Lcd_Port 03C1             __initialization 0013                __end_of_main 0118  
                    ??_main 002A                      _ADRESH 001E                      _ADRESL 009E  
                    i1l1121 03F3                      i1l1113 03DE                      i1l1201 01DF  
                    i1l1115 03E1                      i1l1131 02F3                      i1l1123 02D9  
                    i1l1211 01FA                      i1l1203 01E0                      i1l1117 03E7  
                    i1l1141 0307                      i1l1133 02F7                      i1l1125 02DF  
                    i1l1213 0200                      i1l1205 01E2                      i1l1119 03EA  
                    i1l1135 02FA                      i1l1127 02E2                      i1l1207 01EB  
                    i1l1081 039D                      i1l1073 0380                      i1l1161 025A  
                    i1l1137 0300                      i1l1129 02F0                      i1l1209 01ED  
                    i1l1075 0384                      i1l1163 025F                      i1l1171 027C  
                    i1l1139 0303                      i1l1077 038F                      i1l1173 0282  
                    i1l1165 026C                      i1l1181 035B                      i1l1079 0396  
                    i1l1159 0404                      i1l1175 028F                      i1l1167 026F  
                    i1l1183 035E                      i1l1177 0292                      i1l1169 0275  
                    i1l1185 036B                      i1l1193 01C7                      i1l1179 0298  
                    i1l1187 0371                      i1l1195 01CD                      i1l1197 01CE  
                    i1l1199 01D8           ?i1_Lcd_Write_Char 0070                   ??_Lcd_Cmd 0021  
                    _TMR1IF 0060                ?i1_Lcd_Clear 0070          ??i1_Lcd_Write_Char 0071  
         __end_ofi1_Lcd_Cmd 03F7           i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073  
               ?_Lcd_Padrao 0070                      saved_w 007E             Lcd_Set_Cursor@a 0026  
           Lcd_Set_Cursor@b 0024             Lcd_Set_Cursor@y 0028             Lcd_Set_Cursor@z 0027  
   __end_of__initialization 0021           __end_of_Lcd_Clear 0404              __pcstackCOMMON 0070  
            _Lcd_Set_Cursor 017B                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                __pbssBANK0 002D                  __pmaintext 0025                  __pintentry 0004  
    __end_of_Lcd_Set_Cursor 01C7                ??i1_Lcd_Port 0070                  ??_Lcd_Init 0024  
                ??_Lcd_Port 0020                  __stringtab 0212              _Lcd_Write_Char 029F  
                   _Lcd_Cmd 03C1          __end_ofi1_Lcd_Port 03A1             ?_Lcd_Set_Cursor 0024  
                   __ptext1 0334                     __ptext2 030B                     __ptext3 029F  
                   __ptext4 017B                     __ptext5 03F7                     __ptext6 0118  
                   __ptext7 03C1                     __ptext8 03A1                     __ptext9 01C7  
                 _T1CONbits 0010  __end_ofi1_Lcd_Write_String 037F      __end_of_Lcd_Write_Char 02D8  
      end_of_initialization 0021                   Lcd_Port@a 0020                ??_Lcd_Padrao 002A  
                 i1_Lcd_Cmd 03DD                   _PORTBbits 0006                   _PORTDbits 0008  
           ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0027           Lcd_Write_String@i 0025  
        __end_of_Lcd_Padrao 035A                   _Lcd_Clear 03F7                  ?i1_Lcd_Cmd 0070  
          _Lcd_Write_String 030B         start_initialization 0013                 __end_of_tes 0212  
          i1_Lcd_Set_Cursor 0259                  ?_Lcd_Clear 0070             Lcd_Write_Char@a 0024  
           Lcd_Write_Char@y 0023                   ___latbits 0002               __pcstackBANK0 0020  
      i1Lcd_Write_Char@temp 0072                    ?_Lcd_Cmd 0070            ??_Lcd_Set_Cursor 0025  
          i1_Lcd_Write_Char 02D8                 ??i1_Lcd_Cmd 0071        i1Lcd_Set_Cursor@temp 0079  
                 __pstrings 0212           interrupt_function 0004               ??i1_Lcd_Clear 0074  
                  _PIE1bits 008C          i1_Lcd_Write_String 035A                    Lcd_Cmd@a 0023  
                  _PIR1bits 000C                 ??_Lcd_Clear 0024         ?i1_Lcd_Write_String 0070  
                _ADCON0bits 001F                 __stringbase 0217                  _ADCON1bits 009F  
          ??_Lcd_Write_Char 0021                    _Lcd_Init 0118                    _Lcd_Port 03A1  
               _aux_despejo 0031        ??i1_Lcd_Write_String 0075    __end_of_Lcd_Write_String 0334  
              _peso_cambuca 0037         __end_ofi1_Lcd_Clear 0411                _peso_estoque 0035  
        __end_of__stringtab 0218    __end_ofi1_Lcd_Set_Cursor 029F           i1Lcd_Set_Cursor@a 0076  
         i1Lcd_Set_Cursor@b 0074           i1Lcd_Set_Cursor@y 0078           i1Lcd_Set_Cursor@z 0077  
                  __ptext10 035A                    __ptext11 02D8                    __ptext12 0259  
                  __ptext13 0404                    __ptext14 03DD                    __ptext15 037F  
               i1Lcd_Port@a 0070                 _interrupcao 002F         i1Lcd_Write_String@a 0075  
       i1Lcd_Write_String@i 0076                  _INTCONbits 000B          Lcd_Write_Char@temp 0022  
                  intlevel1 0000    __end_ofi1_Lcd_Write_Char 030B                 i1_Lcd_Clear 0404  
                i1Lcd_Cmd@a 0073                   stringcode 0212          Lcd_Set_Cursor@temp 0029  
                _OPTION_REG 0081                  i1_Lcd_Port 037F                    stringdir 0212  
                  stringtab 0212  
