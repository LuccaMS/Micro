

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jul 22 16:45:50 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0006                     _PORTBbits	set	6
   187  0008                     _PORTD	set	8
   188  0007                     _PORTC	set	7
   189  0006                     _PORTB	set	6
   190  0005                     _PORTA	set	5
   191  001E                     _ADRESH	set	30
   192  001F                     _ADCON0bits	set	31
   193  0008                     _PORTDbits	set	8
   194  000B                     _INTCONbits	set	11
   195  0010                     _T1CONbits	set	16
   196  000F                     _TMR1H	set	15
   197  000E                     _TMR1L	set	14
   198  000C                     _PIR1bits	set	12
   199  0060                     _TMR1IF	set	96
   200  003A                     _RC2	set	58
   201  0038                     _RC0	set	56
   202  003F                     _RC7	set	63
   203  003E                     _RC6	set	62
   204  003D                     _RC5	set	61
   205  003C                     _RC4	set	60
   206  0081                     _OPTION_REGbits	set	129
   207  009E                     _ADRESL	set	158
   208  009F                     _ADCON1bits	set	159
   209  008C                     _PIE1bits	set	140
   210  0081                     _OPTION_REG	set	129
   211  0088                     _TRISD	set	136
   212  0087                     _TRISC	set	135
   213  0086                     _TRISB	set	134
   214  0085                     _TRISA	set	133
   215                           
   216                           	psect	strings
   217  0219                     __pstrings:
   218  0219                     stringtab:
   219  0219                     __stringtab:
   220  0219                     stringcode:	
   221                           ;	String table - string pointers are 1 byte each
   222                           
   223  0219                     stringdir:
   224  0219  3002               	movlw	high stringdir
   225  021A  008A               	movwf	10
   226  021B  0804               	movf	4,w
   227  021C  0A84               	incf	4,f
   228  021D  0782               	addwf	2,f
   229  021E                     __stringbase:
   230  021E  3400               	retlw	0
   231  021F                     __end_of__stringtab:
   232  021F                     STR_9:
   233  021F  3445               	retlw	69	;'E'
   234  0220  3453               	retlw	83	;'S'
   235  0221  3454               	retlw	84	;'T'
   236  0222  344F               	retlw	79	;'O'
   237  0223  3451               	retlw	81	;'Q'
   238  0224  3455               	retlw	85	;'U'
   239  0225  3445               	retlw	69	;'E'
   240  0226  3420               	retlw	32	;' '
   241  0227  3445               	retlw	69	;'E'
   242  0228  344D               	retlw	77	;'M'
   243  0229  3420               	retlw	32	;' '
   244  022A  344E               	retlw	78	;'N'
   245  022B  3449               	retlw	73	;'I'
   246  022C  3456               	retlw	86	;'V'
   247  022D  3445               	retlw	69	;'E'
   248  022E  344C               	retlw	76	;'L'
   249  022F  3400               	retlw	0
   250  0230                     STR_6:
   251  0230  3452               	retlw	82	;'R'
   252  0231  3441               	retlw	65	;'A'
   253  0232  3443               	retlw	67	;'C'
   254  0233  3441               	retlw	65	;'A'
   255  0234  344F               	retlw	79	;'O'
   256  0235  3420               	retlw	32	;' '
   257  0236  3443               	retlw	67	;'C'
   258  0237  344F               	retlw	79	;'O'
   259  0238  344C               	retlw	76	;'L'
   260  0239  344F               	retlw	79	;'O'
   261  023A  3443               	retlw	67	;'C'
   262  023B  3441               	retlw	65	;'A'
   263  023C  3444               	retlw	68	;'D'
   264  023D  3441               	retlw	65	;'A'
   265  023E  342E               	retlw	46	;'.'
   266  023F  3400               	retlw	0
   267  0240                     STR_5:
   268  0240  3444               	retlw	68	;'D'
   269  0241  3445               	retlw	69	;'E'
   270  0242  3453               	retlw	83	;'S'
   271  0243  3450               	retlw	80	;'P'
   272  0244  3445               	retlw	69	;'E'
   273  0245  344A               	retlw	74	;'J'
   274  0246  3441               	retlw	65	;'A'
   275  0247  344E               	retlw	78	;'N'
   276  0248  3444               	retlw	68	;'D'
   277  0249  344F               	retlw	79	;'O'
   278  024A  342E               	retlw	46	;'.'
   279  024B  342E               	retlw	46	;'.'
   280  024C  342E               	retlw	46	;'.'
   281  024D  3400               	retlw	0
   282  024E                     STR_1:
   283  024E  3446               	retlw	70	;'F'
   284  024F  3455               	retlw	85	;'U'
   285  0250  344E               	retlw	78	;'N'
   286  0251  3443               	retlw	67	;'C'
   287  0252  3449               	retlw	73	;'I'
   288  0253  344F               	retlw	79	;'O'
   289  0254  344E               	retlw	78	;'N'
   290  0255  3441               	retlw	65	;'A'
   291  0256  344D               	retlw	77	;'M'
   292  0257  3445               	retlw	69	;'E'
   293  0258  344E               	retlw	78	;'N'
   294  0259  3454               	retlw	84	;'T'
   295  025A  344F               	retlw	79	;'O'
   296  025B  3400               	retlw	0
   297  025C                     STR_2:
   298  025C  3449               	retlw	73	;'I'
   299  025D  344E               	retlw	78	;'N'
   300  025E  3454               	retlw	84	;'T'
   301  025F  3445               	retlw	69	;'E'
   302  0260  3452               	retlw	82	;'R'
   303  0261  3452               	retlw	82	;'R'
   304  0262  344F               	retlw	79	;'O'
   305  0263  344D               	retlw	77	;'M'
   306  0264  3450               	retlw	80	;'P'
   307  0265  3449               	retlw	73	;'I'
   308  0266  3444               	retlw	68	;'D'
   309  0267  344F               	retlw	79	;'O'
   310  0268  3400               	retlw	0
   311  0269                     STR_3:
   312  0269  3453               	retlw	83	;'S'
   313  026A  3449               	retlw	73	;'I'
   314  026B  3447               	retlw	71	;'G'
   315  026C  344D               	retlw	77	;'M'
   316  026D  3441               	retlw	65	;'A'
   317  026E  3420               	retlw	32	;' '
   318  026F  3444               	retlw	68	;'D'
   319  0270  344F               	retlw	79	;'O'
   320  0271  3447               	retlw	71	;'G'
   321  0272  3400               	retlw	0
   322  0273                     STR_10:
   323  0273  3442               	retlw	66	;'B'
   324  0274  3441               	retlw	65	;'A'
   325  0275  3449               	retlw	73	;'I'
   326  0276  3458               	retlw	88	;'X'
   327  0277  344F               	retlw	79	;'O'
   328  0278  342E               	retlw	46	;'.'
   329  0279  342E               	retlw	46	;'.'
   330  027A  342E               	retlw	46	;'.'
   331  027B  3400               	retlw	0
   332  027C                     STR_4:
   333  027C  3447               	retlw	71	;'G'
   334  027D  3452               	retlw	82	;'R'
   335  027E  3449               	retlw	73	;'I'
   336  027F  344E               	retlw	78	;'N'
   337  0280  3444               	retlw	68	;'D'
   338  0281  3453               	retlw	83	;'S'
   339  0282  3445               	retlw	69	;'E'
   340  0283  3454               	retlw	84	;'T'
   341  0284  3400               	retlw	0
   342  0240                     
   343                           	psect	cinit
   344  0015                     start_initialization:	
   345                           ; #config settings
   346                           
   347  0015                     __initialization:
   348                           
   349                           ; Clear objects allocated to COMMON
   350  0015  01FB               	clrf	__pbssCOMMON& (0+127)
   351  0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK0
   354  0017  1283               	bcf	3,5	;RP0=0, select bank0
   355  0018  1303               	bcf	3,6	;RP1=0, select bank0
   356  0019  01B2               	clrf	__pbssBANK0& (0+127)
   357  001A  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   358  001B  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   359  001C  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   360  001D  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   361  001E  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   362  001F  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   363  0020  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   364  0021  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   365  0022  01BB               	clrf	(__pbssBANK0+9)& (0+127)
   366  0023                     end_of_initialization:	
   367                           ;End of C runtime variable initialization code
   368                           
   369  0023                     __end_of__initialization:
   370  0023  0183               	clrf	3
   371  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   372                           
   373                           	psect	bssCOMMON
   374  007B                     __pbssCOMMON:
   375  007B                     _conta:
   376  007B                     	ds	2
   377                           
   378                           	psect	bssBANK0
   379  0032                     __pbssBANK0:
   380  0032                     _interrupcao:
   381  0032                     	ds	2
   382  0034                     _aux_timer:
   383  0034                     	ds	2
   384  0036                     _valor:
   385  0036                     	ds	2
   386  0038                     _peso_estoque:
   387  0038                     	ds	2
   388  003A                     _peso_cambuca:
   389  003A                     	ds	2
   390                           
   391                           	psect	cstackCOMMON
   392  0070                     __pcstackCOMMON:
   393  0070                     ?_Lcd_Port:
   394  0070                     ?_Lcd_Cmd:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_Lcd_Clear:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_Lcd_Init:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ?_Lcd_Write_Char:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_Lcd_Write_String:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?_tes:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_Lcd_Padrao:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_main:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?i1_Lcd_Port:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ??i1_Lcd_Port:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?i1_Lcd_Cmd:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?i1_Lcd_Clear:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?i1_Lcd_Write_Char:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?i1_Lcd_Write_String:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     i1Lcd_Port@a:	
   437                           ; 1 bytes @ 0x0
   438                           
   439                           
   440                           ; 1 bytes @ 0x0
   441  0070                     	ds	1
   442  0071                     ??i1_Lcd_Cmd:
   443  0071                     ??i1_Lcd_Write_Char:	
   444                           ; 1 bytes @ 0x1
   445                           
   446                           
   447                           ; 1 bytes @ 0x1
   448  0071                     	ds	1
   449  0072                     i1Lcd_Write_Char@temp:
   450                           
   451                           ; 1 bytes @ 0x2
   452  0072                     	ds	1
   453  0073                     i1Lcd_Cmd@a:
   454  0073                     i1Lcd_Write_Char@y:	
   455                           ; 1 bytes @ 0x3
   456                           
   457                           
   458                           ; 1 bytes @ 0x3
   459  0073                     	ds	1
   460  0074                     ??i1_Lcd_Clear:
   461  0074                     ?i1_Lcd_Set_Cursor:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     i1Lcd_Set_Cursor@b:	
   465                           ; 1 bytes @ 0x4
   466                           
   467  0074                     i1Lcd_Write_Char@a:	
   468                           ; 1 bytes @ 0x4
   469                           
   470                           
   471                           ; 1 bytes @ 0x4
   472  0074                     	ds	1
   473  0075                     ??i1_Lcd_Set_Cursor:
   474  0075                     ??i1_Lcd_Write_String:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     i1Lcd_Write_String@a:	
   478                           ; 1 bytes @ 0x5
   479                           
   480                           
   481                           ; 1 bytes @ 0x5
   482  0075                     	ds	1
   483  0076                     i1Lcd_Write_String@i:
   484                           
   485                           ; 2 bytes @ 0x6
   486  0076                     	ds	1
   487  0077                     i1Lcd_Set_Cursor@a:
   488                           
   489                           ; 1 bytes @ 0x7
   490  0077                     	ds	1
   491  0078                     i1Lcd_Set_Cursor@z:
   492                           
   493                           ; 1 bytes @ 0x8
   494  0078                     	ds	1
   495  0079                     i1Lcd_Set_Cursor@y:
   496                           
   497                           ; 1 bytes @ 0x9
   498  0079                     	ds	1
   499  007A                     i1Lcd_Set_Cursor@temp:
   500                           
   501                           ; 1 bytes @ 0xA
   502  007A                     	ds	1
   503                           
   504                           	psect	cstackBANK0
   505  0020                     __pcstackBANK0:
   506  0020                     ??_tes:
   507                           
   508                           ; 1 bytes @ 0x0
   509  0020                     	ds	4
   510  0024                     ??_Lcd_Port:
   511  0024                     ?_PesoEstoque:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0024                     ?_PesoCambuca:	
   515                           ; 2 bytes @ 0x4
   516                           
   517  0024                     Lcd_Port@a:	
   518                           ; 2 bytes @ 0x4
   519                           
   520                           
   521                           ; 1 bytes @ 0x4
   522  0024                     	ds	1
   523  0025                     ??_Lcd_Cmd:
   524  0025                     ??_Lcd_Write_Char:	
   525                           ; 1 bytes @ 0x5
   526                           
   527                           
   528                           ; 1 bytes @ 0x5
   529  0025                     	ds	1
   530  0026                     ??_PesoEstoque:
   531  0026                     ??_PesoCambuca:	
   532                           ; 1 bytes @ 0x6
   533                           
   534  0026                     Lcd_Write_Char@temp:	
   535                           ; 1 bytes @ 0x6
   536                           
   537                           
   538                           ; 1 bytes @ 0x6
   539  0026                     	ds	1
   540  0027                     Lcd_Cmd@a:
   541  0027                     Lcd_Write_Char@y:	
   542                           ; 1 bytes @ 0x7
   543                           
   544                           
   545                           ; 1 bytes @ 0x7
   546  0027                     	ds	1
   547  0028                     ??_Lcd_Clear:
   548  0028                     ?_Lcd_Set_Cursor:	
   549                           ; 1 bytes @ 0x8
   550                           
   551  0028                     ??_Lcd_Init:	
   552                           ; 1 bytes @ 0x8
   553                           
   554  0028                     Lcd_Set_Cursor@b:	
   555                           ; 1 bytes @ 0x8
   556                           
   557  0028                     Lcd_Write_Char@a:	
   558                           ; 1 bytes @ 0x8
   559                           
   560  0028                     PesoEstoque@peso:	
   561                           ; 1 bytes @ 0x8
   562                           
   563  0028                     PesoCambuca@peso:	
   564                           ; 2 bytes @ 0x8
   565                           
   566                           
   567                           ; 2 bytes @ 0x8
   568  0028                     	ds	1
   569  0029                     ??_Lcd_Set_Cursor:
   570  0029                     ??_Lcd_Write_String:	
   571                           ; 1 bytes @ 0x9
   572                           
   573  0029                     Lcd_Write_String@i:	
   574                           ; 1 bytes @ 0x9
   575                           
   576                           
   577                           ; 2 bytes @ 0x9
   578  0029                     	ds	2
   579  002B                     Lcd_Set_Cursor@a:
   580  002B                     Lcd_Write_String@a:	
   581                           ; 1 bytes @ 0xB
   582                           
   583                           
   584                           ; 1 bytes @ 0xB
   585  002B                     	ds	1
   586  002C                     Lcd_Set_Cursor@z:
   587                           
   588                           ; 1 bytes @ 0xC
   589  002C                     	ds	1
   590  002D                     Lcd_Set_Cursor@y:
   591                           
   592                           ; 1 bytes @ 0xD
   593  002D                     	ds	1
   594  002E                     Lcd_Set_Cursor@temp:
   595                           
   596                           ; 1 bytes @ 0xE
   597  002E                     	ds	1
   598  002F                     ??_Lcd_Padrao:
   599  002F                     ??_main:	
   600                           ; 1 bytes @ 0xF
   601                           
   602                           
   603                           ; 1 bytes @ 0xF
   604  002F                     	ds	3
   605                           
   606                           	psect	maintext
   607  0027                     __pmaintext:	
   608 ;;
   609 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   610 ;;
   611 ;; *************** function _main *****************
   612 ;; Defined at:
   613 ;;		line 116 in file "newmain.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : B00/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0
   629 ;;      Temps:          0       3       0       0       0
   630 ;;      Totals:         0       3       0       0       0
   631 ;;Total ram usage:        3 bytes
   632 ;; Hardware stack levels required when called: 8
   633 ;; This function calls:
   634 ;;		_Lcd_Clear
   635 ;;		_Lcd_Init
   636 ;;		_Lcd_Padrao
   637 ;;		_Lcd_Set_Cursor
   638 ;;		_Lcd_Write_String
   639 ;;		_PesoCambuca
   640 ;;		_PesoEstoque
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646  0027                     _main:	
   647                           ;psect for function _main
   648                           
   649  0027                     l1350:	
   650                           ;incstack = 0
   651                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   652                           
   653                           
   654                           ;newmain.c: 117:     TRISA = 0b11111111;
   655  0027  30FF               	movlw	255
   656  0028  1683               	bsf	3,5	;RP0=1, select bank1
   657  0029  1303               	bcf	3,6	;RP1=0, select bank1
   658  002A  0085               	movwf	5	;volatile
   659                           
   660                           ;newmain.c: 118:     TRISB = 0b00000111;
   661  002B  3007               	movlw	7
   662  002C  0086               	movwf	6	;volatile
   663  002D                     l1352:
   664                           
   665                           ;newmain.c: 119:     TRISC = 0;
   666  002D  0187               	clrf	7	;volatile
   667  002E                     l1354:
   668                           
   669                           ;newmain.c: 120:     TRISD = 0;
   670  002E  0188               	clrf	8	;volatile
   671                           
   672                           ;newmain.c: 121:     OPTION_REG = 0b00111111;
   673  002F  303F               	movlw	63
   674  0030  0081               	movwf	1	;volatile
   675  0031                     l1356:
   676                           
   677                           ;newmain.c: 122:     PORTA = 0;
   678  0031  1283               	bcf	3,5	;RP0=0, select bank0
   679  0032  1303               	bcf	3,6	;RP1=0, select bank0
   680  0033  0185               	clrf	5	;volatile
   681  0034                     l1358:
   682                           
   683                           ;newmain.c: 123:     PORTB = 0;
   684  0034  0186               	clrf	6	;volatile
   685  0035                     l1360:
   686                           
   687                           ;newmain.c: 124:     PORTC = 0;
   688  0035  0187               	clrf	7	;volatile
   689  0036                     l1362:
   690                           
   691                           ;newmain.c: 125:     PORTD = 0;
   692  0036  0188               	clrf	8	;volatile
   693  0037                     l1364:
   694                           
   695                           ;newmain.c: 127:     INTCONbits.GIE = 1;
   696  0037  178B               	bsf	11,7	;volatile
   697  0038                     l1366:
   698                           
   699                           ;newmain.c: 128:     INTCONbits.PEIE = 1;
   700  0038  170B               	bsf	11,6	;volatile
   701  0039                     l1368:
   702                           
   703                           ;newmain.c: 129:     INTCONbits.INTE=1;
   704  0039  160B               	bsf	11,4	;volatile
   705  003A                     l1370:
   706                           
   707                           ;newmain.c: 131:     PIE1bits.TMR1IE = 1;
   708  003A  1683               	bsf	3,5	;RP0=1, select bank1
   709  003B  1303               	bcf	3,6	;RP1=0, select bank1
   710  003C  140C               	bsf	12,0	;volatile
   711  003D                     l1372:
   712                           
   713                           ;newmain.c: 132:     T1CONbits.TMR1CS = 0;
   714  003D  1283               	bcf	3,5	;RP0=0, select bank0
   715  003E  1303               	bcf	3,6	;RP1=0, select bank0
   716  003F  1090               	bcf	16,1	;volatile
   717  0040                     l1374:
   718                           
   719                           ;newmain.c: 134:     T1CONbits.T1CKPS0 = 1;
   720  0040  1610               	bsf	16,4	;volatile
   721  0041                     l1376:
   722                           
   723                           ;newmain.c: 135:     T1CONbits.T1CKPS1 = 1;
   724  0041  1690               	bsf	16,5	;volatile
   725                           
   726                           ;newmain.c: 141:     TMR1L = 0xDC;
   727  0042  30DC               	movlw	220
   728  0043  008E               	movwf	14	;volatile
   729                           
   730                           ;newmain.c: 142:     TMR1H = 0X0B;
   731  0044  300B               	movlw	11
   732  0045  008F               	movwf	15	;volatile
   733  0046                     l1378:
   734                           
   735                           ;newmain.c: 145:     ADCON1bits.PCFG0 = 0;
   736  0046  1683               	bsf	3,5	;RP0=1, select bank1
   737  0047  1303               	bcf	3,6	;RP1=0, select bank1
   738  0048  101F               	bcf	31,0	;volatile
   739  0049                     l1380:
   740                           
   741                           ;newmain.c: 146:     ADCON1bits.PCFG1 = 0;
   742  0049  109F               	bcf	31,1	;volatile
   743  004A                     l1382:
   744                           
   745                           ;newmain.c: 147:     ADCON1bits.PCFG2 = 0;
   746  004A  111F               	bcf	31,2	;volatile
   747  004B                     l1384:
   748                           
   749                           ;newmain.c: 148:     ADCON1bits.PCFG3 = 0;
   750  004B  119F               	bcf	31,3	;volatile
   751  004C                     l1386:
   752                           
   753                           ;newmain.c: 150:  ADCON0bits.ADCS0 = 0;
   754  004C  1283               	bcf	3,5	;RP0=0, select bank0
   755  004D  1303               	bcf	3,6	;RP1=0, select bank0
   756  004E  131F               	bcf	31,6	;volatile
   757  004F                     l1388:
   758                           
   759                           ;newmain.c: 151:     ADCON0bits.ADCS1 = 0;
   760  004F  139F               	bcf	31,7	;volatile
   761  0050                     l1390:
   762                           
   763                           ;newmain.c: 153:     ADCON1bits.ADFM = 0;
   764  0050  1683               	bsf	3,5	;RP0=1, select bank1
   765  0051  1303               	bcf	3,6	;RP1=0, select bank1
   766  0052  139F               	bcf	31,7	;volatile
   767  0053                     l1392:
   768                           
   769                           ;newmain.c: 156:     ADRESL = 0x00;
   770  0053  019E               	clrf	30	;volatile
   771  0054                     l1394:
   772                           
   773                           ;newmain.c: 157:     ADRESH = 0x00;
   774  0054  1283               	bcf	3,5	;RP0=0, select bank0
   775  0055  1303               	bcf	3,6	;RP1=0, select bank0
   776  0056  019E               	clrf	30	;volatile
   777  0057                     l1396:
   778                           
   779                           ;newmain.c: 159:     ADCON0bits.ADON = 1;
   780  0057  141F               	bsf	31,0	;volatile
   781  0058                     l1398:
   782                           
   783                           ;newmain.c: 163:     OPTION_REGbits.PSA = 1;
   784  0058  1683               	bsf	3,5	;RP0=1, select bank1
   785  0059  1303               	bcf	3,6	;RP1=0, select bank1
   786  005A  1581               	bsf	1,3	;volatile
   787  005B                     l1400:
   788                           
   789                           ;newmain.c: 165:     OPTION_REGbits.PS0 = 1;
   790  005B  1401               	bsf	1,0	;volatile
   791  005C                     l1402:
   792                           
   793                           ;newmain.c: 166:     OPTION_REGbits.PS1 = 1;
   794  005C  1481               	bsf	1,1	;volatile
   795  005D                     l1404:
   796                           
   797                           ;newmain.c: 167:     OPTION_REGbits.PS2 = 1;
   798  005D  1501               	bsf	1,2	;volatile
   799  005E  0064               	clrwdt	;# 
   800  005F                     l1406:
   801                           
   802                           ;newmain.c: 171:     Lcd_Init();
   803  005F  120A  118A  2285  120A  118A  	fcall	_Lcd_Init
   804  0064                     l1408:
   805                           
   806                           ;newmain.c: 172:     Lcd_Padrao();
   807  0064  120A  118A  2505  120A  118A  	fcall	_Lcd_Padrao
   808  0069                     l1410:
   809                           
   810                           ;newmain.c: 173:     PORTDbits.RD5 = 1;
   811  0069  1283               	bcf	3,5	;RP0=0, select bank0
   812  006A  1303               	bcf	3,6	;RP1=0, select bank0
   813  006B  1688               	bsf	8,5	;volatile
   814  006C                     l1412:
   815                           
   816                           ;newmain.c: 174:     interrupcao = 0;
   817  006C  01B2               	clrf	_interrupcao
   818  006D  01B3               	clrf	_interrupcao+1
   819  006E                     l1414:
   820                           
   821                           ;newmain.c: 175:     aux_timer = 0;
   822  006E  01B4               	clrf	_aux_timer
   823  006F  01B5               	clrf	_aux_timer+1
   824  0070                     l136:	
   825                           ;newmain.c: 176:     while(1){
   826                           
   827  0070  0064               	clrwdt	;# 
   828                           
   829                           ;newmain.c: 178:         while(interrupcao == 1){
   830  0071  287D               	goto	l1420
   831  0072                     l138:
   832                           
   833                           ;newmain.c: 181:             if(PORTBbits.RB1 == 0){
   834  0072  1886               	btfsc	6,1	;volatile
   835  0073  2875               	goto	u661
   836  0074  2876               	goto	u660
   837  0075                     u661:
   838  0075  287D               	goto	l1420
   839  0076                     u660:
   840  0076                     l1416:
   841                           
   842                           ;newmain.c: 182:                 interrupcao = 0;
   843  0076  01B2               	clrf	_interrupcao
   844  0077  01B3               	clrf	_interrupcao+1
   845  0078                     l1418:
   846                           
   847                           ;newmain.c: 183:                 Lcd_Padrao();
   848  0078  120A  118A  2505  120A  118A  	fcall	_Lcd_Padrao
   849  007D                     l1420:
   850                           
   851                           ;newmain.c: 178:         while(interrupcao == 1){
   852  007D  1283               	bcf	3,5	;RP0=0, select bank0
   853  007E  1303               	bcf	3,6	;RP1=0, select bank0
   854  007F  0332               	decf	_interrupcao,w
   855  0080  0433               	iorwf	_interrupcao+1,w
   856  0081  1903               	btfsc	3,2
   857  0082  2884               	goto	u671
   858  0083  2885               	goto	u670
   859  0084                     u671:
   860  0084  2872               	goto	l138
   861  0085                     u670:
   862  0085                     l140:
   863                           
   864                           ;newmain.c: 186:         if(PORTBbits.RB2 == 0){
   865  0085  1906               	btfsc	6,2	;volatile
   866  0086  2888               	goto	u681
   867  0087  2889               	goto	u680
   868  0088                     u681:
   869  0088  28E3               	goto	l1448
   870  0089                     u680:
   871  0089                     l1422:
   872  0089  0064               	clrwdt	;# 
   873  008A                     l1424:
   874                           
   875                           ;newmain.c: 188:             aux_timer = 0;
   876  008A  1283               	bcf	3,5	;RP0=0, select bank0
   877  008B  1303               	bcf	3,6	;RP1=0, select bank0
   878  008C  01B4               	clrf	_aux_timer
   879  008D  01B5               	clrf	_aux_timer+1
   880  008E                     l1426:
   881                           
   882                           ;newmain.c: 189:             Lcd_Clear();
   883  008E  120A  118A  25C8  120A  118A  	fcall	_Lcd_Clear
   884  0093                     l1428:
   885                           
   886                           ;newmain.c: 190:             Lcd_Set_Cursor(1,1);
   887  0093  1283               	bcf	3,5	;RP0=0, select bank0
   888  0094  1303               	bcf	3,6	;RP1=0, select bank0
   889  0095  01A8               	clrf	Lcd_Set_Cursor@b
   890  0096  0AA8               	incf	Lcd_Set_Cursor@b,f
   891  0097  3001               	movlw	1
   892  0098  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
   893  009D                     l1430:
   894                           
   895                           ;newmain.c: 191:             Lcd_Write_String("DESPEJANDO...");
   896  009D  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   897  009E  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
   898  00A3                     l1432:
   899                           
   900                           ;newmain.c: 192:             T1CONbits.TMR1ON = 1;
   901  00A3  1283               	bcf	3,5	;RP0=0, select bank0
   902  00A4  1303               	bcf	3,6	;RP1=0, select bank0
   903  00A5  1410               	bsf	16,0	;volatile
   904                           
   905                           ;newmain.c: 193:             while (aux_timer == 0 && interrupcao == 0){
   906  00A6  28A8               	goto	l1434
   907  00A7                     l143:
   908                           
   909                           ;newmain.c: 194:                 PORTDbits.RD7 = 1;
   910  00A7  1788               	bsf	8,7	;volatile
   911  00A8                     l1434:
   912                           
   913                           ;newmain.c: 193:             while (aux_timer == 0 && interrupcao == 0){
   914  00A8  0834               	movf	_aux_timer,w
   915  00A9  0435               	iorwf	_aux_timer+1,w
   916  00AA  1D03               	btfss	3,2
   917  00AB  28AD               	goto	u691
   918  00AC  28AE               	goto	u690
   919  00AD                     u691:
   920  00AD  28B4               	goto	l146
   921  00AE                     u690:
   922  00AE                     l1436:
   923  00AE  0832               	movf	_interrupcao,w
   924  00AF  0433               	iorwf	_interrupcao+1,w
   925  00B0  1903               	btfsc	3,2
   926  00B1  28B3               	goto	u701
   927  00B2  28B4               	goto	u700
   928  00B3                     u701:
   929  00B3  28A7               	goto	l143
   930  00B4                     u700:
   931  00B4                     l146:
   932                           
   933                           ;newmain.c: 196:             PORTDbits.RD7 = 0;
   934  00B4  1388               	bcf	8,7	;volatile
   935  00B5                     l1438:
   936                           
   937                           ;newmain.c: 197:             if(interrupcao == 0){
   938  00B5  0832               	movf	_interrupcao,w
   939  00B6  0433               	iorwf	_interrupcao+1,w
   940  00B7  1D03               	btfss	3,2
   941  00B8  28BA               	goto	u711
   942  00B9  28BB               	goto	u710
   943  00BA                     u711:
   944  00BA  28E3               	goto	l1448
   945  00BB                     u710:
   946  00BB                     l1440:
   947                           
   948                           ;newmain.c: 198:                 Lcd_Clear();
   949  00BB  120A  118A  25C8  120A  118A  	fcall	_Lcd_Clear
   950                           
   951                           ;newmain.c: 199:                 Lcd_Set_Cursor(1,1);
   952  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   953  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   954  00C2  01A8               	clrf	Lcd_Set_Cursor@b
   955  00C3  0AA8               	incf	Lcd_Set_Cursor@b,f
   956  00C4  3001               	movlw	1
   957  00C5  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
   958  00CA                     l1442:
   959                           
   960                           ;newmain.c: 200:                 Lcd_Write_String("RACAO COLOCADA.");
   961  00CA  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   962  00CB  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
   963  00D0                     l1444:
   964                           
   965                           ;newmain.c: 201:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
   966  00D0  300B               	movlw	11
   967  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   968  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   969  00D3  00B1               	movwf	??_main+2
   970  00D4  3026               	movlw	38
   971  00D5  00B0               	movwf	??_main+1
   972  00D6  305D               	movlw	93
   973  00D7  00AF               	movwf	??_main
   974  00D8                     u857:
   975  00D8  0BAF               	decfsz	??_main,f
   976  00D9  28D8               	goto	u857
   977  00DA  0BB0               	decfsz	??_main+1,f
   978  00DB  28D8               	goto	u857
   979  00DC  0BB1               	decfsz	??_main+2,f
   980  00DD  28D8               	goto	u857
   981  00DE                     l1446:
   982                           
   983                           ;newmain.c: 202:                 Lcd_Padrao();
   984  00DE  120A  118A  2505  120A  118A  	fcall	_Lcd_Padrao
   985  00E3                     l1448:
   986                           
   987                           ;newmain.c: 205:         if(PesoCambuca()<= 51 && PesoEstoque() > 51 && interrupcao == 0
      +                          ){
   988  00E3  120A  118A  242B  120A  118A  	fcall	_PesoCambuca
   989  00E8  1283               	bcf	3,5	;RP0=0, select bank0
   990  00E9  1303               	bcf	3,6	;RP1=0, select bank0
   991  00EA  0825               	movf	?_PesoCambuca+1,w
   992  00EB  3A80               	xorlw	128
   993  00EC  00FF               	movwf	btemp+1
   994  00ED  3080               	movlw	128
   995  00EE  027F               	subwf	btemp+1,w
   996  00EF  1D03               	skipz
   997  00F0  28F3               	goto	u725
   998  00F1  3034               	movlw	52
   999  00F2  0224               	subwf	?_PesoCambuca,w
  1000  00F3                     u725:
  1001  00F3  1803               	skipnc
  1002  00F4  28F6               	goto	u721
  1003  00F5  28F7               	goto	u720
  1004  00F6                     u721:
  1005  00F6  298E               	goto	l1480
  1006  00F7                     u720:
  1007  00F7                     l1450:
  1008  00F7  120A  118A  23EE  120A  118A  	fcall	_PesoEstoque
  1009  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  1010  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  1011  00FE  0825               	movf	?_PesoEstoque+1,w
  1012  00FF  3A80               	xorlw	128
  1013  0100  00FF               	movwf	btemp+1
  1014  0101  3080               	movlw	128
  1015  0102  027F               	subwf	btemp+1,w
  1016  0103  1D03               	skipz
  1017  0104  2907               	goto	u735
  1018  0105  3034               	movlw	52
  1019  0106  0224               	subwf	?_PesoEstoque,w
  1020  0107                     u735:
  1021  0107  1C03               	skipc
  1022  0108  290A               	goto	u731
  1023  0109  290B               	goto	u730
  1024  010A                     u731:
  1025  010A  298E               	goto	l1480
  1026  010B                     u730:
  1027  010B                     l1452:
  1028  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1029  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1030  010D  0832               	movf	_interrupcao,w
  1031  010E  0433               	iorwf	_interrupcao+1,w
  1032  010F  1D03               	btfss	3,2
  1033  0110  2912               	goto	u741
  1034  0111  2913               	goto	u740
  1035  0112                     u741:
  1036  0112  298E               	goto	l1480
  1037  0113                     u740:
  1038  0113                     l1454:
  1039  0113  0064               	clrwdt	;# 
  1040  0114                     l1456:
  1041                           
  1042                           ;newmain.c: 207:             Lcd_Clear();
  1043  0114  120A  118A  25C8  120A  118A  	fcall	_Lcd_Clear
  1044                           
  1045                           ;newmain.c: 208:             Lcd_Set_Cursor(1,1);
  1046  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1047  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1048  011B  01A8               	clrf	Lcd_Set_Cursor@b
  1049  011C  0AA8               	incf	Lcd_Set_Cursor@b,f
  1050  011D  3001               	movlw	1
  1051  011E  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
  1052  0123                     l1458:
  1053                           
  1054                           ;newmain.c: 209:             Lcd_Write_String("DESPEJANDO...");
  1055  0123  3022               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1056  0124  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
  1057                           
  1058                           ;newmain.c: 210:             while(PesoCambuca() <= 204 && PesoEstoque() > 51){
  1059  0129  2935               	goto	l1464
  1060  012A                     l150:
  1061  012A  0064               	clrwdt	;# 
  1062  012B                     l1460:
  1063                           
  1064                           ;newmain.c: 213:                 if(interrupcao == 1){
  1065  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1066  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1067  012D  0332               	decf	_interrupcao,w
  1068  012E  0433               	iorwf	_interrupcao+1,w
  1069  012F  1D03               	btfss	3,2
  1070  0130  2932               	goto	u751
  1071  0131  2933               	goto	u750
  1072  0132                     u751:
  1073  0132  2934               	goto	l151
  1074  0133                     u750:
  1075  0133  295D               	goto	l1468
  1076  0134                     l151:	
  1077                           ;newmain.c: 215:                 }
  1078                           
  1079                           
  1080                           ;newmain.c: 216:                 PORTDbits.RD7 = 1;
  1081  0134  1788               	bsf	8,7	;volatile
  1082  0135                     l1464:
  1083                           
  1084                           ;newmain.c: 210:             while(PesoCambuca() <= 204 && PesoEstoque() > 51){
  1085  0135  120A  118A  242B  120A  118A  	fcall	_PesoCambuca
  1086  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1087  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1088  013C  0825               	movf	?_PesoCambuca+1,w
  1089  013D  3A80               	xorlw	128
  1090  013E  00FF               	movwf	btemp+1
  1091  013F  3080               	movlw	128
  1092  0140  027F               	subwf	btemp+1,w
  1093  0141  1D03               	skipz
  1094  0142  2945               	goto	u765
  1095  0143  30CD               	movlw	205
  1096  0144  0224               	subwf	?_PesoCambuca,w
  1097  0145                     u765:
  1098  0145  1803               	skipnc
  1099  0146  2948               	goto	u761
  1100  0147  2949               	goto	u760
  1101  0148                     u761:
  1102  0148  295D               	goto	l1468
  1103  0149                     u760:
  1104  0149                     l1466:
  1105  0149  120A  118A  23EE  120A  118A  	fcall	_PesoEstoque
  1106  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1107  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0150  0825               	movf	?_PesoEstoque+1,w
  1109  0151  3A80               	xorlw	128
  1110  0152  00FF               	movwf	btemp+1
  1111  0153  3080               	movlw	128
  1112  0154  027F               	subwf	btemp+1,w
  1113  0155  1D03               	skipz
  1114  0156  2959               	goto	u775
  1115  0157  3034               	movlw	52
  1116  0158  0224               	subwf	?_PesoEstoque,w
  1117  0159                     u775:
  1118  0159  1803               	skipnc
  1119  015A  295C               	goto	u771
  1120  015B  295D               	goto	u770
  1121  015C                     u771:
  1122  015C  292A               	goto	l150
  1123  015D                     u770:
  1124  015D                     l1468:
  1125                           
  1126                           ;newmain.c: 218:             if(interrupcao == 0){
  1127  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1128  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1129  015F  0832               	movf	_interrupcao,w
  1130  0160  0433               	iorwf	_interrupcao+1,w
  1131  0161  1D03               	btfss	3,2
  1132  0162  2964               	goto	u781
  1133  0163  2965               	goto	u780
  1134  0164                     u781:
  1135  0164  298E               	goto	l1480
  1136  0165                     u780:
  1137  0165                     l1470:
  1138                           
  1139                           ;newmain.c: 219:                 PORTDbits.RD7 = 0;
  1140  0165  1388               	bcf	8,7	;volatile
  1141  0166                     l1472:
  1142                           
  1143                           ;newmain.c: 220:                 Lcd_Clear();
  1144  0166  120A  118A  25C8  120A  118A  	fcall	_Lcd_Clear
  1145                           
  1146                           ;newmain.c: 221:                 Lcd_Set_Cursor(1,1);
  1147  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1148  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1149  016D  01A8               	clrf	Lcd_Set_Cursor@b
  1150  016E  0AA8               	incf	Lcd_Set_Cursor@b,f
  1151  016F  3001               	movlw	1
  1152  0170  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
  1153  0175                     l1474:
  1154                           
  1155                           ;newmain.c: 222:                 Lcd_Write_String("RACAO COLOCADA.");
  1156  0175  3012               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1157  0176  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
  1158  017B                     l1476:
  1159                           
  1160                           ;newmain.c: 223:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1161  017B  300B               	movlw	11
  1162  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1163  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1164  017E  00B1               	movwf	??_main+2
  1165  017F  3026               	movlw	38
  1166  0180  00B0               	movwf	??_main+1
  1167  0181  305D               	movlw	93
  1168  0182  00AF               	movwf	??_main
  1169  0183                     u867:
  1170  0183  0BAF               	decfsz	??_main,f
  1171  0184  2983               	goto	u867
  1172  0185  0BB0               	decfsz	??_main+1,f
  1173  0186  2983               	goto	u867
  1174  0187  0BB1               	decfsz	??_main+2,f
  1175  0188  2983               	goto	u867
  1176  0189                     l1478:
  1177                           
  1178                           ;newmain.c: 224:                 Lcd_Padrao();
  1179  0189  120A  118A  2505  120A  118A  	fcall	_Lcd_Padrao
  1180  018E                     l1480:
  1181                           
  1182                           ;newmain.c: 227:        if(PesoEstoque() <= 51)
  1183  018E  120A  118A  23EE  120A  118A  	fcall	_PesoEstoque
  1184  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0195  0825               	movf	?_PesoEstoque+1,w
  1187  0196  3A80               	xorlw	128
  1188  0197  00FF               	movwf	btemp+1
  1189  0198  3080               	movlw	128
  1190  0199  027F               	subwf	btemp+1,w
  1191  019A  1D03               	skipz
  1192  019B  299E               	goto	u795
  1193  019C  3034               	movlw	52
  1194  019D  0224               	subwf	?_PesoEstoque,w
  1195  019E                     u795:
  1196  019E  1803               	skipnc
  1197  019F  29A1               	goto	u791
  1198  01A0  29A2               	goto	u790
  1199  01A1                     u791:
  1200  01A1  2870               	goto	l136
  1201  01A2                     u790:
  1202  01A2                     l1482:
  1203  01A2  0064               	clrwdt	;# 
  1204  01A3                     l1484:
  1205                           
  1206                           ;newmain.c: 230:            aux_timer = 0;
  1207  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1208  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1209  01A5  01B4               	clrf	_aux_timer
  1210  01A6  01B5               	clrf	_aux_timer+1
  1211  01A7                     l1486:
  1212                           
  1213                           ;newmain.c: 231:            PORTDbits.RD6 = 1;
  1214  01A7  1708               	bsf	8,6	;volatile
  1215  01A8                     l1488:
  1216                           
  1217                           ;newmain.c: 232:            Lcd_Clear();
  1218  01A8  120A  118A  25C8  120A  118A  	fcall	_Lcd_Clear
  1219  01AD                     l1490:
  1220                           
  1221                           ;newmain.c: 233:            Lcd_Set_Cursor(1,1);
  1222  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1223  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1224  01AF  01A8               	clrf	Lcd_Set_Cursor@b
  1225  01B0  0AA8               	incf	Lcd_Set_Cursor@b,f
  1226  01B1  3001               	movlw	1
  1227  01B2  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
  1228  01B7                     l1492:
  1229                           
  1230                           ;newmain.c: 234:            Lcd_Write_String("ESTOQUE EM NIVEL");
  1231  01B7  3001               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1232  01B8  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
  1233  01BD                     l1494:
  1234                           
  1235                           ;newmain.c: 235:            Lcd_Set_Cursor(2,1);
  1236  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1237  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1238  01BF  01A8               	clrf	Lcd_Set_Cursor@b
  1239  01C0  0AA8               	incf	Lcd_Set_Cursor@b,f
  1240  01C1  3002               	movlw	2
  1241  01C2  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
  1242  01C7                     l1496:
  1243                           
  1244                           ;newmain.c: 236:            Lcd_Write_String("BAIXO...");
  1245  01C7  3055               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1246  01C8  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
  1247  01CD                     l1498:
  1248                           
  1249                           ;newmain.c: 237:            T1CONbits.TMR1ON = 1;
  1250  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1251  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1252  01CF  1410               	bsf	16,0	;volatile
  1253                           
  1254                           ;newmain.c: 238:            while(aux_timer == 0 && PORTBbits.RB2 == 1){
  1255  01D0  29ED               	goto	l1510
  1256  01D1                     l1500:
  1257                           
  1258                           ;newmain.c: 239:                if(interrupcao == 1){
  1259  01D1  0332               	decf	_interrupcao,w
  1260  01D2  0433               	iorwf	_interrupcao+1,w
  1261  01D3  1D03               	btfss	3,2
  1262  01D4  29D6               	goto	u801
  1263  01D5  29D7               	goto	u800
  1264  01D6                     u801:
  1265  01D6  29D8               	goto	l1506
  1266  01D7                     u800:
  1267  01D7  29F9               	goto	l160
  1268  01D8                     l1506:
  1269  01D8  120A  118A  23EE  120A  118A  	fcall	_PesoEstoque
  1270  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1271  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1272  01DF  0825               	movf	?_PesoEstoque+1,w
  1273  01E0  3A80               	xorlw	128
  1274  01E1  00FF               	movwf	btemp+1
  1275  01E2  3080               	movlw	128
  1276  01E3  027F               	subwf	btemp+1,w
  1277  01E4  1D03               	skipz
  1278  01E5  29E8               	goto	u815
  1279  01E6  3034               	movlw	52
  1280  01E7  0224               	subwf	?_PesoEstoque,w
  1281  01E8                     u815:
  1282  01E8  1C03               	skipc
  1283  01E9  29EB               	goto	u811
  1284  01EA  29EC               	goto	u810
  1285  01EB                     u811:
  1286  01EB  29ED               	goto	l1510
  1287  01EC                     u810:
  1288  01EC  29F9               	goto	l160
  1289  01ED                     l1510:
  1290                           
  1291                           ;newmain.c: 238:            while(aux_timer == 0 && PORTBbits.RB2 == 1){
  1292  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1293  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1294  01EF  0834               	movf	_aux_timer,w
  1295  01F0  0435               	iorwf	_aux_timer+1,w
  1296  01F1  1D03               	btfss	3,2
  1297  01F2  29F4               	goto	u821
  1298  01F3  29F5               	goto	u820
  1299  01F4                     u821:
  1300  01F4  29F9               	goto	l160
  1301  01F5                     u820:
  1302  01F5                     l1512:
  1303  01F5  1906               	btfsc	6,2	;volatile
  1304  01F6  29F8               	goto	u831
  1305  01F7  29F9               	goto	u830
  1306  01F8                     u831:
  1307  01F8  29D1               	goto	l1500
  1308  01F9                     u830:
  1309  01F9                     l160:
  1310                           
  1311                           ;newmain.c: 246:            PORTDbits.RD6 = 0;
  1312  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1313  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1314  01FB  1308               	bcf	8,6	;volatile
  1315  01FC                     l1514:
  1316                           
  1317                           ;newmain.c: 247:            if(interrupcao == 0){
  1318  01FC  0832               	movf	_interrupcao,w
  1319  01FD  0433               	iorwf	_interrupcao+1,w
  1320  01FE  1D03               	btfss	3,2
  1321  01FF  2A01               	goto	u841
  1322  0200  2A02               	goto	u840
  1323  0201                     u841:
  1324  0201  2870               	goto	l136
  1325  0202                     u840:
  1326  0202                     l1516:
  1327                           
  1328                           ;newmain.c: 248:                 Lcd_Padrao();
  1329  0202  120A  118A  2505  120A  118A  	fcall	_Lcd_Padrao
  1330  0207                     l1518:
  1331                           
  1332                           ;newmain.c: 249:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1333  0207  300B               	movlw	11
  1334  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1336  020A  00B1               	movwf	??_main+2
  1337  020B  3026               	movlw	38
  1338  020C  00B0               	movwf	??_main+1
  1339  020D  305D               	movlw	93
  1340  020E  00AF               	movwf	??_main
  1341  020F                     u877:
  1342  020F  0BAF               	decfsz	??_main,f
  1343  0210  2A0F               	goto	u877
  1344  0211  0BB0               	decfsz	??_main+1,f
  1345  0212  2A0F               	goto	u877
  1346  0213  0BB1               	decfsz	??_main+2,f
  1347  0214  2A0F               	goto	u877
  1348  0215  2870               	goto	l136
  1349  0216  120A  118A  2812   	ljmp	start
  1350  0219                     __end_of_main:
  1351                           
  1352                           	psect	text1
  1353  03EE                     __ptext1:	
  1354 ;; *************** function _PesoEstoque *****************
  1355 ;; Defined at:
  1356 ;;		line 77 in file "newmain.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  peso            2    8[BANK0 ] int 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2    4[BANK0 ] int 
  1363 ;; Registers used:
  1364 ;;		wreg
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       2       0       0       0
  1371 ;;      Locals:         0       2       0       0       0
  1372 ;;      Temps:          0       2       0       0       0
  1373 ;;      Totals:         0       6       0       0       0
  1374 ;;Total ram usage:        6 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 4
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384  03EE                     _PesoEstoque:	
  1385                           ;psect for function _PesoEstoque
  1386                           
  1387  03EE                     l1260:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _PesoEstoque: [wreg]
  1390                           
  1391                           
  1392                           ;newmain.c: 79:     int peso;;newmain.c: 80:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  1393  03EE  3002               	movlw	2
  1394  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1395  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1396  03F1  00A6               	movwf	??_PesoEstoque
  1397  03F2                     u887:
  1398  03F2  0BA6               	decfsz	??_PesoEstoque,f
  1399  03F3  2BF2               	goto	u887
  1400  03F4  0000               	nop
  1401  03F5                     l1262:
  1402                           
  1403                           ;newmain.c: 81:     ADCON0bits.CHS0 = 0;
  1404  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1405  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1406  03F7  119F               	bcf	31,3	;volatile
  1407                           
  1408                           ;newmain.c: 82:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1409  03F8  3002               	movlw	2
  1410  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  1411  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  1412  03FB  00A6               	movwf	??_PesoEstoque
  1413  03FC                     u897:
  1414  03FC  0BA6               	decfsz	??_PesoEstoque,f
  1415  03FD  2BFC               	goto	u897
  1416  03FE  0000               	nop
  1417  03FF                     l1264:
  1418                           
  1419                           ;newmain.c: 83:     ADCON0bits.CHS1 = 0;
  1420  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0401  121F               	bcf	31,4	;volatile
  1423                           
  1424                           ;newmain.c: 84:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1425  0402  3002               	movlw	2
  1426  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0405  00A6               	movwf	??_PesoEstoque
  1429  0406                     u907:
  1430  0406  0BA6               	decfsz	??_PesoEstoque,f
  1431  0407  2C06               	goto	u907
  1432  0408  0000               	nop
  1433  0409                     l1266:
  1434                           
  1435                           ;newmain.c: 85:     ADCON0bits.CHS2 = 0;
  1436  0409  1283               	bcf	3,5	;RP0=0, select bank0
  1437  040A  1303               	bcf	3,6	;RP1=0, select bank0
  1438  040B  129F               	bcf	31,5	;volatile
  1439                           
  1440                           ;newmain.c: 86:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1441  040C  3002               	movlw	2
  1442  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1443  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1444  040F  00A6               	movwf	??_PesoEstoque
  1445  0410                     u917:
  1446  0410  0BA6               	decfsz	??_PesoEstoque,f
  1447  0411  2C10               	goto	u917
  1448  0412  0000               	nop
  1449  0413                     l1268:
  1450                           
  1451                           ;newmain.c: 87:     ADCON0bits.GO = 1;
  1452  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0415  151F               	bsf	31,2	;volatile
  1455                           
  1456                           ;newmain.c: 88:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1457  0416  3002               	movlw	2
  1458  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0419  00A6               	movwf	??_PesoEstoque
  1461  041A                     u927:
  1462  041A  0BA6               	decfsz	??_PesoEstoque,f
  1463  041B  2C1A               	goto	u927
  1464  041C  0000               	nop
  1465                           
  1466                           ;newmain.c: 89:     peso = ADRESH;
  1467  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1468  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1469  041F  081E               	movf	30,w	;volatile
  1470  0420  00A6               	movwf	??_PesoEstoque
  1471  0421  01A7               	clrf	??_PesoEstoque+1
  1472  0422  0826               	movf	??_PesoEstoque,w
  1473  0423  00A8               	movwf	PesoEstoque@peso
  1474  0424  0827               	movf	??_PesoEstoque+1,w
  1475  0425  00A9               	movwf	PesoEstoque@peso+1
  1476                           
  1477                           ;newmain.c: 90:     return peso;
  1478  0426  0829               	movf	PesoEstoque@peso+1,w
  1479  0427  00A5               	movwf	?_PesoEstoque+1
  1480  0428  0828               	movf	PesoEstoque@peso,w
  1481  0429  00A4               	movwf	?_PesoEstoque
  1482  042A                     l125:
  1483  042A  0008               	return
  1484  042B                     __end_of_PesoEstoque:
  1485                           
  1486                           	psect	text2
  1487  042B                     __ptext2:	
  1488 ;; *************** function _PesoCambuca *****************
  1489 ;; Defined at:
  1490 ;;		line 92 in file "newmain.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  peso            2    8[BANK0 ] int 
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  2    4[BANK0 ] int 
  1497 ;; Registers used:
  1498 ;;		wreg
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         0       2       0       0       0
  1505 ;;      Locals:         0       2       0       0       0
  1506 ;;      Temps:          0       2       0       0       0
  1507 ;;      Totals:         0       6       0       0       0
  1508 ;;Total ram usage:        6 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 4
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518  042B                     _PesoCambuca:	
  1519                           ;psect for function _PesoCambuca
  1520                           
  1521  042B                     l1272:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _PesoCambuca: [wreg]
  1524                           
  1525                           
  1526                           ;newmain.c: 94:     int peso;;newmain.c: 95:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  1527  042B  3002               	movlw	2
  1528  042C  1283               	bcf	3,5	;RP0=0, select bank0
  1529  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1530  042E  00A6               	movwf	??_PesoCambuca
  1531  042F                     u937:
  1532  042F  0BA6               	decfsz	??_PesoCambuca,f
  1533  0430  2C2F               	goto	u937
  1534  0431  0000               	nop
  1535  0432                     l1274:
  1536                           
  1537                           ;newmain.c: 96:     ADCON0bits.CHS0 = 1;
  1538  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0434  159F               	bsf	31,3	;volatile
  1541                           
  1542                           ;newmain.c: 97:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1543  0435  3002               	movlw	2
  1544  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0438  00A6               	movwf	??_PesoCambuca
  1547  0439                     u947:
  1548  0439  0BA6               	decfsz	??_PesoCambuca,f
  1549  043A  2C39               	goto	u947
  1550  043B  0000               	nop
  1551  043C                     l1276:
  1552                           
  1553                           ;newmain.c: 98:     ADCON0bits.CHS1 = 0;
  1554  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1555  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1556  043E  121F               	bcf	31,4	;volatile
  1557                           
  1558                           ;newmain.c: 99:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1559  043F  3002               	movlw	2
  1560  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0442  00A6               	movwf	??_PesoCambuca
  1563  0443                     u957:
  1564  0443  0BA6               	decfsz	??_PesoCambuca,f
  1565  0444  2C43               	goto	u957
  1566  0445  0000               	nop
  1567  0446                     l1278:
  1568                           
  1569                           ;newmain.c: 100:     ADCON0bits.CHS2 = 0;
  1570  0446  1283               	bcf	3,5	;RP0=0, select bank0
  1571  0447  1303               	bcf	3,6	;RP1=0, select bank0
  1572  0448  129F               	bcf	31,5	;volatile
  1573                           
  1574                           ;newmain.c: 101:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1575  0449  3002               	movlw	2
  1576  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1577  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1578  044C  00A6               	movwf	??_PesoCambuca
  1579  044D                     u967:
  1580  044D  0BA6               	decfsz	??_PesoCambuca,f
  1581  044E  2C4D               	goto	u967
  1582  044F  0000               	nop
  1583  0450                     l1280:
  1584                           
  1585                           ;newmain.c: 102:     ADCON0bits.GO = 1;
  1586  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0452  151F               	bsf	31,2	;volatile
  1589                           
  1590                           ;newmain.c: 103:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1591  0453  3002               	movlw	2
  1592  0454  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0455  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0456  00A6               	movwf	??_PesoCambuca
  1595  0457                     u977:
  1596  0457  0BA6               	decfsz	??_PesoCambuca,f
  1597  0458  2C57               	goto	u977
  1598  0459  0000               	nop
  1599                           
  1600                           ;newmain.c: 104:     peso = ADRESH;
  1601  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1602  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1603  045C  081E               	movf	30,w	;volatile
  1604  045D  00A6               	movwf	??_PesoCambuca
  1605  045E  01A7               	clrf	??_PesoCambuca+1
  1606  045F  0826               	movf	??_PesoCambuca,w
  1607  0460  00A8               	movwf	PesoCambuca@peso
  1608  0461  0827               	movf	??_PesoCambuca+1,w
  1609  0462  00A9               	movwf	PesoCambuca@peso+1
  1610                           
  1611                           ;newmain.c: 105:     return peso;
  1612  0463  0829               	movf	PesoCambuca@peso+1,w
  1613  0464  00A5               	movwf	?_PesoCambuca+1
  1614  0465  0828               	movf	PesoCambuca@peso,w
  1615  0466  00A4               	movwf	?_PesoCambuca
  1616  0467                     l128:
  1617  0467  0008               	return
  1618  0468                     __end_of_PesoCambuca:
  1619                           
  1620                           	psect	text3
  1621  0505                     __ptext3:	
  1622 ;; *************** function _Lcd_Padrao *****************
  1623 ;; Defined at:
  1624 ;;		line 108 in file "newmain.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 7
  1645 ;; This function calls:
  1646 ;;		_Lcd_Clear
  1647 ;;		_Lcd_Set_Cursor
  1648 ;;		_Lcd_Write_String
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654  0505                     _Lcd_Padrao:	
  1655                           ;psect for function _Lcd_Padrao
  1656                           
  1657  0505                     l1284:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _Lcd_Padrao: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1660                           
  1661                           
  1662                           ;newmain.c: 109:     Lcd_Clear();
  1663  0505  120A  118A  25C8  120A  118A  	fcall	_Lcd_Clear
  1664                           
  1665                           ;newmain.c: 110:     Lcd_Set_Cursor(1,1);
  1666  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1667  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1668  050C  01A8               	clrf	Lcd_Set_Cursor@b
  1669  050D  0AA8               	incf	Lcd_Set_Cursor@b,f
  1670  050E  3001               	movlw	1
  1671  050F  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
  1672  0514                     l1286:
  1673                           
  1674                           ;newmain.c: 111:     Lcd_Write_String("SIGMA DOG");
  1675  0514  304B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1676  0515  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
  1677  051A                     l1288:
  1678                           
  1679                           ;newmain.c: 112:     Lcd_Set_Cursor(2,1);
  1680  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1681  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1682  051C  01A8               	clrf	Lcd_Set_Cursor@b
  1683  051D  0AA8               	incf	Lcd_Set_Cursor@b,f
  1684  051E  3002               	movlw	2
  1685  051F  120A  118A  2344  120A  118A  	fcall	_Lcd_Set_Cursor
  1686                           
  1687                           ;newmain.c: 113:     Lcd_Write_String("GRINDSET");
  1688  0524  305E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1689  0525  120A  118A  24DC  120A  118A  	fcall	_Lcd_Write_String
  1690  052A                     l131:
  1691  052A  0008               	return
  1692  052B                     __end_of_Lcd_Padrao:
  1693                           
  1694                           	psect	text4
  1695  04DC                     __ptext4:	
  1696 ;; *************** function _Lcd_Write_String *****************
  1697 ;; Defined at:
  1698 ;;		line 96 in file "./LCD.h"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  a               1    wreg     PTR unsigned char 
  1701 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  1702 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  1703 ;;		 -> STR_2(13), STR_1(14), 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  a               1   11[BANK0 ] PTR unsigned char 
  1706 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  1707 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  1708 ;;		 -> STR_2(13), STR_1(14), 
  1709 ;;  i               2    9[BANK0 ] int 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         0       3       0       0       0
  1721 ;;      Temps:          0       0       0       0       0
  1722 ;;      Totals:         0       3       0       0       0
  1723 ;;Total ram usage:        3 bytes
  1724 ;; Hardware stack levels used: 1
  1725 ;; Hardware stack levels required when called: 6
  1726 ;; This function calls:
  1727 ;;		_Lcd_Write_Char
  1728 ;; This function is called by:
  1729 ;;		_Lcd_Padrao
  1730 ;;		_main
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734  04DC                     _Lcd_Write_String:	
  1735                           ;psect for function _Lcd_Write_String
  1736                           
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1740                           ;Lcd_Write_String@a stored from wreg
  1741  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1742  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1743  04DE  00AB               	movwf	Lcd_Write_String@a
  1744  04DF                     l1212:
  1745                           
  1746                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1747  04DF  01A9               	clrf	Lcd_Write_String@i
  1748  04E0  01AA               	clrf	Lcd_Write_String@i+1
  1749  04E1  2CF7               	goto	l1218
  1750  04E2                     l1214:
  1751                           
  1752                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  1753  04E2  0829               	movf	Lcd_Write_String@i,w
  1754  04E3  072B               	addwf	Lcd_Write_String@a,w
  1755  04E4  0084               	movwf	4
  1756  04E5  120A  118A  2219  120A  118A  	fcall	stringdir
  1757  04EA  120A  118A  2468  120A  118A  	fcall	_Lcd_Write_Char
  1758  04EF                     l1216:
  1759  04EF  3001               	movlw	1
  1760  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1761  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1762  04F2  07A9               	addwf	Lcd_Write_String@i,f
  1763  04F3  1803               	skipnc
  1764  04F4  0AAA               	incf	Lcd_Write_String@i+1,f
  1765  04F5  3000               	movlw	0
  1766  04F6  07AA               	addwf	Lcd_Write_String@i+1,f
  1767  04F7                     l1218:
  1768  04F7  0829               	movf	Lcd_Write_String@i,w
  1769  04F8  072B               	addwf	Lcd_Write_String@a,w
  1770  04F9  0084               	movwf	4
  1771  04FA  120A  118A  2219  120A  118A  	fcall	stringdir
  1772  04FF  3A00               	xorlw	0
  1773  0500  1D03               	skipz
  1774  0501  2D03               	goto	u561
  1775  0502  2D04               	goto	u560
  1776  0503                     u561:
  1777  0503  2CE2               	goto	l1214
  1778  0504                     u560:
  1779  0504                     l95:
  1780  0504  0008               	return
  1781  0505                     __end_of_Lcd_Write_String:
  1782                           
  1783                           	psect	text5
  1784  0468                     __ptext5:	
  1785 ;; *************** function _Lcd_Write_Char *****************
  1786 ;; Defined at:
  1787 ;;		line 80 in file "./LCD.h"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;  a               1    wreg     unsigned char 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  a               1    8[BANK0 ] unsigned char 
  1792 ;;  y               1    7[BANK0 ] unsigned char 
  1793 ;;  temp            1    6[BANK0 ] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1803 ;;      Params:         0       0       0       0       0
  1804 ;;      Locals:         0       3       0       0       0
  1805 ;;      Temps:          0       1       0       0       0
  1806 ;;      Totals:         0       4       0       0       0
  1807 ;;Total ram usage:        4 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 5
  1810 ;; This function calls:
  1811 ;;		_Lcd_Port
  1812 ;; This function is called by:
  1813 ;;		_Lcd_Write_String
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817  0468                     _Lcd_Write_Char:	
  1818                           ;psect for function _Lcd_Write_Char
  1819                           
  1820                           
  1821                           ;incstack = 0
  1822                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1823                           ;Lcd_Write_Char@a stored from wreg
  1824  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1825  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1826  046A  00A8               	movwf	Lcd_Write_Char@a
  1827  046B                     l1160:
  1828                           
  1829                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  1830  046B  0828               	movf	Lcd_Write_Char@a,w
  1831  046C  390F               	andlw	15
  1832  046D  00A5               	movwf	??_Lcd_Write_Char
  1833  046E  0825               	movf	??_Lcd_Write_Char,w
  1834  046F  00A6               	movwf	Lcd_Write_Char@temp
  1835                           
  1836                           ;./LCD.h: 84:    y = a&0xF0;
  1837  0470  0828               	movf	Lcd_Write_Char@a,w
  1838  0471  39F0               	andlw	240
  1839  0472  00A5               	movwf	??_Lcd_Write_Char
  1840  0473  0825               	movf	??_Lcd_Write_Char,w
  1841  0474  00A7               	movwf	Lcd_Write_Char@y
  1842  0475                     l1162:
  1843                           
  1844                           ;./LCD.h: 85:    RC0 = 1;
  1845  0475  1407               	bsf	7,0	;volatile
  1846  0476                     l1164:
  1847                           
  1848                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  1849  0476  0827               	movf	Lcd_Write_Char@y,w
  1850  0477  00A5               	movwf	??_Lcd_Write_Char
  1851  0478  3004               	movlw	4
  1852  0479                     u475:
  1853  0479  1003               	clrc
  1854  047A  0CA5               	rrf	??_Lcd_Write_Char,f
  1855  047B  3EFF               	addlw	-1
  1856  047C  1D03               	skipz
  1857  047D  2C79               	goto	u475
  1858  047E  0825               	movf	??_Lcd_Write_Char,w
  1859  047F  120A  118A  2572  120A  118A  	fcall	_Lcd_Port
  1860  0484                     l1166:
  1861                           
  1862                           ;./LCD.h: 87:    RC2 = 1;
  1863  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0486  1507               	bsf	7,2	;volatile
  1866  0487                     l1168:
  1867                           
  1868                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1869  0487  300C               	movlw	12
  1870  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1872  048A  00A5               	movwf	??_Lcd_Write_Char
  1873  048B                     u987:
  1874  048B  0BA5               	decfsz	??_Lcd_Write_Char,f
  1875  048C  2C8B               	goto	u987
  1876  048D  0000               	nop
  1877  048E                     l1170:
  1878                           
  1879                           ;./LCD.h: 89:    RC2 = 0;
  1880  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1881  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0490  1107               	bcf	7,2	;volatile
  1883  0491                     l1172:
  1884                           
  1885                           ;./LCD.h: 90:    Lcd_Port(temp);
  1886  0491  0826               	movf	Lcd_Write_Char@temp,w
  1887  0492  120A  118A  2572  120A  118A  	fcall	_Lcd_Port
  1888  0497                     l1174:
  1889                           
  1890                           ;./LCD.h: 91:    RC2 = 1;
  1891  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0499  1507               	bsf	7,2	;volatile
  1894  049A                     l1176:
  1895                           
  1896                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1897  049A  300C               	movlw	12
  1898  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1899  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1900  049D  00A5               	movwf	??_Lcd_Write_Char
  1901  049E                     u997:
  1902  049E  0BA5               	decfsz	??_Lcd_Write_Char,f
  1903  049F  2C9E               	goto	u997
  1904  04A0  0000               	nop
  1905  04A1                     l1178:
  1906                           
  1907                           ;./LCD.h: 93:    RC2 = 0;
  1908  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1909  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1910  04A3  1107               	bcf	7,2	;volatile
  1911  04A4                     l89:
  1912  04A4  0008               	return
  1913  04A5                     __end_of_Lcd_Write_Char:
  1914                           
  1915                           	psect	text6
  1916  0344                     __ptext6:	
  1917 ;; *************** function _Lcd_Set_Cursor *****************
  1918 ;; Defined at:
  1919 ;;		line 40 in file "./LCD.h"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  a               1    wreg     unsigned char 
  1922 ;;  b               1    8[BANK0 ] unsigned char 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  a               1   11[BANK0 ] unsigned char 
  1925 ;;  temp            1   14[BANK0 ] unsigned char 
  1926 ;;  y               1   13[BANK0 ] unsigned char 
  1927 ;;  z               1   12[BANK0 ] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       1       0       0       0
  1938 ;;      Locals:         0       4       0       0       0
  1939 ;;      Temps:          0       2       0       0       0
  1940 ;;      Totals:         0       7       0       0       0
  1941 ;;Total ram usage:        7 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 6
  1944 ;; This function calls:
  1945 ;;		_Lcd_Cmd
  1946 ;; This function is called by:
  1947 ;;		_Lcd_Padrao
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952  0344                     _Lcd_Set_Cursor:	
  1953                           ;psect for function _Lcd_Set_Cursor
  1954                           
  1955                           
  1956                           ;incstack = 0
  1957                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1958                           ;Lcd_Set_Cursor@a stored from wreg
  1959  0344  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0345  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0346  00AB               	movwf	Lcd_Set_Cursor@a
  1962  0347                     l1192:
  1963                           
  1964                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1965  0347  032B               	decf	Lcd_Set_Cursor@a,w
  1966  0348  1D03               	btfss	3,2
  1967  0349  2B4B               	goto	u521
  1968  034A  2B4C               	goto	u520
  1969  034B                     u521:
  1970  034B  2B71               	goto	l1202
  1971  034C                     u520:
  1972  034C                     l1194:
  1973                           
  1974                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1975  034C  0828               	movf	Lcd_Set_Cursor@b,w
  1976  034D  3E7F               	addlw	127
  1977  034E  00A9               	movwf	??_Lcd_Set_Cursor
  1978  034F  0829               	movf	??_Lcd_Set_Cursor,w
  1979  0350  00AE               	movwf	Lcd_Set_Cursor@temp
  1980                           
  1981                           ;./LCD.h: 46:   z = temp>>4;
  1982  0351  082E               	movf	Lcd_Set_Cursor@temp,w
  1983  0352  00A9               	movwf	??_Lcd_Set_Cursor
  1984  0353  3004               	movlw	4
  1985  0354                     u535:
  1986  0354  1003               	clrc
  1987  0355  0CA9               	rrf	??_Lcd_Set_Cursor,f
  1988  0356  3EFF               	addlw	-1
  1989  0357  1D03               	skipz
  1990  0358  2B54               	goto	u535
  1991  0359  0829               	movf	??_Lcd_Set_Cursor,w
  1992  035A  00AA               	movwf	??_Lcd_Set_Cursor+1
  1993  035B  082A               	movf	??_Lcd_Set_Cursor+1,w
  1994  035C  00AC               	movwf	Lcd_Set_Cursor@z
  1995  035D                     l1196:
  1996                           
  1997                           ;./LCD.h: 47:   y = temp & 0x0F;
  1998  035D  082E               	movf	Lcd_Set_Cursor@temp,w
  1999  035E  390F               	andlw	15
  2000  035F  00A9               	movwf	??_Lcd_Set_Cursor
  2001  0360  0829               	movf	??_Lcd_Set_Cursor,w
  2002  0361  00AD               	movwf	Lcd_Set_Cursor@y
  2003  0362                     l1198:
  2004                           
  2005                           ;./LCD.h: 48:   Lcd_Cmd(z);
  2006  0362  082C               	movf	Lcd_Set_Cursor@z,w
  2007  0363  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2008  0368                     l1200:
  2009                           
  2010                           ;./LCD.h: 49:   Lcd_Cmd(y);
  2011  0368  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0369  1303               	bcf	3,6	;RP1=0, select bank0
  2013  036A  082D               	movf	Lcd_Set_Cursor@y,w
  2014  036B  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2015                           
  2016                           ;./LCD.h: 50:  }
  2017  0370  2B9B               	goto	l83
  2018  0371                     l1202:
  2019  0371  3002               	movlw	2
  2020  0372  062B               	xorwf	Lcd_Set_Cursor@a,w
  2021  0373  1D03               	btfss	3,2
  2022  0374  2B76               	goto	u541
  2023  0375  2B77               	goto	u540
  2024  0376                     u541:
  2025  0376  2B9B               	goto	l83
  2026  0377                     u540:
  2027  0377                     l1204:
  2028                           
  2029                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  2030  0377  0828               	movf	Lcd_Set_Cursor@b,w
  2031  0378  3EBF               	addlw	191
  2032  0379  00A9               	movwf	??_Lcd_Set_Cursor
  2033  037A  0829               	movf	??_Lcd_Set_Cursor,w
  2034  037B  00AE               	movwf	Lcd_Set_Cursor@temp
  2035                           
  2036                           ;./LCD.h: 54:   z = temp>>4;
  2037  037C  082E               	movf	Lcd_Set_Cursor@temp,w
  2038  037D  00A9               	movwf	??_Lcd_Set_Cursor
  2039  037E  3004               	movlw	4
  2040  037F                     u555:
  2041  037F  1003               	clrc
  2042  0380  0CA9               	rrf	??_Lcd_Set_Cursor,f
  2043  0381  3EFF               	addlw	-1
  2044  0382  1D03               	skipz
  2045  0383  2B7F               	goto	u555
  2046  0384  0829               	movf	??_Lcd_Set_Cursor,w
  2047  0385  00AA               	movwf	??_Lcd_Set_Cursor+1
  2048  0386  082A               	movf	??_Lcd_Set_Cursor+1,w
  2049  0387  00AC               	movwf	Lcd_Set_Cursor@z
  2050  0388                     l1206:
  2051                           
  2052                           ;./LCD.h: 55:   y = temp & 0x0F;
  2053  0388  082E               	movf	Lcd_Set_Cursor@temp,w
  2054  0389  390F               	andlw	15
  2055  038A  00A9               	movwf	??_Lcd_Set_Cursor
  2056  038B  0829               	movf	??_Lcd_Set_Cursor,w
  2057  038C  00AD               	movwf	Lcd_Set_Cursor@y
  2058  038D                     l1208:
  2059                           
  2060                           ;./LCD.h: 56:   Lcd_Cmd(z);
  2061  038D  082C               	movf	Lcd_Set_Cursor@z,w
  2062  038E  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2063  0393                     l1210:
  2064                           
  2065                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2066  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2067  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2068  0395  082D               	movf	Lcd_Set_Cursor@y,w
  2069  0396  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2070  039B                     l83:
  2071  039B  0008               	return
  2072  039C                     __end_of_Lcd_Set_Cursor:
  2073                           
  2074                           	psect	text7
  2075  05C8                     __ptext7:	
  2076 ;; *************** function _Lcd_Clear *****************
  2077 ;; Defined at:
  2078 ;;		line 34 in file "./LCD.h"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;		None
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;		None
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, status,2, status,0, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       0       0       0       0
  2093 ;;      Locals:         0       0       0       0       0
  2094 ;;      Temps:          0       0       0       0       0
  2095 ;;      Totals:         0       0       0       0       0
  2096 ;;Total ram usage:        0 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 6
  2099 ;; This function calls:
  2100 ;;		_Lcd_Cmd
  2101 ;; This function is called by:
  2102 ;;		_Lcd_Padrao
  2103 ;;		_main
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107  05C8                     _Lcd_Clear:	
  2108                           ;psect for function _Lcd_Clear
  2109                           
  2110  05C8                     l1190:	
  2111                           ;incstack = 0
  2112                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2113                           
  2114                           
  2115                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2116  05C8  3000               	movlw	0
  2117  05C9  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2118                           
  2119                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2120  05CE  3001               	movlw	1
  2121  05CF  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2122  05D4                     l77:
  2123  05D4  0008               	return
  2124  05D5                     __end_of_Lcd_Clear:
  2125                           
  2126                           	psect	text8
  2127  0285                     __ptext8:	
  2128 ;; *************** function _Lcd_Init *****************
  2129 ;; Defined at:
  2130 ;;		line 61 in file "./LCD.h"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       2       0       0       0
  2147 ;;      Totals:         0       2       0       0       0
  2148 ;;Total ram usage:        2 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 6
  2151 ;; This function calls:
  2152 ;;		_Lcd_Cmd
  2153 ;;		_Lcd_Port
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159  0285                     _Lcd_Init:	
  2160                           ;psect for function _Lcd_Init
  2161                           
  2162  0285                     l1250:	
  2163                           ;incstack = 0
  2164                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2165                           
  2166                           
  2167                           ;./LCD.h: 63:   Lcd_Port(0x00);
  2168  0285  3000               	movlw	0
  2169  0286  120A  118A  2572  120A  118A  	fcall	_Lcd_Port
  2170  028B                     l1252:
  2171                           
  2172                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2173  028B  301A               	movlw	26
  2174  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2175  028D  1303               	bcf	3,6	;RP1=0, select bank0
  2176  028E  00A9               	movwf	??_Lcd_Init+1
  2177  028F  30F7               	movlw	247
  2178  0290  00A8               	movwf	??_Lcd_Init
  2179  0291                     u1007:
  2180  0291  0BA8               	decfsz	??_Lcd_Init,f
  2181  0292  2A91               	goto	u1007
  2182  0293  0BA9               	decfsz	??_Lcd_Init+1,f
  2183  0294  2A91               	goto	u1007
  2184  0295  2A96               	nop2
  2185  0296                     l1254:
  2186                           
  2187                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  2188  0296  3003               	movlw	3
  2189  0297  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2190                           
  2191                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2192  029C  3007               	movlw	7
  2193  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2194  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2195  029F  00A9               	movwf	??_Lcd_Init+1
  2196  02A0  307C               	movlw	124
  2197  02A1  00A8               	movwf	??_Lcd_Init
  2198  02A2                     u1017:
  2199  02A2  0BA8               	decfsz	??_Lcd_Init,f
  2200  02A3  2AA2               	goto	u1017
  2201  02A4  0BA9               	decfsz	??_Lcd_Init+1,f
  2202  02A5  2AA2               	goto	u1017
  2203  02A6  0000               	nop
  2204  02A7                     l1256:
  2205                           
  2206                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  2207  02A7  3003               	movlw	3
  2208  02A8  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2209  02AD                     l1258:
  2210                           
  2211                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2212  02AD  300F               	movlw	15
  2213  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2214  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2215  02B0  00A9               	movwf	??_Lcd_Init+1
  2216  02B1  3047               	movlw	71
  2217  02B2  00A8               	movwf	??_Lcd_Init
  2218  02B3                     u1027:
  2219  02B3  0BA8               	decfsz	??_Lcd_Init,f
  2220  02B4  2AB3               	goto	u1027
  2221  02B5  0BA9               	decfsz	??_Lcd_Init+1,f
  2222  02B6  2AB3               	goto	u1027
  2223                           
  2224                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  2225  02B7  3003               	movlw	3
  2226  02B8  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2227                           
  2228                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  2229  02BD  3002               	movlw	2
  2230  02BE  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2231                           
  2232                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  2233  02C3  3002               	movlw	2
  2234  02C4  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2235                           
  2236                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  2237  02C9  3008               	movlw	8
  2238  02CA  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2239                           
  2240                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  2241  02CF  3000               	movlw	0
  2242  02D0  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2243                           
  2244                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  2245  02D5  300C               	movlw	12
  2246  02D6  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2247                           
  2248                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  2249  02DB  3000               	movlw	0
  2250  02DC  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2251                           
  2252                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  2253  02E1  3006               	movlw	6
  2254  02E2  120A  118A  2592  120A  118A  	fcall	_Lcd_Cmd
  2255  02E7                     l86:
  2256  02E7  0008               	return
  2257  02E8                     __end_of_Lcd_Init:
  2258                           
  2259                           	psect	text9
  2260  0592                     __ptext9:	
  2261 ;; *************** function _Lcd_Cmd *****************
  2262 ;; Defined at:
  2263 ;;		line 25 in file "./LCD.h"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  a               1    wreg     unsigned char 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  a               1    7[BANK0 ] unsigned char 
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       0       0       0       0
  2278 ;;      Locals:         0       1       0       0       0
  2279 ;;      Temps:          0       2       0       0       0
  2280 ;;      Totals:         0       3       0       0       0
  2281 ;;Total ram usage:        3 bytes
  2282 ;; Hardware stack levels used: 1
  2283 ;; Hardware stack levels required when called: 5
  2284 ;; This function calls:
  2285 ;;		_Lcd_Port
  2286 ;; This function is called by:
  2287 ;;		_Lcd_Clear
  2288 ;;		_Lcd_Set_Cursor
  2289 ;;		_Lcd_Init
  2290 ;;		_Lcd_Shift_Right
  2291 ;;		_Lcd_Shift_Left
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295  0592                     _Lcd_Cmd:	
  2296                           ;psect for function _Lcd_Cmd
  2297                           
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2301                           ;Lcd_Cmd@a stored from wreg
  2302  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0594  00A7               	movwf	Lcd_Cmd@a
  2305  0595                     l1150:
  2306                           
  2307                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  2308  0595  1007               	bcf	7,0	;volatile
  2309  0596                     l1152:
  2310                           
  2311                           ;./LCD.h: 28:  Lcd_Port(a);
  2312  0596  0827               	movf	Lcd_Cmd@a,w
  2313  0597  120A  118A  2572  120A  118A  	fcall	_Lcd_Port
  2314  059C                     l1154:
  2315                           
  2316                           ;./LCD.h: 29:  RC2 = 1;
  2317  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2318  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2319  059E  1507               	bsf	7,2	;volatile
  2320  059F                     l1156:
  2321                           
  2322                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2323  059F  3006               	movlw	6
  2324  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  2325  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  2326  05A2  00A6               	movwf	??_Lcd_Cmd+1
  2327  05A3  302F               	movlw	47
  2328  05A4  00A5               	movwf	??_Lcd_Cmd
  2329  05A5                     u1037:
  2330  05A5  0BA5               	decfsz	??_Lcd_Cmd,f
  2331  05A6  2DA5               	goto	u1037
  2332  05A7  0BA6               	decfsz	??_Lcd_Cmd+1,f
  2333  05A8  2DA5               	goto	u1037
  2334  05A9  2DAA               	nop2
  2335  05AA                     l1158:
  2336                           
  2337                           ;./LCD.h: 31:         RC2 = 0;
  2338  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2339  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2340  05AC  1107               	bcf	7,2	;volatile
  2341  05AD                     l74:
  2342  05AD  0008               	return
  2343  05AE                     __end_of_Lcd_Cmd:
  2344                           
  2345                           	psect	text10
  2346  0572                     __ptext10:	
  2347 ;; *************** function _Lcd_Port *****************
  2348 ;; Defined at:
  2349 ;;		line 3 in file "./LCD.h"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  a               1    wreg     unsigned char 
  2352 ;; Auto vars:     Size  Location     Type
  2353 ;;  a               1    4[BANK0 ] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         0       1       0       0       0
  2365 ;;      Temps:          0       0       0       0       0
  2366 ;;      Totals:         0       1       0       0       0
  2367 ;;Total ram usage:        1 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 4
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_Lcd_Cmd
  2374 ;;		_Lcd_Init
  2375 ;;		_Lcd_Write_Char
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379  0572                     _Lcd_Port:	
  2380                           ;psect for function _Lcd_Port
  2381                           
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _Lcd_Port: [wreg]
  2385                           ;Lcd_Port@a stored from wreg
  2386  0572  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0573  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0574  00A4               	movwf	Lcd_Port@a
  2389  0575                     l1140:
  2390                           
  2391                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2392  0575  1C24               	btfss	Lcd_Port@a,0
  2393  0576  2D78               	goto	u431
  2394  0577  2D79               	goto	u430
  2395  0578                     u431:
  2396  0578  2D7B               	goto	l63
  2397  0579                     u430:
  2398  0579                     l1142:
  2399                           
  2400                           ;./LCD.h: 6:   RC4 = 1;
  2401  0579  1607               	bsf	7,4	;volatile
  2402  057A  2D7C               	goto	l64
  2403  057B                     l63:	
  2404                           ;./LCD.h: 7:  else
  2405                           
  2406                           
  2407                           ;./LCD.h: 8:   RC4 = 0;
  2408  057B  1207               	bcf	7,4	;volatile
  2409  057C                     l64:
  2410                           
  2411                           ;./LCD.h: 10:  if(a & 2)
  2412  057C  1CA4               	btfss	Lcd_Port@a,1
  2413  057D  2D7F               	goto	u441
  2414  057E  2D80               	goto	u440
  2415  057F                     u441:
  2416  057F  2D82               	goto	l65
  2417  0580                     u440:
  2418  0580                     l1144:
  2419                           
  2420                           ;./LCD.h: 11:   RC5 = 1;
  2421  0580  1687               	bsf	7,5	;volatile
  2422  0581  2D83               	goto	l66
  2423  0582                     l65:	
  2424                           ;./LCD.h: 12:  else
  2425                           
  2426                           
  2427                           ;./LCD.h: 13:   RC5 = 0;
  2428  0582  1287               	bcf	7,5	;volatile
  2429  0583                     l66:
  2430                           
  2431                           ;./LCD.h: 15:  if(a & 4)
  2432  0583  1D24               	btfss	Lcd_Port@a,2
  2433  0584  2D86               	goto	u451
  2434  0585  2D87               	goto	u450
  2435  0586                     u451:
  2436  0586  2D89               	goto	l67
  2437  0587                     u450:
  2438  0587                     l1146:
  2439                           
  2440                           ;./LCD.h: 16:   RC6 = 1;
  2441  0587  1707               	bsf	7,6	;volatile
  2442  0588  2D8A               	goto	l68
  2443  0589                     l67:	
  2444                           ;./LCD.h: 17:  else
  2445                           
  2446                           
  2447                           ;./LCD.h: 18:   RC6 = 0;
  2448  0589  1307               	bcf	7,6	;volatile
  2449  058A                     l68:
  2450                           
  2451                           ;./LCD.h: 20:  if(a & 8)
  2452  058A  1DA4               	btfss	Lcd_Port@a,3
  2453  058B  2D8D               	goto	u461
  2454  058C  2D8E               	goto	u460
  2455  058D                     u461:
  2456  058D  2D90               	goto	l69
  2457  058E                     u460:
  2458  058E                     l1148:
  2459                           
  2460                           ;./LCD.h: 21:   RC7 = 1;
  2461  058E  1787               	bsf	7,7	;volatile
  2462  058F  2D91               	goto	l71
  2463  0590                     l69:	
  2464                           ;./LCD.h: 22:  else
  2465                           
  2466                           
  2467                           ;./LCD.h: 23:   RC7 = 0;
  2468  0590  1387               	bcf	7,7	;volatile
  2469  0591                     l71:
  2470  0591  0008               	return
  2471  0592                     __end_of_Lcd_Port:
  2472                           
  2473                           	psect	text11
  2474  02E8                     __ptext11:	
  2475 ;; *************** function _tes *****************
  2476 ;; Defined at:
  2477 ;;		line 48 in file "newmain.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;		None
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;		None
  2482 ;; Return value:  Size  Location     Type
  2483 ;;                  1    wreg      void 
  2484 ;; Registers used:
  2485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2491 ;;      Params:         0       0       0       0       0
  2492 ;;      Locals:         0       0       0       0       0
  2493 ;;      Temps:          0       4       0       0       0
  2494 ;;      Totals:         0       4       0       0       0
  2495 ;;Total ram usage:        4 bytes
  2496 ;; Hardware stack levels used: 1
  2497 ;; Hardware stack levels required when called: 3
  2498 ;; This function calls:
  2499 ;;		i1_Lcd_Clear
  2500 ;;		i1_Lcd_Set_Cursor
  2501 ;;		i1_Lcd_Write_String
  2502 ;; This function is called by:
  2503 ;;		Interrupt level 1
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507  02E8                     _tes:	
  2508                           ;psect for function _tes
  2509                           
  2510  02E8                     i1l1324:
  2511                           
  2512                           ;newmain.c: 49:     if(TMR1IF){
  2513  02E8  1C0C               	btfss	12,0	;volatile
  2514  02E9  2AEB               	goto	u63_21
  2515  02EA  2AEC               	goto	u63_20
  2516  02EB                     u63_21:
  2517  02EB  2B09               	goto	i1l118
  2518  02EC                     u63_20:
  2519  02EC                     i1l1326:
  2520                           
  2521                           ;newmain.c: 50:         PIR1bits.TMR1IF = 0;
  2522  02EC  100C               	bcf	12,0	;volatile
  2523  02ED                     i1l1328:
  2524                           
  2525                           ;newmain.c: 51:         TMR1L = 0xDC;
  2526  02ED  30DC               	movlw	220
  2527  02EE  008E               	movwf	14	;volatile
  2528                           
  2529                           ;newmain.c: 52:         TMR1H = 0X0B;
  2530  02EF  300B               	movlw	11
  2531  02F0  008F               	movwf	15	;volatile
  2532  02F1  0064               	clrwdt	;# 
  2533                           
  2534                           ;newmain.c: 54:         conta++;
  2535  02F2  3001               	movlw	1
  2536  02F3  07FB               	addwf	_conta,f
  2537  02F4  1803               	skipnc
  2538  02F5  0AFC               	incf	_conta+1,f
  2539  02F6  3000               	movlw	0
  2540  02F7  07FC               	addwf	_conta+1,f
  2541  02F8                     i1l1330:
  2542                           
  2543                           ;newmain.c: 55:         if(conta == 8){
  2544  02F8  3008               	movlw	8
  2545  02F9  067B               	xorwf	_conta,w
  2546  02FA  047C               	iorwf	_conta+1,w
  2547  02FB  1D03               	btfss	3,2
  2548  02FC  2AFE               	goto	u64_21
  2549  02FD  2AFF               	goto	u64_20
  2550  02FE                     u64_21:
  2551  02FE  2B37               	goto	i1l122
  2552  02FF                     u64_20:
  2553  02FF                     i1l1332:
  2554                           
  2555                           ;newmain.c: 56:             T1CONbits.TMR1ON = 0;
  2556  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0300  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0301  1010               	bcf	16,0	;volatile
  2559  0302                     i1l1334:
  2560                           
  2561                           ;newmain.c: 57:             conta = 0;
  2562  0302  01FB               	clrf	_conta
  2563  0303  01FC               	clrf	_conta+1
  2564  0304                     i1l1336:
  2565                           
  2566                           ;newmain.c: 58:             aux_timer = 1;
  2567  0304  3001               	movlw	1
  2568  0305  00B4               	movwf	_aux_timer
  2569  0306  3000               	movlw	0
  2570  0307  00B5               	movwf	_aux_timer+1
  2571  0308  2B37               	goto	i1l122
  2572  0309                     i1l118:	
  2573                           ;newmain.c: 62:     else if (INTCONbits.INTF)
  2574                           
  2575  0309  1C8B               	btfss	11,1	;volatile
  2576  030A  2B0C               	goto	u65_21
  2577  030B  2B0D               	goto	u65_20
  2578  030C                     u65_21:
  2579  030C  2B37               	goto	i1l122
  2580  030D                     u65_20:
  2581  030D                     i1l1338:
  2582                           
  2583                           ;newmain.c: 63:     {;newmain.c: 64:         INTCONbits.INTF = 0;
  2584  030D  108B               	bcf	11,1	;volatile
  2585                           
  2586                           ;newmain.c: 65:         PORTDbits.RD7 = 0;
  2587  030E  1388               	bcf	8,7	;volatile
  2588  030F  0064               	clrwdt	;# 
  2589  0310                     i1l1340:
  2590                           
  2591                           ;newmain.c: 67:         Lcd_Clear();
  2592  0310  120A  118A  25D5  120A  118A  	fcall	i1_Lcd_Clear
  2593                           
  2594                           ;newmain.c: 68:         Lcd_Set_Cursor(1,1);
  2595  0315  01F4               	clrf	i1Lcd_Set_Cursor@b
  2596  0316  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2597  0317  3001               	movlw	1
  2598  0318  120A  118A  239C  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2599  031D                     i1l1342:
  2600                           
  2601                           ;newmain.c: 69:         Lcd_Write_String("FUNCIONAMENTO");
  2602  031D  3030               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2603  031E  120A  118A  252B  120A  118A  	fcall	i1_Lcd_Write_String
  2604  0323                     i1l1344:
  2605                           
  2606                           ;newmain.c: 70:         Lcd_Set_Cursor(2,1);
  2607  0323  01F4               	clrf	i1Lcd_Set_Cursor@b
  2608  0324  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2609  0325  3002               	movlw	2
  2610  0326  120A  118A  239C  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2611                           
  2612                           ;newmain.c: 71:         Lcd_Write_String("INTERROMPIDO");
  2613  032B  303E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2614  032C  120A  118A  252B  120A  118A  	fcall	i1_Lcd_Write_String
  2615  0331                     i1l1346:
  2616                           
  2617                           ;newmain.c: 72:         interrupcao = 1;
  2618  0331  3001               	movlw	1
  2619  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0334  00B2               	movwf	_interrupcao
  2622  0335  3000               	movlw	0
  2623  0336  00B3               	movwf	_interrupcao+1
  2624  0337                     i1l122:
  2625  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0339  0823               	movf	??_tes+3,w
  2628  033A  00FF               	movwf	btemp+1
  2629  033B  0822               	movf	??_tes+2,w
  2630  033C  008A               	movwf	10
  2631  033D  0821               	movf	??_tes+1,w
  2632  033E  0084               	movwf	4
  2633  033F  0E20               	swapf	??_tes,w
  2634  0340  0083               	movwf	3
  2635  0341  0EFE               	swapf	btemp,f
  2636  0342  0E7E               	swapf	btemp,w
  2637  0343  0009               	retfie
  2638  0344                     __end_of_tes:
  2639                           
  2640                           	psect	intentry
  2641  0004                     __pintentry:	
  2642                           ;incstack = 0
  2643                           ; Regs used in _tes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2644                           
  2645  0004                     interrupt_function:
  2646  007E                     saved_w	set	btemp
  2647  0004  00FE               	movwf	btemp
  2648  0005  0E03               	swapf	3,w
  2649  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0008  00A0               	movwf	??_tes
  2652  0009  0804               	movf	4,w
  2653  000A  00A1               	movwf	??_tes+1
  2654  000B  080A               	movf	10,w
  2655  000C  00A2               	movwf	??_tes+2
  2656  000D  087F               	movf	btemp+1,w
  2657  000E  00A3               	movwf	??_tes+3
  2658  000F  120A  118A  2AE8   	ljmp	_tes
  2659                           
  2660                           	psect	text12
  2661  052B                     __ptext12:	
  2662 ;; *************** function i1_Lcd_Write_String *****************
  2663 ;; Defined at:
  2664 ;;		line 96 in file "./LCD.h"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  a               1    wreg     PTR unsigned char 
  2667 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  2668 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  2669 ;;		 -> STR_2(13), STR_1(14), 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  a               1    5[COMMON] PTR unsigned char 
  2672 ;;		 -> STR_10(9), STR_9(17), STR_8(16), STR_7(14), 
  2673 ;;		 -> STR_6(16), STR_5(14), STR_4(9), STR_3(10), 
  2674 ;;		 -> STR_2(13), STR_1(14), 
  2675 ;;  i               2    6[COMMON] int 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2685 ;;      Params:         0       0       0       0       0
  2686 ;;      Locals:         3       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0
  2688 ;;      Totals:         3       0       0       0       0
  2689 ;;Total ram usage:        3 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 2
  2692 ;; This function calls:
  2693 ;;		i1_Lcd_Write_Char
  2694 ;; This function is called by:
  2695 ;;		_tes
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699  052B                     i1_Lcd_Write_String:	
  2700                           ;psect for function i1_Lcd_Write_String
  2701                           
  2702                           
  2703                           ;incstack = 0
  2704 ;; using string table level
  2705                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2706                           ;i1Lcd_Write_String@a stored from wreg
  2707  052B  00F5               	movwf	i1Lcd_Write_String@a
  2708  052C                     i1l1312:
  2709                           
  2710                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2711  052C  01F6               	clrf	i1Lcd_Write_String@i
  2712  052D  01F7               	clrf	i1Lcd_Write_String@i+1
  2713  052E  2D42               	goto	i1l1318
  2714  052F                     i1l1314:
  2715                           
  2716                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  2717  052F  0876               	movf	i1Lcd_Write_String@i,w
  2718  0530  0775               	addwf	i1Lcd_Write_String@a,w
  2719  0531  0084               	movwf	4
  2720  0532  120A  118A  2219  120A  118A  	fcall	stringdir
  2721  0537  120A  118A  24A5  120A  118A  	fcall	i1_Lcd_Write_Char
  2722  053C                     i1l1316:
  2723  053C  3001               	movlw	1
  2724  053D  07F6               	addwf	i1Lcd_Write_String@i,f
  2725  053E  1803               	skipnc
  2726  053F  0AF7               	incf	i1Lcd_Write_String@i+1,f
  2727  0540  3000               	movlw	0
  2728  0541  07F7               	addwf	i1Lcd_Write_String@i+1,f
  2729  0542                     i1l1318:
  2730  0542  0876               	movf	i1Lcd_Write_String@i,w
  2731  0543  0775               	addwf	i1Lcd_Write_String@a,w
  2732  0544  0084               	movwf	4
  2733  0545  120A  118A  2219  120A  118A  	fcall	stringdir
  2734  054A  3A00               	xorlw	0
  2735  054B  1D03               	skipz
  2736  054C  2D4E               	goto	u62_21
  2737  054D  2D4F               	goto	u62_20
  2738  054E                     u62_21:
  2739  054E  2D2F               	goto	i1l1314
  2740  054F                     u62_20:
  2741  054F                     i1l95:
  2742  054F  0008               	return
  2743  0550                     __end_ofi1_Lcd_Write_String:
  2744                           
  2745                           	psect	text13
  2746  04A5                     __ptext13:	
  2747 ;; *************** function i1_Lcd_Write_Char *****************
  2748 ;; Defined at:
  2749 ;;		line 80 in file "./LCD.h"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  a               1    wreg     unsigned char 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  a               1    4[COMMON] unsigned char 
  2754 ;;  y               1    3[COMMON] unsigned char 
  2755 ;;  temp            1    2[COMMON] unsigned char 
  2756 ;; Return value:  Size  Location     Type
  2757 ;;                  1    wreg      void 
  2758 ;; Registers used:
  2759 ;;		wreg, status,2, status,0, pclath, cstack
  2760 ;; Tracked objects:
  2761 ;;		On entry : 0/0
  2762 ;;		On exit  : 0/0
  2763 ;;		Unchanged: 0/0
  2764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2765 ;;      Params:         0       0       0       0       0
  2766 ;;      Locals:         3       0       0       0       0
  2767 ;;      Temps:          1       0       0       0       0
  2768 ;;      Totals:         4       0       0       0       0
  2769 ;;Total ram usage:        4 bytes
  2770 ;; Hardware stack levels used: 1
  2771 ;; Hardware stack levels required when called: 1
  2772 ;; This function calls:
  2773 ;;		i1_Lcd_Port
  2774 ;; This function is called by:
  2775 ;;		i1_Lcd_Write_String
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779  04A5                     i1_Lcd_Write_Char:	
  2780                           ;psect for function i1_Lcd_Write_Char
  2781                           
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2785                           ;i1Lcd_Write_Char@a stored from wreg
  2786  04A5  00F4               	movwf	i1Lcd_Write_Char@a
  2787  04A6                     i1l1230:
  2788                           
  2789                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  2790  04A6  0874               	movf	i1Lcd_Write_Char@a,w
  2791  04A7  390F               	andlw	15
  2792  04A8  00F1               	movwf	??i1_Lcd_Write_Char
  2793  04A9  0871               	movf	??i1_Lcd_Write_Char,w
  2794  04AA  00F2               	movwf	i1Lcd_Write_Char@temp
  2795                           
  2796                           ;./LCD.h: 84:    y = a&0xF0;
  2797  04AB  0874               	movf	i1Lcd_Write_Char@a,w
  2798  04AC  39F0               	andlw	240
  2799  04AD  00F1               	movwf	??i1_Lcd_Write_Char
  2800  04AE  0871               	movf	??i1_Lcd_Write_Char,w
  2801  04AF  00F3               	movwf	i1Lcd_Write_Char@y
  2802  04B0                     i1l1232:
  2803                           
  2804                           ;./LCD.h: 85:    RC0 = 1;
  2805  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  2806  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  2807  04B2  1407               	bsf	7,0	;volatile
  2808  04B3                     i1l1234:
  2809                           
  2810                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  2811  04B3  0873               	movf	i1Lcd_Write_Char@y,w
  2812  04B4  00F1               	movwf	??i1_Lcd_Write_Char
  2813  04B5  3004               	movlw	4
  2814  04B6                     u57_25:
  2815  04B6  1003               	clrc
  2816  04B7  0CF1               	rrf	??i1_Lcd_Write_Char,f
  2817  04B8  3EFF               	addlw	-1
  2818  04B9  1D03               	skipz
  2819  04BA  2CB6               	goto	u57_25
  2820  04BB  0871               	movf	??i1_Lcd_Write_Char,w
  2821  04BC  120A  118A  2550  120A  118A  	fcall	i1_Lcd_Port
  2822  04C1                     i1l1236:
  2823                           
  2824                           ;./LCD.h: 87:    RC2 = 1;
  2825  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2826  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2827  04C3  1507               	bsf	7,2	;volatile
  2828  04C4                     i1l1238:
  2829                           
  2830                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2831  04C4  300D               	movlw	13
  2832  04C5  00F1               	movwf	??i1_Lcd_Write_Char
  2833  04C6                     u104_27:
  2834  04C6  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2835  04C7  2CC6               	goto	u104_27
  2836  04C8                     i1l1240:
  2837                           
  2838                           ;./LCD.h: 89:    RC2 = 0;
  2839  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2840  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2841  04CA  1107               	bcf	7,2	;volatile
  2842  04CB                     i1l1242:
  2843                           
  2844                           ;./LCD.h: 90:    Lcd_Port(temp);
  2845  04CB  0872               	movf	i1Lcd_Write_Char@temp,w
  2846  04CC  120A  118A  2550  120A  118A  	fcall	i1_Lcd_Port
  2847  04D1                     i1l1244:
  2848                           
  2849                           ;./LCD.h: 91:    RC2 = 1;
  2850  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2851  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2852  04D3  1507               	bsf	7,2	;volatile
  2853  04D4                     i1l1246:
  2854                           
  2855                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2856  04D4  300D               	movlw	13
  2857  04D5  00F1               	movwf	??i1_Lcd_Write_Char
  2858  04D6                     u105_27:
  2859  04D6  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2860  04D7  2CD6               	goto	u105_27
  2861  04D8                     i1l1248:
  2862                           
  2863                           ;./LCD.h: 93:    RC2 = 0;
  2864  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  2865  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  2866  04DA  1107               	bcf	7,2	;volatile
  2867  04DB                     i1l89:
  2868  04DB  0008               	return
  2869  04DC                     __end_ofi1_Lcd_Write_Char:
  2870                           
  2871                           	psect	text14
  2872  039C                     __ptext14:	
  2873 ;; *************** function i1_Lcd_Set_Cursor *****************
  2874 ;; Defined at:
  2875 ;;		line 40 in file "./LCD.h"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  a               1    wreg     unsigned char 
  2878 ;;  b               1    4[COMMON] unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  a               1    7[COMMON] unsigned char 
  2881 ;;  temp            1   10[COMMON] unsigned char 
  2882 ;;  y               1    9[COMMON] unsigned char 
  2883 ;;  z               1    8[COMMON] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0, pclath, cstack
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2893 ;;      Params:         1       0       0       0       0
  2894 ;;      Locals:         4       0       0       0       0
  2895 ;;      Temps:          2       0       0       0       0
  2896 ;;      Totals:         7       0       0       0       0
  2897 ;;Total ram usage:        7 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; Hardware stack levels required when called: 2
  2900 ;; This function calls:
  2901 ;;		i1_Lcd_Cmd
  2902 ;; This function is called by:
  2903 ;;		_tes
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907  039C                     i1_Lcd_Set_Cursor:	
  2908                           ;psect for function i1_Lcd_Set_Cursor
  2909                           
  2910                           
  2911                           ;incstack = 0
  2912                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2913                           ;i1Lcd_Set_Cursor@a stored from wreg
  2914  039C  00F7               	movwf	i1Lcd_Set_Cursor@a
  2915  039D                     i1l1292:
  2916                           
  2917                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  2918  039D  0377               	decf	i1Lcd_Set_Cursor@a,w
  2919  039E  1D03               	btfss	3,2
  2920  039F  2BA1               	goto	u58_21
  2921  03A0  2BA2               	goto	u58_20
  2922  03A1                     u58_21:
  2923  03A1  2BC5               	goto	i1l1302
  2924  03A2                     u58_20:
  2925  03A2                     i1l1294:
  2926                           
  2927                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  2928  03A2  0874               	movf	i1Lcd_Set_Cursor@b,w
  2929  03A3  3E7F               	addlw	127
  2930  03A4  00F5               	movwf	??i1_Lcd_Set_Cursor
  2931  03A5  0875               	movf	??i1_Lcd_Set_Cursor,w
  2932  03A6  00FA               	movwf	i1Lcd_Set_Cursor@temp
  2933                           
  2934                           ;./LCD.h: 46:   z = temp>>4;
  2935  03A7  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2936  03A8  00F5               	movwf	??i1_Lcd_Set_Cursor
  2937  03A9  3004               	movlw	4
  2938  03AA                     u59_25:
  2939  03AA  1003               	clrc
  2940  03AB  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2941  03AC  3EFF               	addlw	-1
  2942  03AD  1D03               	skipz
  2943  03AE  2BAA               	goto	u59_25
  2944  03AF  0875               	movf	??i1_Lcd_Set_Cursor,w
  2945  03B0  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  2946  03B1  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  2947  03B2  00F8               	movwf	i1Lcd_Set_Cursor@z
  2948  03B3                     i1l1296:
  2949                           
  2950                           ;./LCD.h: 47:   y = temp & 0x0F;
  2951  03B3  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2952  03B4  390F               	andlw	15
  2953  03B5  00F5               	movwf	??i1_Lcd_Set_Cursor
  2954  03B6  0875               	movf	??i1_Lcd_Set_Cursor,w
  2955  03B7  00F9               	movwf	i1Lcd_Set_Cursor@y
  2956  03B8                     i1l1298:
  2957                           
  2958                           ;./LCD.h: 48:   Lcd_Cmd(z);
  2959  03B8  0878               	movf	i1Lcd_Set_Cursor@z,w
  2960  03B9  120A  118A  25AE  120A  118A  	fcall	i1_Lcd_Cmd
  2961  03BE                     i1l1300:
  2962                           
  2963                           ;./LCD.h: 49:   Lcd_Cmd(y);
  2964  03BE  0879               	movf	i1Lcd_Set_Cursor@y,w
  2965  03BF  120A  118A  25AE  120A  118A  	fcall	i1_Lcd_Cmd
  2966                           
  2967                           ;./LCD.h: 50:  }
  2968  03C4  2BED               	goto	i1l83
  2969  03C5                     i1l1302:
  2970  03C5  3002               	movlw	2
  2971  03C6  0677               	xorwf	i1Lcd_Set_Cursor@a,w
  2972  03C7  1D03               	btfss	3,2
  2973  03C8  2BCA               	goto	u60_21
  2974  03C9  2BCB               	goto	u60_20
  2975  03CA                     u60_21:
  2976  03CA  2BED               	goto	i1l83
  2977  03CB                     u60_20:
  2978  03CB                     i1l1304:
  2979                           
  2980                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  2981  03CB  0874               	movf	i1Lcd_Set_Cursor@b,w
  2982  03CC  3EBF               	addlw	191
  2983  03CD  00F5               	movwf	??i1_Lcd_Set_Cursor
  2984  03CE  0875               	movf	??i1_Lcd_Set_Cursor,w
  2985  03CF  00FA               	movwf	i1Lcd_Set_Cursor@temp
  2986                           
  2987                           ;./LCD.h: 54:   z = temp>>4;
  2988  03D0  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2989  03D1  00F5               	movwf	??i1_Lcd_Set_Cursor
  2990  03D2  3004               	movlw	4
  2991  03D3                     u61_25:
  2992  03D3  1003               	clrc
  2993  03D4  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2994  03D5  3EFF               	addlw	-1
  2995  03D6  1D03               	skipz
  2996  03D7  2BD3               	goto	u61_25
  2997  03D8  0875               	movf	??i1_Lcd_Set_Cursor,w
  2998  03D9  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  2999  03DA  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  3000  03DB  00F8               	movwf	i1Lcd_Set_Cursor@z
  3001  03DC                     i1l1306:
  3002                           
  3003                           ;./LCD.h: 55:   y = temp & 0x0F;
  3004  03DC  087A               	movf	i1Lcd_Set_Cursor@temp,w
  3005  03DD  390F               	andlw	15
  3006  03DE  00F5               	movwf	??i1_Lcd_Set_Cursor
  3007  03DF  0875               	movf	??i1_Lcd_Set_Cursor,w
  3008  03E0  00F9               	movwf	i1Lcd_Set_Cursor@y
  3009  03E1                     i1l1308:
  3010                           
  3011                           ;./LCD.h: 56:   Lcd_Cmd(z);
  3012  03E1  0878               	movf	i1Lcd_Set_Cursor@z,w
  3013  03E2  120A  118A  25AE  120A  118A  	fcall	i1_Lcd_Cmd
  3014  03E7                     i1l1310:
  3015                           
  3016                           ;./LCD.h: 57:   Lcd_Cmd(y);
  3017  03E7  0879               	movf	i1Lcd_Set_Cursor@y,w
  3018  03E8  120A  118A  25AE  120A  118A  	fcall	i1_Lcd_Cmd
  3019  03ED                     i1l83:
  3020  03ED  0008               	return
  3021  03EE                     __end_ofi1_Lcd_Set_Cursor:
  3022                           
  3023                           	psect	text15
  3024  05D5                     __ptext15:	
  3025 ;; *************** function i1_Lcd_Clear *****************
  3026 ;; Defined at:
  3027 ;;		line 34 in file "./LCD.h"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      void 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3041 ;;      Params:         0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used: 1
  3047 ;; Hardware stack levels required when called: 2
  3048 ;; This function calls:
  3049 ;;		i1_Lcd_Cmd
  3050 ;; This function is called by:
  3051 ;;		_tes
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055  05D5                     i1_Lcd_Clear:	
  3056                           ;psect for function i1_Lcd_Clear
  3057                           
  3058  05D5                     i1l1290:	
  3059                           ;incstack = 0
  3060                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3061                           
  3062                           
  3063                           ;./LCD.h: 36:  Lcd_Cmd(0);
  3064  05D5  3000               	movlw	0
  3065  05D6  120A  118A  25AE  120A  118A  	fcall	i1_Lcd_Cmd
  3066                           
  3067                           ;./LCD.h: 37:  Lcd_Cmd(1);
  3068  05DB  3001               	movlw	1
  3069  05DC  120A  118A  25AE  120A  118A  	fcall	i1_Lcd_Cmd
  3070  05E1                     i1l77:
  3071  05E1  0008               	return
  3072  05E2                     __end_ofi1_Lcd_Clear:
  3073                           
  3074                           	psect	text16
  3075  05AE                     __ptext16:	
  3076 ;; *************** function i1_Lcd_Cmd *****************
  3077 ;; Defined at:
  3078 ;;		line 25 in file "./LCD.h"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  a               1    wreg     unsigned char 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  a               1    3[COMMON] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  1    wreg      void 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       0       0       0       0
  3093 ;;      Locals:         1       0       0       0       0
  3094 ;;      Temps:          2       0       0       0       0
  3095 ;;      Totals:         3       0       0       0       0
  3096 ;;Total ram usage:        3 bytes
  3097 ;; Hardware stack levels used: 1
  3098 ;; Hardware stack levels required when called: 1
  3099 ;; This function calls:
  3100 ;;		i1_Lcd_Port
  3101 ;; This function is called by:
  3102 ;;		i1_Lcd_Clear
  3103 ;;		i1_Lcd_Set_Cursor
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107  05AE                     i1_Lcd_Cmd:	
  3108                           ;psect for function i1_Lcd_Cmd
  3109                           
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3113                           ;i1Lcd_Cmd@a stored from wreg
  3114  05AE  00F3               	movwf	i1Lcd_Cmd@a
  3115  05AF                     i1l1220:
  3116                           
  3117                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  3118  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3119  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3120  05B1  1007               	bcf	7,0	;volatile
  3121  05B2                     i1l1222:
  3122                           
  3123                           ;./LCD.h: 28:  Lcd_Port(a);
  3124  05B2  0873               	movf	i1Lcd_Cmd@a,w
  3125  05B3  120A  118A  2550  120A  118A  	fcall	i1_Lcd_Port
  3126  05B8                     i1l1224:
  3127                           
  3128                           ;./LCD.h: 29:  RC2 = 1;
  3129  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3130  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3131  05BA  1507               	bsf	7,2	;volatile
  3132  05BB                     i1l1226:
  3133                           
  3134                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3135  05BB  3006               	movlw	6
  3136  05BC  00F2               	movwf	??i1_Lcd_Cmd+1
  3137  05BD  3030               	movlw	48
  3138  05BE  00F1               	movwf	??i1_Lcd_Cmd
  3139  05BF                     u106_27:
  3140  05BF  0BF1               	decfsz	??i1_Lcd_Cmd,f
  3141  05C0  2DBF               	goto	u106_27
  3142  05C1  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  3143  05C2  2DBF               	goto	u106_27
  3144  05C3  0000               	nop
  3145  05C4                     i1l1228:
  3146                           
  3147                           ;./LCD.h: 31:         RC2 = 0;
  3148  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3149  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3150  05C6  1107               	bcf	7,2	;volatile
  3151  05C7                     i1l74:
  3152  05C7  0008               	return
  3153  05C8                     __end_ofi1_Lcd_Cmd:
  3154                           
  3155                           	psect	text17
  3156  0550                     __ptext17:	
  3157 ;; *************** function i1_Lcd_Port *****************
  3158 ;; Defined at:
  3159 ;;		line 3 in file "./LCD.h"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  a               1    wreg     unsigned char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  a               1    0[COMMON] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  1    wreg      void 
  3166 ;; Registers used:
  3167 ;;		wreg
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       0       0       0       0
  3174 ;;      Locals:         1       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0
  3176 ;;      Totals:         1       0       0       0       0
  3177 ;;Total ram usage:        1 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		i1_Lcd_Cmd
  3183 ;;		i1_Lcd_Write_Char
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187  0550                     i1_Lcd_Port:	
  3188                           ;psect for function i1_Lcd_Port
  3189                           
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in i1_Lcd_Port: [wreg]
  3193                           ;i1Lcd_Port@a stored from wreg
  3194  0550  00F0               	movwf	i1Lcd_Port@a
  3195  0551                     i1l1180:
  3196                           
  3197                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  3198  0551  1C70               	btfss	i1Lcd_Port@a,0
  3199  0552  2D54               	goto	u48_21
  3200  0553  2D55               	goto	u48_20
  3201  0554                     u48_21:
  3202  0554  2D59               	goto	i1l63
  3203  0555                     u48_20:
  3204  0555                     i1l1182:
  3205                           
  3206                           ;./LCD.h: 6:   RC4 = 1;
  3207  0555  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0556  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0557  1607               	bsf	7,4	;volatile
  3210  0558  2D5C               	goto	i1l64
  3211  0559                     i1l63:	
  3212                           ;./LCD.h: 7:  else
  3213                           
  3214                           
  3215                           ;./LCD.h: 8:   RC4 = 0;
  3216  0559  1283               	bcf	3,5	;RP0=0, select bank0
  3217  055A  1303               	bcf	3,6	;RP1=0, select bank0
  3218  055B  1207               	bcf	7,4	;volatile
  3219  055C                     i1l64:
  3220                           
  3221                           ;./LCD.h: 10:  if(a & 2)
  3222  055C  1CF0               	btfss	i1Lcd_Port@a,1
  3223  055D  2D5F               	goto	u49_21
  3224  055E  2D60               	goto	u49_20
  3225  055F                     u49_21:
  3226  055F  2D62               	goto	i1l65
  3227  0560                     u49_20:
  3228  0560                     i1l1184:
  3229                           
  3230                           ;./LCD.h: 11:   RC5 = 1;
  3231  0560  1687               	bsf	7,5	;volatile
  3232  0561  2D63               	goto	i1l66
  3233  0562                     i1l65:	
  3234                           ;./LCD.h: 12:  else
  3235                           
  3236                           
  3237                           ;./LCD.h: 13:   RC5 = 0;
  3238  0562  1287               	bcf	7,5	;volatile
  3239  0563                     i1l66:
  3240                           
  3241                           ;./LCD.h: 15:  if(a & 4)
  3242  0563  1D70               	btfss	i1Lcd_Port@a,2
  3243  0564  2D66               	goto	u50_21
  3244  0565  2D67               	goto	u50_20
  3245  0566                     u50_21:
  3246  0566  2D69               	goto	i1l67
  3247  0567                     u50_20:
  3248  0567                     i1l1186:
  3249                           
  3250                           ;./LCD.h: 16:   RC6 = 1;
  3251  0567  1707               	bsf	7,6	;volatile
  3252  0568  2D6A               	goto	i1l68
  3253  0569                     i1l67:	
  3254                           ;./LCD.h: 17:  else
  3255                           
  3256                           
  3257                           ;./LCD.h: 18:   RC6 = 0;
  3258  0569  1307               	bcf	7,6	;volatile
  3259  056A                     i1l68:
  3260                           
  3261                           ;./LCD.h: 20:  if(a & 8)
  3262  056A  1DF0               	btfss	i1Lcd_Port@a,3
  3263  056B  2D6D               	goto	u51_21
  3264  056C  2D6E               	goto	u51_20
  3265  056D                     u51_21:
  3266  056D  2D70               	goto	i1l69
  3267  056E                     u51_20:
  3268  056E                     i1l1188:
  3269                           
  3270                           ;./LCD.h: 21:   RC7 = 1;
  3271  056E  1787               	bsf	7,7	;volatile
  3272  056F  2D71               	goto	i1l71
  3273  0570                     i1l69:	
  3274                           ;./LCD.h: 22:  else
  3275                           
  3276                           
  3277                           ;./LCD.h: 23:   RC7 = 0;
  3278  0570  1387               	bcf	7,7	;volatile
  3279  0571                     i1l71:
  3280  0571  0008               	return
  3281  0572                     __end_ofi1_Lcd_Port:
  3282  007E                     btemp	set	126	;btemp
  3283  007E                     wtemp0	set	126
  3284                           
  3285                           	psect	config
  3286                           
  3287                           ;Config register CONFIG @ 0x2007
  3288                           ;	Oscillator Selection bits
  3289                           ;	FOSC = HS, HS oscillator
  3290                           ;	Watchdog Timer Enable bit
  3291                           ;	WDTE = ON, WDT enabled
  3292                           ;	Power-up Timer Enable bit
  3293                           ;	PWRTE = ON, PWRT enabled
  3294                           ;	Brown-out Reset Enable bit
  3295                           ;	BOREN = ON, BOR enabled
  3296                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3297                           ;	LVP = 0x1, unprogrammed default
  3298                           ;	Data EEPROM Memory Code Protection bit
  3299                           ;	CPD = 0x1, unprogrammed default
  3300                           ;	Flash Program Memory Write Enable bits
  3301                           ;	WRT = 0x3, unprogrammed default
  3302                           ;	In-Circuit Debugger Mode bit
  3303                           ;	DEBUG = 0x1, unprogrammed default
  3304                           ;	Flash Program Memory Code Protection bit
  3305                           ;	CP = 0x1, unprogrammed default
  3306  2007                     	org	8199
  3307  2007  3FF6               	dw	16374

Data Sizes:
    Strings     102
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     18      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_10(CODE[9]), STR_9(CODE[17]), STR_8(CODE[16]), STR_7(CODE[14]), 
		 -> STR_6(CODE[16]), STR_5(CODE[14]), STR_4(CODE[9]), STR_3(CODE[10]), 
		 -> STR_2(CODE[13]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    _tes->i1_Lcd_Set_Cursor
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Padrao->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3836
                                             15 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                         _Lcd_Padrao
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _PesoCambuca
                        _PesoEstoque
 ---------------------------------------------------------------------------------
 (1) _PesoEstoque                                          6     4      2      23
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _PesoCambuca                                          6     4      2      23
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Padrao                                           0     0      0    1796
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     598
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              5 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1088
                                              8 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              8 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              5 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tes                                                  4     4      0     810
                                              0 BANK0      4     4      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_String                                   3     3      0     268
                                              5 COMMON     3     3      0
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     7     6      1     432
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Padrao
     _Lcd_Clear
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _PesoCambuca
   _PesoEstoque

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      29       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      29      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jul 22 16:45:50 2022

                         pc 0002                          l71 0591                          l63 057B  
                        l64 057C                          l65 0582                          l66 0583  
                        l74 05AD                          l67 0589                          l83 039B  
                        l68 058A                          l69 0590                          l77 05D4  
                        l86 02E7                          l95 0504                          l89 04A4  
                        fsr 0004                         l131 052A                         l140 0085  
                       l125 042A                         l150 012A                         l151 0134  
                       l143 00A7                         l128 0467                         l160 01F9  
                       l136 0070                         l146 00B4                         l138 0072  
                       _RC0 0038                         _RC2 003A                         _RC4 003C  
                       _RC5 003D                         _RC6 003E                         _RC7 003F  
                       u430 0579                         u431 0578                         u440 0580  
                       u520 034C                         u441 057F                         u521 034B  
                       u450 0587                         u451 0586                         u460 058E  
                       u540 0377                         u700 00B4                         u461 058D  
                       u541 0376                         u701 00B3                         u710 00BB  
                       u535 0354                         u711 00BA                         u560 0504  
                       u800 01D7                         u720 00F7                         u561 0503  
                       u801 01D6                         u721 00F6                         u810 01EC  
                       u730 010B                         u555 037F                         u475 0479  
                       u811 01EB                         u731 010A                         u820 01F5  
                       u740 0113                         u660 0076                         u821 01F4  
                       u741 0112                         u725 00F3                         u661 0075  
                       u830 01F9                         u750 0133                         u670 0085  
                       u831 01F8                         u815 01E8                         u751 0132  
                       u735 0107                         u671 0084                         u840 0202  
                       u760 0149                         u680 0089                         u841 0201  
                       u761 0148                         u681 0088                         u770 015D  
                       u690 00AE                         u907 0406                         u771 015C  
                       u691 00AD                         u780 0165                         u917 0410  
                       u781 0164                         u765 0145                         u790 01A2  
                       u927 041A                         u791 01A1                         u775 0159  
                       u937 042F                         u857 00D8                         u947 0439  
                       u795 019E                         u867 0183                         u957 0443  
                       u877 020F                         u967 044D                         u887 03F2  
                       u977 0457                         u897 03FC                         u987 048B  
                       u997 049E                         _tes 02E8                         fsr0 0004  
                      l1200 0368                        l1210 0393                        l1202 0371  
                      l1140 0575                        l1204 0377                        l1212 04DF  
                      l1142 0579                        l1150 0595                        l1206 0388  
                      l1214 04E2                        l1144 0580                        l1152 0596  
                      l1208 038D                        l1160 046B                        l1216 04EF  
                      l1400 005B                        l1146 0587                        l1154 059C  
                      l1250 0285                        l1170 048E                        l1162 0475  
                      l1218 04F7                        l1410 0069                        l1402 005C  
                      l1148 058E                        l1156 059F                        l1252 028B  
                      l1172 0491                        l1164 0476                        l1260 03EE  
                      l1500 01D1                        l1420 007D                        l1412 006C  
                      l1404 005D                        l1158 05AA                        l1254 0296  
                      l1190 05C8                        l1174 0497                        l1166 0484  
                      l1262 03F5                        l1510 01ED                        l1430 009D  
                      l1422 0089                        l1414 006E                        l1406 005F  
                      l1350 0027                        l1256 02A7                        l1192 0347  
                      l1176 049A                        l1168 0487                        l1280 0450  
                      l1272 042B                        l1264 03FF                        l1512 01F5  
                      l1440 00BB                        l1432 00A3                        l1424 008A  
                      l1416 0076                        l1408 0064                        l1360 0035  
                      l1352 002D                        l1258 02AD                        l1194 034C  
                      l1178 04A1                        l1274 0432                        l1266 0409  
                      l1514 01FC                        l1506 01D8                        l1450 00F7  
                      l1442 00CA                        l1434 00A8                        l1426 008E  
                      l1418 0078                        l1370 003A                        l1362 0036  
                      l1354 002E                        l1196 035D                        l1284 0505  
                      l1276 043C                        l1268 0413                        l1516 0202  
                      l1460 012B                        l1452 010B                        l1444 00D0  
                      l1436 00AE                        l1428 0093                        l1380 0049  
                      l1372 003D                        l1364 0037                        l1356 0031  
                      l1198 0362                        l1286 0514                        l1278 0446  
                      l1518 0207                        l1470 0165                        l1454 0113  
                      l1446 00DE                        l1438 00B5                        l1390 0050  
                      l1382 004A                        l1374 0040                        l1366 0038  
                      l1358 0034                        l1288 051A                        l1472 0166  
                      l1464 0135                        l1456 0114                        l1480 018E  
                      l1448 00E3                        l1392 0053                        l1384 004B  
                      l1376 0041                        l1368 0039                        l1490 01AD  
                      l1482 01A2                        l1474 0175                        l1466 0149  
                      l1458 0123                        l1394 0054                        l1386 004C  
                      l1378 0046                        l1492 01B7                        l1484 01A3  
                      l1476 017B                        l1468 015D                        l1396 0057  
                      l1388 004F                        l1494 01BD                        l1486 01A7  
                      l1478 0189                        l1398 0058                        l1496 01C7  
                      l1488 01A8                        l1498 01CD                        ?_tes 0070  
                      STR_1 024E                        STR_2 025C                        STR_3 0269  
                      STR_4 027C                        STR_5 0240                        STR_6 0230  
                      STR_7 0240                        STR_8 0230                        STR_9 021F  
                      u1007 0291                        u1017 02A2                        u1027 02B3  
                      u1037 05A5                        i1l71 0571                        i1l63 0559  
                      i1l64 055C                        i1l65 0562                        i1l66 0563  
                      i1l74 05C7                        i1l67 0569                        i1l83 03ED  
                      i1l68 056A                        i1l69 0570                        i1l77 05E1  
                      i1l95 054F                        i1l89 04DB           ?_Lcd_Write_String 0070  
                      _main 0027                        btemp 007E                        start 0012  
        ??_Lcd_Write_String 0029             __end_of_Lcd_Cmd 05AE                       ??_tes 0020  
                _Lcd_Padrao 0505                       ?_main 0070                       STR_10 0273  
                     i1l122 0337                       i1l118 0309           ?i1_Lcd_Set_Cursor 0074  
                     _TMR1H 000F                       _TMR1L 000E                       u50_20 0567  
                     u50_21 0566                       u51_20 056E                       u51_21 056D  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       u60_20 03CB                       u60_21 03CA  
                     u61_25 03D3                       u62_20 054F                       u62_21 054E  
                     u63_20 02EC                       u63_21 02EB                       u48_20 0555  
                     u64_20 02FF                       u48_21 0554                       u64_21 02FE  
                     u49_20 0560                       u65_20 030D                       u49_21 055F  
                     u65_21 030C                       _TRISA 0085                       _TRISB 0086  
                     u57_25 04B6                       _TRISC 0087                       _TRISD 0088  
                     u58_20 03A2                       u58_21 03A1                       u59_25 03AA  
               ?i1_Lcd_Port 0070          ??i1_Lcd_Set_Cursor 0075                       _conta 007B  
                     _valor 0036                       pclath 000A                       status 0003  
                     wtemp0 007E               ??_PesoCambuca 0026            __end_of_Lcd_Init 02E8  
          __end_of_Lcd_Port 0592             __initialization 0015                __end_of_main 0219  
             ??_PesoEstoque 0026                      ??_main 002F                      _ADRESH 001E  
                    _ADRESL 009E                      i1l1220 05AF                      i1l1300 03BE  
                    i1l1222 05B2                      i1l1310 03E7                      i1l1302 03C5  
                    i1l1230 04A6                      i1l1224 05B8                      i1l1304 03CB  
                    i1l1240 04C8                      i1l1232 04B0                      i1l1312 052C  
                    i1l1226 05BB                      i1l1306 03DC                      i1l1242 04CB  
                    i1l1234 04B3                      i1l1314 052F                      i1l1330 02F8  
                    i1l1180 0551                      i1l1228 05C4                      i1l1308 03E1  
                    i1l1244 04D1                      i1l1236 04C1                      i1l1316 053C  
                    i1l1340 0310                      i1l1332 02FF                      i1l1324 02E8  
                    i1l1182 0555                      i1l1246 04D4                      i1l1238 04C4  
                    i1l1318 0542                      i1l1342 031D                      i1l1334 0302  
                    i1l1326 02EC                      i1l1184 0560                      i1l1248 04D8  
                    i1l1344 0323                      i1l1336 0304                      i1l1328 02ED  
                    i1l1186 0567                      i1l1290 05D5                      i1l1346 0331  
                    i1l1338 030D                      i1l1188 056E                      i1l1292 039D  
                    i1l1294 03A2                      u104_27 04C6                      i1l1296 03B3  
                    i1l1298 03B8                      u105_27 04D6                      u106_27 05BF  
         ?i1_Lcd_Write_Char 0070                   ??_Lcd_Cmd 0025                      _TMR1IF 0060  
              ?i1_Lcd_Clear 0070          ??i1_Lcd_Write_Char 0071           __end_ofi1_Lcd_Cmd 05C8  
         i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073         __end_of_PesoCambuca 0468  
               ?_Lcd_Padrao 0070         __end_of_PesoEstoque 042B                      saved_w 007E  
           Lcd_Set_Cursor@a 002B             Lcd_Set_Cursor@b 0028             Lcd_Set_Cursor@y 002D  
           Lcd_Set_Cursor@z 002C     __end_of__initialization 0023           __end_of_Lcd_Clear 05D5  
            __pcstackCOMMON 0070              _Lcd_Set_Cursor 0344              _OPTION_REGbits 0081  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                  __pbssBANK0 0032  
               _PesoCambuca 042B                  __pmaintext 0027                 _PesoEstoque 03EE  
                __pintentry 0004      __end_of_Lcd_Set_Cursor 039C                ??i1_Lcd_Port 0070  
                ??_Lcd_Init 0028                  ??_Lcd_Port 0024                  __stringtab 0219  
            _Lcd_Write_Char 0468                     _Lcd_Cmd 0592          __end_ofi1_Lcd_Port 0572  
           ?_Lcd_Set_Cursor 0028                     __ptext1 03EE                     __ptext2 042B  
                   __ptext3 0505                     __ptext4 04DC                     __ptext5 0468  
                   __ptext6 0344                     __ptext7 05C8                     __ptext8 0285  
                   __ptext9 0592                   _T1CONbits 0010  __end_ofi1_Lcd_Write_String 0550  
    __end_of_Lcd_Write_Char 04A5        end_of_initialization 0023                   Lcd_Port@a 0024  
           PesoCambuca@peso 0028                ??_Lcd_Padrao 002F                   i1_Lcd_Cmd 05AE  
                 _PORTBbits 0006                   _PORTDbits 0008             ?_Lcd_Write_Char 0070  
         Lcd_Write_String@a 002B           Lcd_Write_String@i 0029          __end_of_Lcd_Padrao 052B  
                 _Lcd_Clear 05C8                  ?i1_Lcd_Cmd 0070            _Lcd_Write_String 04DC  
       start_initialization 0015                 __end_of_tes 0344            i1_Lcd_Set_Cursor 039C  
              ?_PesoCambuca 0024                  ?_Lcd_Clear 0070                ?_PesoEstoque 0024  
           Lcd_Write_Char@a 0028             Lcd_Write_Char@y 0027                 __pbssCOMMON 007B  
                 ___latbits 0002               __pcstackBANK0 0020        i1Lcd_Write_Char@temp 0072  
                  ?_Lcd_Cmd 0070            ??_Lcd_Set_Cursor 0029            i1_Lcd_Write_Char 04A5  
               ??i1_Lcd_Cmd 0071        i1Lcd_Set_Cursor@temp 007A                   __pstrings 0219  
                 _aux_timer 0034           interrupt_function 0004               ??i1_Lcd_Clear 0074  
                  _PIE1bits 008C          i1_Lcd_Write_String 052B                    Lcd_Cmd@a 0027  
                  _PIR1bits 000C                 ??_Lcd_Clear 0028         ?i1_Lcd_Write_String 0070  
                _ADCON0bits 001F                 __stringbase 021E                  _ADCON1bits 009F  
          ??_Lcd_Write_Char 0025                    _Lcd_Init 0285                    _Lcd_Port 0572  
      ??i1_Lcd_Write_String 0075    __end_of_Lcd_Write_String 0505                _peso_cambuca 003A  
       __end_ofi1_Lcd_Clear 05E2                _peso_estoque 0038          __end_of__stringtab 021F  
  __end_ofi1_Lcd_Set_Cursor 03EE           i1Lcd_Set_Cursor@a 0077           i1Lcd_Set_Cursor@b 0074  
         i1Lcd_Set_Cursor@y 0079           i1Lcd_Set_Cursor@z 0078                    __ptext10 0572  
                  __ptext11 02E8                    __ptext12 052B                    __ptext13 04A5  
                  __ptext14 039C                    __ptext15 05D5                    __ptext16 05AE  
                  __ptext17 0550                 i1Lcd_Port@a 0070                 _interrupcao 0032  
       i1Lcd_Write_String@a 0075         i1Lcd_Write_String@i 0076                  _INTCONbits 000B  
        Lcd_Write_Char@temp 0026                    intlevel1 0000    __end_ofi1_Lcd_Write_Char 04DC  
               i1_Lcd_Clear 05D5                  i1Lcd_Cmd@a 0073                   stringcode 0219  
        Lcd_Set_Cursor@temp 002E                  _OPTION_REG 0081                  i1_Lcd_Port 0550  
                  stringdir 0219                    stringtab 0219             PesoEstoque@peso 0028  
