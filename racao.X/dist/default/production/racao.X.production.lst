

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jul 21 22:09:52 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185     0006                     _PORTBbits	set	6
   186     0008                     _PORTD	set	8
   187     0007                     _PORTC	set	7
   188     0006                     _PORTB	set	6
   189     0005                     _PORTA	set	5
   190     001E                     _ADRESH	set	30
   191     001F                     _ADCON0bits	set	31
   192     0008                     _PORTDbits	set	8
   193     000B                     _INTCONbits	set	11
   194     0010                     _T1CONbits	set	16
   195     000F                     _TMR1H	set	15
   196     000E                     _TMR1L	set	14
   197     000C                     _PIR1bits	set	12
   198     0060                     _TMR1IF	set	96
   199     003A                     _RC2	set	58
   200     0038                     _RC0	set	56
   201     003F                     _RC7	set	63
   202     003E                     _RC6	set	62
   203     003D                     _RC5	set	61
   204     003C                     _RC4	set	60
   205     009E                     _ADRESL	set	158
   206     009F                     _ADCON1bits	set	159
   207     008C                     _PIE1bits	set	140
   208     0081                     _OPTION_REG	set	129
   209     0088                     _TRISD	set	136
   210     0087                     _TRISC	set	135
   211     0086                     _TRISB	set	134
   212     0085                     _TRISA	set	133
   213                           
   214                           	psect	strings
   215     0200                     __pstrings:
   216     0200                     stringtab:
   217     0200                     __stringtab:
   218     0200                     stringcode:	
   219                           ;	String table - string pointers are 1 byte each
   220                           
   221     0200                     stringdir:
   222     0200  3002               	movlw	high stringdir
   223     0201  008A               	movwf	10
   224     0202  0804               	movf	4,w
   225     0203  0A84               	incf	4,f
   226     0204  0782               	addwf	2,f
   227     0205                     __stringbase:
   228     0205  3400               	retlw	0
   229     0206                     __end_of__stringtab:
   230     0206                     STR_1:
   231     0206  3449               	retlw	73	;'I'
   232     0207  344E               	retlw	78	;'N'
   233     0208  3454               	retlw	84	;'T'
   234     0209  3445               	retlw	69	;'E'
   235     020A  3452               	retlw	82	;'R'
   236     020B  3452               	retlw	82	;'R'
   237     020C  344F               	retlw	79	;'O'
   238     020D  344D               	retlw	77	;'M'
   239     020E  3450               	retlw	80	;'P'
   240     020F  3449               	retlw	73	;'I'
   241     0210  3444               	retlw	68	;'D'
   242     0211  344F               	retlw	79	;'O'
   243     0212  342E               	retlw	46	;'.'
   244     0213  342E               	retlw	46	;'.'
   245     0214  342E               	retlw	46	;'.'
   246     0215  3400               	retlw	0
   247     0216                     STR_5:
   248     0216  3452               	retlw	82	;'R'
   249     0217  3441               	retlw	65	;'A'
   250     0218  3443               	retlw	67	;'C'
   251     0219  3441               	retlw	65	;'A'
   252     021A  344F               	retlw	79	;'O'
   253     021B  3420               	retlw	32	;' '
   254     021C  3443               	retlw	67	;'C'
   255     021D  344F               	retlw	79	;'O'
   256     021E  344C               	retlw	76	;'L'
   257     021F  344F               	retlw	79	;'O'
   258     0220  3443               	retlw	67	;'C'
   259     0221  3441               	retlw	65	;'A'
   260     0222  3444               	retlw	68	;'D'
   261     0223  3441               	retlw	65	;'A'
   262     0224  342E               	retlw	46	;'.'
   263     0225  3400               	retlw	0
   264     0226                     STR_4:
   265     0226  3444               	retlw	68	;'D'
   266     0227  3445               	retlw	69	;'E'
   267     0228  3453               	retlw	83	;'S'
   268     0229  3450               	retlw	80	;'P'
   269     022A  3445               	retlw	69	;'E'
   270     022B  344A               	retlw	74	;'J'
   271     022C  3441               	retlw	65	;'A'
   272     022D  344E               	retlw	78	;'N'
   273     022E  3444               	retlw	68	;'D'
   274     022F  344F               	retlw	79	;'O'
   275     0230  342E               	retlw	46	;'.'
   276     0231  342E               	retlw	46	;'.'
   277     0232  342E               	retlw	46	;'.'
   278     0233  3400               	retlw	0
   279     0234                     STR_2:
   280     0234  3453               	retlw	83	;'S'
   281     0235  3449               	retlw	73	;'I'
   282     0236  3447               	retlw	71	;'G'
   283     0237  344D               	retlw	77	;'M'
   284     0238  3441               	retlw	65	;'A'
   285     0239  3420               	retlw	32	;' '
   286     023A  3444               	retlw	68	;'D'
   287     023B  344F               	retlw	79	;'O'
   288     023C  3447               	retlw	71	;'G'
   289     023D  3400               	retlw	0
   290     023E                     STR_3:
   291     023E  3447               	retlw	71	;'G'
   292     023F  3452               	retlw	82	;'R'
   293     0240  3449               	retlw	73	;'I'
   294     0241  344E               	retlw	78	;'N'
   295     0242  3444               	retlw	68	;'D'
   296     0243  3453               	retlw	83	;'S'
   297     0244  3445               	retlw	69	;'E'
   298     0245  3454               	retlw	84	;'T'
   299     0246  3400               	retlw	0
   300                           
   301                           	psect	cinit
   302     0013                     start_initialization:	
   303                           ; #config settings
   304                           
   305     0013                     __initialization:
   306                           
   307                           ; Clear objects allocated to BANK0
   308     0013  1283               	bcf	3,5	;RP0=0, select bank0
   309     0014  1303               	bcf	3,6	;RP1=0, select bank0
   310     0015  01AD               	clrf	__pbssBANK0& (0+127)
   311     0016  01AE               	clrf	(__pbssBANK0+1)& (0+127)
   312     0017  01AF               	clrf	(__pbssBANK0+2)& (0+127)
   313     0018  01B0               	clrf	(__pbssBANK0+3)& (0+127)
   314     0019  01B1               	clrf	(__pbssBANK0+4)& (0+127)
   315     001A  01B2               	clrf	(__pbssBANK0+5)& (0+127)
   316     001B  01B3               	clrf	(__pbssBANK0+6)& (0+127)
   317     001C  01B4               	clrf	(__pbssBANK0+7)& (0+127)
   318     001D  01B5               	clrf	(__pbssBANK0+8)& (0+127)
   319     001E  01B6               	clrf	(__pbssBANK0+9)& (0+127)
   320     001F  01B7               	clrf	(__pbssBANK0+10)& (0+127)
   321     0020  01B8               	clrf	(__pbssBANK0+11)& (0+127)
   322     0021                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325     0021                     __end_of__initialization:
   326     0021  0183               	clrf	3
   327     0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330     002D                     __pbssBANK0:
   331     002D                     _conta:
   332     002D                     	ds	2
   333     002F                     _interrupcao:
   334     002F                     	ds	2
   335     0031                     _aux_despejo:
   336     0031                     	ds	2
   337     0033                     _valor:
   338     0033                     	ds	2
   339     0035                     _peso_estoque:
   340     0035                     	ds	2
   341     0037                     _peso_cambuca:
   342     0037                     	ds	2
   343                           
   344                           	psect	cstackCOMMON
   345     0070                     __pcstackCOMMON:
   346     0070                     ?_Lcd_Port:
   347     0070                     ?_Lcd_Cmd:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     ?_Lcd_Clear:	
   351                           ; 1 bytes @ 0x0
   352                           
   353     0070                     ?_Lcd_Init:	
   354                           ; 1 bytes @ 0x0
   355                           
   356     0070                     ?_Lcd_Write_Char:	
   357                           ; 1 bytes @ 0x0
   358                           
   359     0070                     ?_Lcd_Write_String:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ?_tes:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ?_Lcd_Padrao:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ?_main:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ?i1_Lcd_Port:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ??i1_Lcd_Port:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?i1_Lcd_Cmd:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?i1_Lcd_Clear:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?i1_Lcd_Write_Char:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?i1_Lcd_Write_String:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     i1Lcd_Port@a:	
   390                           ; 1 bytes @ 0x0
   391                           
   392                           
   393                           ; 1 bytes @ 0x0
   394     0070                     	ds	1
   395     0071                     ??i1_Lcd_Cmd:
   396     0071                     ??i1_Lcd_Write_Char:	
   397                           ; 1 bytes @ 0x1
   398                           
   399                           
   400                           ; 1 bytes @ 0x1
   401     0071                     	ds	1
   402     0072                     i1Lcd_Write_Char@temp:
   403                           
   404                           ; 1 bytes @ 0x2
   405     0072                     	ds	1
   406     0073                     i1Lcd_Cmd@a:
   407     0073                     i1Lcd_Write_Char@y:	
   408                           ; 1 bytes @ 0x3
   409                           
   410                           
   411                           ; 1 bytes @ 0x3
   412     0073                     	ds	1
   413     0074                     ??i1_Lcd_Clear:
   414     0074                     ?i1_Lcd_Set_Cursor:	
   415                           ; 1 bytes @ 0x4
   416                           
   417     0074                     i1Lcd_Set_Cursor@b:	
   418                           ; 1 bytes @ 0x4
   419                           
   420     0074                     i1Lcd_Write_Char@a:	
   421                           ; 1 bytes @ 0x4
   422                           
   423                           
   424                           ; 1 bytes @ 0x4
   425     0074                     	ds	1
   426     0075                     ??i1_Lcd_Set_Cursor:
   427     0075                     ??i1_Lcd_Write_String:	
   428                           ; 1 bytes @ 0x5
   429                           
   430     0075                     i1Lcd_Write_String@a:	
   431                           ; 1 bytes @ 0x5
   432                           
   433                           
   434                           ; 1 bytes @ 0x5
   435     0075                     	ds	1
   436     0076                     i1Lcd_Set_Cursor@a:
   437     0076                     i1Lcd_Write_String@i:	
   438                           ; 1 bytes @ 0x6
   439                           
   440                           
   441                           ; 2 bytes @ 0x6
   442     0076                     	ds	1
   443     0077                     i1Lcd_Set_Cursor@z:
   444                           
   445                           ; 1 bytes @ 0x7
   446     0077                     	ds	1
   447     0078                     i1Lcd_Set_Cursor@y:
   448                           
   449                           ; 1 bytes @ 0x8
   450     0078                     	ds	1
   451     0079                     i1Lcd_Set_Cursor@temp:
   452                           
   453                           ; 1 bytes @ 0x9
   454     0079                     	ds	1
   455     007A                     ??_tes:
   456                           
   457                           ; 1 bytes @ 0xA
   458     007A                     	ds	4
   459                           
   460                           	psect	cstackBANK0
   461     0020                     __pcstackBANK0:
   462     0020                     ??_Lcd_Port:
   463     0020                     ?_PesoCambuca:	
   464                           ; 1 bytes @ 0x0
   465                           
   466     0020                     ?_PesoEstoque:	
   467                           ; 2 bytes @ 0x0
   468                           
   469     0020                     Lcd_Port@a:	
   470                           ; 2 bytes @ 0x0
   471                           
   472                           
   473                           ; 1 bytes @ 0x0
   474     0020                     	ds	1
   475     0021                     ??_Lcd_Cmd:
   476     0021                     ??_Lcd_Write_Char:	
   477                           ; 1 bytes @ 0x1
   478                           
   479                           
   480                           ; 1 bytes @ 0x1
   481     0021                     	ds	1
   482     0022                     ??_PesoCambuca:
   483     0022                     ??_PesoEstoque:	
   484                           ; 1 bytes @ 0x2
   485                           
   486     0022                     Lcd_Write_Char@temp:	
   487                           ; 1 bytes @ 0x2
   488                           
   489                           
   490                           ; 1 bytes @ 0x2
   491     0022                     	ds	1
   492     0023                     Lcd_Cmd@a:
   493     0023                     Lcd_Write_Char@y:	
   494                           ; 1 bytes @ 0x3
   495                           
   496                           
   497                           ; 1 bytes @ 0x3
   498     0023                     	ds	1
   499     0024                     ??_Lcd_Clear:
   500     0024                     ?_Lcd_Set_Cursor:	
   501                           ; 1 bytes @ 0x4
   502                           
   503     0024                     ??_Lcd_Init:	
   504                           ; 1 bytes @ 0x4
   505                           
   506     0024                     Lcd_Set_Cursor@b:	
   507                           ; 1 bytes @ 0x4
   508                           
   509     0024                     Lcd_Write_Char@a:	
   510                           ; 1 bytes @ 0x4
   511                           
   512     0024                     PesoCambuca@peso:	
   513                           ; 1 bytes @ 0x4
   514                           
   515     0024                     PesoEstoque@peso:	
   516                           ; 2 bytes @ 0x4
   517                           
   518                           
   519                           ; 2 bytes @ 0x4
   520     0024                     	ds	1
   521     0025                     ??_Lcd_Set_Cursor:
   522     0025                     ??_Lcd_Write_String:	
   523                           ; 1 bytes @ 0x5
   524                           
   525     0025                     Lcd_Write_String@i:	
   526                           ; 1 bytes @ 0x5
   527                           
   528                           
   529                           ; 2 bytes @ 0x5
   530     0025                     	ds	1
   531     0026                     Lcd_Set_Cursor@a:
   532                           
   533                           ; 1 bytes @ 0x6
   534     0026                     	ds	1
   535     0027                     Lcd_Set_Cursor@z:
   536     0027                     Lcd_Write_String@a:	
   537                           ; 1 bytes @ 0x7
   538                           
   539                           
   540                           ; 1 bytes @ 0x7
   541     0027                     	ds	1
   542     0028                     Lcd_Set_Cursor@y:
   543                           
   544                           ; 1 bytes @ 0x8
   545     0028                     	ds	1
   546     0029                     Lcd_Set_Cursor@temp:
   547                           
   548                           ; 1 bytes @ 0x9
   549     0029                     	ds	1
   550     002A                     ??_Lcd_Padrao:
   551     002A                     ??_main:	
   552                           ; 1 bytes @ 0xA
   553                           
   554                           
   555                           ; 1 bytes @ 0xA
   556     002A                     	ds	3
   557                           
   558                           	psect	maintext
   559     0025                     __pmaintext:	
   560 ;;
   561 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   562 ;;
   563 ;; *************** function _main *****************
   564 ;; Defined at:
   565 ;;		line 112 in file "newmain.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;                  1    wreg      void 
   572 ;; Registers used:
   573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   574 ;; Tracked objects:
   575 ;;		On entry : B00/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       3       0       0       0
   582 ;;      Totals:         0       3       0       0       0
   583 ;;Total ram usage:        3 bytes
   584 ;; Hardware stack levels required when called: 8
   585 ;; This function calls:
   586 ;;		_Lcd_Clear
   587 ;;		_Lcd_Init
   588 ;;		_Lcd_Padrao
   589 ;;		_Lcd_Set_Cursor
   590 ;;		_Lcd_Write_String
   591 ;;		_PesoCambuca
   592 ;;		_PesoEstoque
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598     0025                     _main:	
   599                           ;psect for function _main
   600                           
   601     0025                     l1251:	
   602                           ;incstack = 0
   603                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   604                           
   605                           
   606                           ;newmain.c: 113:     TRISA = 0b11111111;
   607     0025  30FF               	movlw	255
   608     0026  1683               	bsf	3,5	;RP0=1, select bank1
   609     0027  1303               	bcf	3,6	;RP1=0, select bank1
   610     0028  0085               	movwf	5	;volatile
   611                           
   612                           ;newmain.c: 114:     TRISB = 0b00000011;
   613     0029  3003               	movlw	3
   614     002A  0086               	movwf	6	;volatile
   615     002B                     l1253:
   616                           
   617                           ;newmain.c: 115:     TRISC = 0;
   618     002B  0187               	clrf	7	;volatile
   619     002C                     l1255:
   620                           
   621                           ;newmain.c: 116:     TRISD = 0;
   622     002C  0188               	clrf	8	;volatile
   623                           
   624                           ;newmain.c: 117:     OPTION_REG = 0b00111111;
   625     002D  303F               	movlw	63
   626     002E  0081               	movwf	1	;volatile
   627     002F                     l1257:
   628                           
   629                           ;newmain.c: 118:     PORTA = 0;
   630     002F  1283               	bcf	3,5	;RP0=0, select bank0
   631     0030  1303               	bcf	3,6	;RP1=0, select bank0
   632     0031  0185               	clrf	5	;volatile
   633     0032                     l1259:
   634                           
   635                           ;newmain.c: 119:     PORTB = 0;
   636     0032  0186               	clrf	6	;volatile
   637     0033                     l1261:
   638                           
   639                           ;newmain.c: 120:     PORTC = 0;
   640     0033  0187               	clrf	7	;volatile
   641     0034                     l1263:
   642                           
   643                           ;newmain.c: 121:     PORTD = 0;
   644     0034  0188               	clrf	8	;volatile
   645     0035                     l1265:
   646                           
   647                           ;newmain.c: 123:     INTCONbits.GIE = 1;
   648     0035  178B               	bsf	11,7	;volatile
   649     0036                     l1267:
   650                           
   651                           ;newmain.c: 124:     INTCONbits.PEIE = 1;
   652     0036  170B               	bsf	11,6	;volatile
   653     0037                     l1269:
   654                           
   655                           ;newmain.c: 125:     INTCONbits.INTE=1;
   656     0037  160B               	bsf	11,4	;volatile
   657     0038                     l1271:
   658                           
   659                           ;newmain.c: 129:     PIE1bits.TMR1IE = 1;
   660     0038  1683               	bsf	3,5	;RP0=1, select bank1
   661     0039  1303               	bcf	3,6	;RP1=0, select bank1
   662     003A  140C               	bsf	12,0	;volatile
   663     003B                     l1273:
   664                           
   665                           ;newmain.c: 130:     T1CONbits.TMR1CS = 0;
   666     003B  1283               	bcf	3,5	;RP0=0, select bank0
   667     003C  1303               	bcf	3,6	;RP1=0, select bank0
   668     003D  1090               	bcf	16,1	;volatile
   669     003E                     l1275:
   670                           
   671                           ;newmain.c: 131:     T1CONbits.T1CKPS0 = 1;
   672     003E  1610               	bsf	16,4	;volatile
   673     003F                     l1277:
   674                           
   675                           ;newmain.c: 132:     T1CONbits.T1CKPS1 = 1;
   676     003F  1690               	bsf	16,5	;volatile
   677                           
   678                           ;newmain.c: 138:     TMR1L = 0xDC;
   679     0040  30DC               	movlw	220
   680     0041  008E               	movwf	14	;volatile
   681                           
   682                           ;newmain.c: 139:     TMR1H = 0X0B;
   683     0042  300B               	movlw	11
   684     0043  008F               	movwf	15	;volatile
   685     0044                     l1279:
   686                           
   687                           ;newmain.c: 142:     ADCON1bits.PCFG0 = 0;
   688     0044  1683               	bsf	3,5	;RP0=1, select bank1
   689     0045  1303               	bcf	3,6	;RP1=0, select bank1
   690     0046  101F               	bcf	31,0	;volatile
   691     0047                     l1281:
   692                           
   693                           ;newmain.c: 143:     ADCON1bits.PCFG1 = 0;
   694     0047  109F               	bcf	31,1	;volatile
   695     0048                     l1283:
   696                           
   697                           ;newmain.c: 144:     ADCON1bits.PCFG2 = 0;
   698     0048  111F               	bcf	31,2	;volatile
   699     0049                     l1285:
   700                           
   701                           ;newmain.c: 145:     ADCON1bits.PCFG3 = 0;
   702     0049  119F               	bcf	31,3	;volatile
   703     004A                     l1287:
   704                           
   705                           ;newmain.c: 147:  ADCON0bits.ADCS0 = 0;
   706     004A  1283               	bcf	3,5	;RP0=0, select bank0
   707     004B  1303               	bcf	3,6	;RP1=0, select bank0
   708     004C  131F               	bcf	31,6	;volatile
   709     004D                     l1289:
   710                           
   711                           ;newmain.c: 148:     ADCON0bits.ADCS1 = 0;
   712     004D  139F               	bcf	31,7	;volatile
   713     004E                     l1291:
   714                           
   715                           ;newmain.c: 150:     ADCON1bits.ADFM = 0;
   716     004E  1683               	bsf	3,5	;RP0=1, select bank1
   717     004F  1303               	bcf	3,6	;RP1=0, select bank1
   718     0050  139F               	bcf	31,7	;volatile
   719     0051                     l1293:
   720                           
   721                           ;newmain.c: 153:     ADRESL = 0x00;
   722     0051  019E               	clrf	30	;volatile
   723     0052                     l1295:
   724                           
   725                           ;newmain.c: 154:     ADRESH = 0x00;
   726     0052  1283               	bcf	3,5	;RP0=0, select bank0
   727     0053  1303               	bcf	3,6	;RP1=0, select bank0
   728     0054  019E               	clrf	30	;volatile
   729     0055                     l1297:
   730                           
   731                           ;newmain.c: 156:     ADCON0bits.ADON = 1;
   732     0055  141F               	bsf	31,0	;volatile
   733     0056                     l1299:
   734                           
   735                           ;newmain.c: 158:     Lcd_Init();
   736     0056  120A  118A  20F4  120A  118A  	fcall	_Lcd_Init
   737     005B                     l1301:
   738                           
   739                           ;newmain.c: 159:     Lcd_Padrao();
   740     005B  120A  118A  239C  120A  118A  	fcall	_Lcd_Padrao
   741     0060                     l1303:
   742                           
   743                           ;newmain.c: 160:     PORTDbits.RD5 = 1;
   744     0060  1283               	bcf	3,5	;RP0=0, select bank0
   745     0061  1303               	bcf	3,6	;RP1=0, select bank0
   746     0062  1688               	bsf	8,5	;volatile
   747     0063                     l1305:
   748                           
   749                           ;newmain.c: 161:     interrupcao = 0;
   750     0063  01AF               	clrf	_interrupcao
   751     0064  01B0               	clrf	_interrupcao+1
   752     0065                     l1307:
   753                           
   754                           ;newmain.c: 162:     aux_despejo = 0;
   755     0065  01B1               	clrf	_aux_despejo
   756     0066  01B2               	clrf	_aux_despejo+1
   757     0067                     l1309:
   758                           
   759                           ;newmain.c: 164:        peso_cambuca = PesoCambuca();
   760     0067  120A  118A  22CA  120A  118A  	fcall	_PesoCambuca
   761     006C  1283               	bcf	3,5	;RP0=0, select bank0
   762     006D  1303               	bcf	3,6	;RP1=0, select bank0
   763     006E  0821               	movf	?_PesoCambuca+1,w
   764     006F  00B8               	movwf	_peso_cambuca+1
   765     0070  0820               	movf	?_PesoCambuca,w
   766     0071  00B7               	movwf	_peso_cambuca
   767     0072                     l1311:
   768                           
   769                           ;newmain.c: 165:        peso_estoque = PesoEstoque();
   770     0072  120A  118A  228D  120A  118A  	fcall	_PesoEstoque
   771     0077  1283               	bcf	3,5	;RP0=0, select bank0
   772     0078  1303               	bcf	3,6	;RP1=0, select bank0
   773     0079  0821               	movf	?_PesoEstoque+1,w
   774     007A  00B6               	movwf	_peso_estoque+1
   775     007B  0820               	movf	?_PesoEstoque,w
   776     007C  00B5               	movwf	_peso_estoque
   777     007D                     l1313:
   778                           
   779                           ;newmain.c: 166:         if(interrupcao == 1){
   780     007D  032F               	decf	_interrupcao,w
   781     007E  0430               	iorwf	_interrupcao+1,w
   782     007F  1D03               	btfss	3,2
   783     0080  2882               	goto	u511
   784     0081  2883               	goto	u510
   785     0082                     u511:
   786     0082  2898               	goto	l1321
   787     0083                     u510:
   788     0083                     l1315:
   789                           
   790                           ;newmain.c: 167:             interrupcao = 0;
   791     0083  01AF               	clrf	_interrupcao
   792     0084  01B0               	clrf	_interrupcao+1
   793     0085                     l1317:
   794                           
   795                           ;newmain.c: 168:             _delay((unsigned long)((2000)*(4000000/4000.0)));
   796     0085  300B               	movlw	11
   797     0086  1283               	bcf	3,5	;RP0=0, select bank0
   798     0087  1303               	bcf	3,6	;RP1=0, select bank0
   799     0088  00AC               	movwf	??_main+2
   800     0089  3026               	movlw	38
   801     008A  00AB               	movwf	??_main+1
   802     008B  305D               	movlw	93
   803     008C  00AA               	movwf	??_main
   804     008D                     u557:
   805     008D  0BAA               	decfsz	??_main,f
   806     008E  288D               	goto	u557
   807     008F  0BAB               	decfsz	??_main+1,f
   808     0090  288D               	goto	u557
   809     0091  0BAC               	decfsz	??_main+2,f
   810     0092  288D               	goto	u557
   811     0093                     l1319:
   812                           
   813                           ;newmain.c: 169:             Lcd_Padrao();
   814     0093  120A  118A  239C  120A  118A  	fcall	_Lcd_Padrao
   815     0098                     l1321:
   816                           
   817                           ;newmain.c: 171:         PORTDbits.RD7 = 0;
   818     0098  1283               	bcf	3,5	;RP0=0, select bank0
   819     0099  1303               	bcf	3,6	;RP1=0, select bank0
   820     009A  1388               	bcf	8,7	;volatile
   821     009B                     l1323:
   822                           
   823                           ;newmain.c: 172:         if(PORTBbits.RB1 == 0){
   824     009B  1886               	btfsc	6,1	;volatile
   825     009C  289E               	goto	u521
   826     009D  289F               	goto	u520
   827     009E                     u521:
   828     009E  2867               	goto	l1309
   829     009F                     u520:
   830     009F                     l1325:
   831                           
   832                           ;newmain.c: 173:             aux_despejo = 0;
   833     009F  01B1               	clrf	_aux_despejo
   834     00A0  01B2               	clrf	_aux_despejo+1
   835     00A1                     l1327:
   836                           
   837                           ;newmain.c: 174:             Lcd_Clear();
   838     00A1  120A  118A  245F  120A  118A  	fcall	_Lcd_Clear
   839     00A6                     l1329:
   840                           
   841                           ;newmain.c: 175:             Lcd_Set_Cursor(1,1);
   842     00A6  1283               	bcf	3,5	;RP0=0, select bank0
   843     00A7  1303               	bcf	3,6	;RP1=0, select bank0
   844     00A8  01A4               	clrf	Lcd_Set_Cursor@b
   845     00A9  0AA4               	incf	Lcd_Set_Cursor@b,f
   846     00AA  3001               	movlw	1
   847     00AB  120A  118A  2157  120A  118A  	fcall	_Lcd_Set_Cursor
   848     00B0                     l1331:
   849                           
   850                           ;newmain.c: 176:             Lcd_Write_String("DESPEJANDO...");
   851     00B0  3021               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   852     00B1  120A  118A  2373  120A  118A  	fcall	_Lcd_Write_String
   853     00B6                     l1333:
   854                           
   855                           ;newmain.c: 177:             T1CONbits.TMR1ON = 1;
   856     00B6  1283               	bcf	3,5	;RP0=0, select bank0
   857     00B7  1303               	bcf	3,6	;RP1=0, select bank0
   858     00B8  1410               	bsf	16,0	;volatile
   859                           
   860                           ;newmain.c: 178:             while (aux_despejo == 0){
   861     00B9  28BB               	goto	l1335
   862     00BA                     l138:
   863                           
   864                           ;newmain.c: 179:                 PORTDbits.RD7 = 1;
   865     00BA  1788               	bsf	8,7	;volatile
   866     00BB                     l1335:
   867                           
   868                           ;newmain.c: 178:             while (aux_despejo == 0){
   869     00BB  0831               	movf	_aux_despejo,w
   870     00BC  0432               	iorwf	_aux_despejo+1,w
   871     00BD  1903               	btfsc	3,2
   872     00BE  28C0               	goto	u531
   873     00BF  28C1               	goto	u530
   874     00C0                     u531:
   875     00C0  28BA               	goto	l138
   876     00C1                     u530:
   877     00C1                     l139:
   878                           
   879                           ;newmain.c: 181:             PORTDbits.RD7 = 0;
   880     00C1  1388               	bcf	8,7	;volatile
   881     00C2                     l1337:
   882                           
   883                           ;newmain.c: 182:             if(interrupcao == 0){
   884     00C2  082F               	movf	_interrupcao,w
   885     00C3  0430               	iorwf	_interrupcao+1,w
   886     00C4  1D03               	btfss	3,2
   887     00C5  28C7               	goto	u541
   888     00C6  28C8               	goto	u540
   889     00C7                     u541:
   890     00C7  28DD               	goto	l1343
   891     00C8                     u540:
   892     00C8                     l1339:
   893                           
   894                           ;newmain.c: 183:                 Lcd_Clear();
   895     00C8  120A  118A  245F  120A  118A  	fcall	_Lcd_Clear
   896                           
   897                           ;newmain.c: 184:                 Lcd_Set_Cursor(1,1);
   898     00CD  1283               	bcf	3,5	;RP0=0, select bank0
   899     00CE  1303               	bcf	3,6	;RP1=0, select bank0
   900     00CF  01A4               	clrf	Lcd_Set_Cursor@b
   901     00D0  0AA4               	incf	Lcd_Set_Cursor@b,f
   902     00D1  3001               	movlw	1
   903     00D2  120A  118A  2157  120A  118A  	fcall	_Lcd_Set_Cursor
   904     00D7                     l1341:
   905                           
   906                           ;newmain.c: 185:                 Lcd_Write_String("RACAO COLOCADA.");
   907     00D7  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   908     00D8  120A  118A  2373  120A  118A  	fcall	_Lcd_Write_String
   909     00DD                     l1343:
   910                           
   911                           ;newmain.c: 187:             _delay((unsigned long)((2000)*(4000000/4000.0)));
   912     00DD  300B               	movlw	11
   913     00DE  1283               	bcf	3,5	;RP0=0, select bank0
   914     00DF  1303               	bcf	3,6	;RP1=0, select bank0
   915     00E0  00AC               	movwf	??_main+2
   916     00E1  3026               	movlw	38
   917     00E2  00AB               	movwf	??_main+1
   918     00E3  305D               	movlw	93
   919     00E4  00AA               	movwf	??_main
   920     00E5                     u567:
   921     00E5  0BAA               	decfsz	??_main,f
   922     00E6  28E5               	goto	u567
   923     00E7  0BAB               	decfsz	??_main+1,f
   924     00E8  28E5               	goto	u567
   925     00E9  0BAC               	decfsz	??_main+2,f
   926     00EA  28E5               	goto	u567
   927     00EB                     l1345:
   928                           
   929                           ;newmain.c: 188:             Lcd_Padrao();
   930     00EB  120A  118A  239C  120A  118A  	fcall	_Lcd_Padrao
   931     00F0  2867               	goto	l1309
   932     00F1  120A  118A  2810   	ljmp	start
   933     00F4                     __end_of_main:
   934                           
   935                           	psect	text1
   936     028D                     __ptext1:	
   937 ;; *************** function _PesoEstoque *****************
   938 ;; Defined at:
   939 ;;		line 88 in file "newmain.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;		None
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  peso            2    4[BANK0 ] int 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2    0[BANK0 ] int 
   946 ;; Registers used:
   947 ;;		wreg
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       2       0       0       0
   954 ;;      Locals:         0       2       0       0       0
   955 ;;      Temps:          0       2       0       0       0
   956 ;;      Totals:         0       6       0       0       0
   957 ;;Total ram usage:        6 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 4
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_main
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967     028D                     _PesoEstoque:	
   968                           ;psect for function _PesoEstoque
   969                           
   970     028D                     l1173:	
   971                           ;incstack = 0
   972                           ; Regs used in _PesoEstoque: [wreg]
   973                           
   974                           
   975                           ;newmain.c: 90:     int peso;;newmain.c: 91:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
   976     028D  3002               	movlw	2
   977     028E  1283               	bcf	3,5	;RP0=0, select bank0
   978     028F  1303               	bcf	3,6	;RP1=0, select bank0
   979     0290  00A2               	movwf	??_PesoEstoque
   980     0291                     u577:
   981     0291  0BA2               	decfsz	??_PesoEstoque,f
   982     0292  2A91               	goto	u577
   983     0293  0000               	nop
   984     0294                     l1175:
   985                           
   986                           ;newmain.c: 92:     ADCON0bits.CHS0 = 1;
   987     0294  1283               	bcf	3,5	;RP0=0, select bank0
   988     0295  1303               	bcf	3,6	;RP1=0, select bank0
   989     0296  159F               	bsf	31,3	;volatile
   990                           
   991                           ;newmain.c: 93:     _delay((unsigned long)((10)*(4000000/4000000.0)));
   992     0297  3002               	movlw	2
   993     0298  1283               	bcf	3,5	;RP0=0, select bank0
   994     0299  1303               	bcf	3,6	;RP1=0, select bank0
   995     029A  00A2               	movwf	??_PesoEstoque
   996     029B                     u587:
   997     029B  0BA2               	decfsz	??_PesoEstoque,f
   998     029C  2A9B               	goto	u587
   999     029D  0000               	nop
  1000     029E                     l1177:
  1001                           
  1002                           ;newmain.c: 94:     ADCON0bits.CHS1 = 0;
  1003     029E  1283               	bcf	3,5	;RP0=0, select bank0
  1004     029F  1303               	bcf	3,6	;RP1=0, select bank0
  1005     02A0  121F               	bcf	31,4	;volatile
  1006                           
  1007                           ;newmain.c: 95:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1008     02A1  3002               	movlw	2
  1009     02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1010     02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1011     02A4  00A2               	movwf	??_PesoEstoque
  1012     02A5                     u597:
  1013     02A5  0BA2               	decfsz	??_PesoEstoque,f
  1014     02A6  2AA5               	goto	u597
  1015     02A7  0000               	nop
  1016     02A8                     l1179:
  1017                           
  1018                           ;newmain.c: 96:     ADCON0bits.CHS2 = 0;
  1019     02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1020     02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1021     02AA  129F               	bcf	31,5	;volatile
  1022                           
  1023                           ;newmain.c: 97:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1024     02AB  3002               	movlw	2
  1025     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1026     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1027     02AE  00A2               	movwf	??_PesoEstoque
  1028     02AF                     u607:
  1029     02AF  0BA2               	decfsz	??_PesoEstoque,f
  1030     02B0  2AAF               	goto	u607
  1031     02B1  0000               	nop
  1032     02B2                     l1181:
  1033                           
  1034                           ;newmain.c: 98:     ADCON0bits.GO = 1;
  1035     02B2  1283               	bcf	3,5	;RP0=0, select bank0
  1036     02B3  1303               	bcf	3,6	;RP1=0, select bank0
  1037     02B4  151F               	bsf	31,2	;volatile
  1038                           
  1039                           ;newmain.c: 99:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1040     02B5  3002               	movlw	2
  1041     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1042     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1043     02B8  00A2               	movwf	??_PesoEstoque
  1044     02B9                     u617:
  1045     02B9  0BA2               	decfsz	??_PesoEstoque,f
  1046     02BA  2AB9               	goto	u617
  1047     02BB  0000               	nop
  1048                           
  1049                           ;newmain.c: 100:     peso = ADRESH;
  1050     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1051     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1052     02BE  081E               	movf	30,w	;volatile
  1053     02BF  00A2               	movwf	??_PesoEstoque
  1054     02C0  01A3               	clrf	??_PesoEstoque+1
  1055     02C1  0822               	movf	??_PesoEstoque,w
  1056     02C2  00A4               	movwf	PesoEstoque@peso
  1057     02C3  0823               	movf	??_PesoEstoque+1,w
  1058     02C4  00A5               	movwf	PesoEstoque@peso+1
  1059                           
  1060                           ;newmain.c: 101:     return peso;
  1061     02C5  0825               	movf	PesoEstoque@peso+1,w
  1062     02C6  00A1               	movwf	?_PesoEstoque+1
  1063     02C7  0824               	movf	PesoEstoque@peso,w
  1064     02C8  00A0               	movwf	?_PesoEstoque
  1065     02C9                     l126:
  1066     02C9  0008               	return
  1067     02CA                     __end_of_PesoEstoque:
  1068                           
  1069                           	psect	text2
  1070     02CA                     __ptext2:	
  1071 ;; *************** function _PesoCambuca *****************
  1072 ;; Defined at:
  1073 ;;		line 73 in file "newmain.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  peso            2    4[BANK0 ] int 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2    0[BANK0 ] int 
  1080 ;; Registers used:
  1081 ;;		wreg
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       2       0       0       0
  1088 ;;      Locals:         0       2       0       0       0
  1089 ;;      Temps:          0       2       0       0       0
  1090 ;;      Totals:         0       6       0       0       0
  1091 ;;Total ram usage:        6 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 4
  1094 ;; This function calls:
  1095 ;;		Nothing
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101     02CA                     _PesoCambuca:	
  1102                           ;psect for function _PesoCambuca
  1103                           
  1104     02CA                     l1161:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _PesoCambuca: [wreg]
  1107                           
  1108                           
  1109                           ;newmain.c: 75:     int peso;;newmain.c: 76:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  1110     02CA  3002               	movlw	2
  1111     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1112     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1113     02CD  00A2               	movwf	??_PesoCambuca
  1114     02CE                     u627:
  1115     02CE  0BA2               	decfsz	??_PesoCambuca,f
  1116     02CF  2ACE               	goto	u627
  1117     02D0  0000               	nop
  1118     02D1                     l1163:
  1119                           
  1120                           ;newmain.c: 77:     ADCON0bits.CHS0 = 0;
  1121     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1122     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1123     02D3  119F               	bcf	31,3	;volatile
  1124                           
  1125                           ;newmain.c: 78:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1126     02D4  3002               	movlw	2
  1127     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1128     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1129     02D7  00A2               	movwf	??_PesoCambuca
  1130     02D8                     u637:
  1131     02D8  0BA2               	decfsz	??_PesoCambuca,f
  1132     02D9  2AD8               	goto	u637
  1133     02DA  0000               	nop
  1134     02DB                     l1165:
  1135                           
  1136                           ;newmain.c: 79:     ADCON0bits.CHS1 = 0;
  1137     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1138     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1139     02DD  121F               	bcf	31,4	;volatile
  1140                           
  1141                           ;newmain.c: 80:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1142     02DE  3002               	movlw	2
  1143     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1144     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1145     02E1  00A2               	movwf	??_PesoCambuca
  1146     02E2                     u647:
  1147     02E2  0BA2               	decfsz	??_PesoCambuca,f
  1148     02E3  2AE2               	goto	u647
  1149     02E4  0000               	nop
  1150     02E5                     l1167:
  1151                           
  1152                           ;newmain.c: 81:     ADCON0bits.CHS2 = 0;
  1153     02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1154     02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1155     02E7  129F               	bcf	31,5	;volatile
  1156                           
  1157                           ;newmain.c: 82:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1158     02E8  3002               	movlw	2
  1159     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1160     02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1161     02EB  00A2               	movwf	??_PesoCambuca
  1162     02EC                     u657:
  1163     02EC  0BA2               	decfsz	??_PesoCambuca,f
  1164     02ED  2AEC               	goto	u657
  1165     02EE  0000               	nop
  1166     02EF                     l1169:
  1167                           
  1168                           ;newmain.c: 83:     ADCON0bits.GO = 1;
  1169     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1170     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1171     02F1  151F               	bsf	31,2	;volatile
  1172                           
  1173                           ;newmain.c: 84:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1174     02F2  3002               	movlw	2
  1175     02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1176     02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1177     02F5  00A2               	movwf	??_PesoCambuca
  1178     02F6                     u667:
  1179     02F6  0BA2               	decfsz	??_PesoCambuca,f
  1180     02F7  2AF6               	goto	u667
  1181     02F8  0000               	nop
  1182                           
  1183                           ;newmain.c: 85:     peso = ADRESH;
  1184     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  1185     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  1186     02FB  081E               	movf	30,w	;volatile
  1187     02FC  00A2               	movwf	??_PesoCambuca
  1188     02FD  01A3               	clrf	??_PesoCambuca+1
  1189     02FE  0822               	movf	??_PesoCambuca,w
  1190     02FF  00A4               	movwf	PesoCambuca@peso
  1191     0300  0823               	movf	??_PesoCambuca+1,w
  1192     0301  00A5               	movwf	PesoCambuca@peso+1
  1193                           
  1194                           ;newmain.c: 86:     return peso;
  1195     0302  0825               	movf	PesoCambuca@peso+1,w
  1196     0303  00A1               	movwf	?_PesoCambuca+1
  1197     0304  0824               	movf	PesoCambuca@peso,w
  1198     0305  00A0               	movwf	?_PesoCambuca
  1199     0306                     l123:
  1200     0306  0008               	return
  1201     0307                     __end_of_PesoCambuca:
  1202                           
  1203                           	psect	text3
  1204     039C                     __ptext3:	
  1205 ;; *************** function _Lcd_Padrao *****************
  1206 ;; Defined at:
  1207 ;;		line 104 in file "newmain.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 7
  1228 ;; This function calls:
  1229 ;;		_Lcd_Clear
  1230 ;;		_Lcd_Set_Cursor
  1231 ;;		_Lcd_Write_String
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237     039C                     _Lcd_Padrao:	
  1238                           ;psect for function _Lcd_Padrao
  1239                           
  1240     039C                     l1185:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _Lcd_Padrao: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1243                           
  1244                           
  1245                           ;newmain.c: 105:     Lcd_Clear();
  1246     039C  120A  118A  245F  120A  118A  	fcall	_Lcd_Clear
  1247                           
  1248                           ;newmain.c: 106:     Lcd_Set_Cursor(1,1);
  1249     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1250     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1251     03A3  01A4               	clrf	Lcd_Set_Cursor@b
  1252     03A4  0AA4               	incf	Lcd_Set_Cursor@b,f
  1253     03A5  3001               	movlw	1
  1254     03A6  120A  118A  2157  120A  118A  	fcall	_Lcd_Set_Cursor
  1255     03AB                     l1187:
  1256                           
  1257                           ;newmain.c: 107:     Lcd_Write_String("SIGMA DOG");
  1258     03AB  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1259     03AC  120A  118A  2373  120A  118A  	fcall	_Lcd_Write_String
  1260     03B1                     l1189:
  1261                           
  1262                           ;newmain.c: 108:     Lcd_Set_Cursor(2,1);
  1263     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1264     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1265     03B3  01A4               	clrf	Lcd_Set_Cursor@b
  1266     03B4  0AA4               	incf	Lcd_Set_Cursor@b,f
  1267     03B5  3002               	movlw	2
  1268     03B6  120A  118A  2157  120A  118A  	fcall	_Lcd_Set_Cursor
  1269                           
  1270                           ;newmain.c: 109:     Lcd_Write_String("GRINDSET");
  1271     03BB  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1272     03BC  120A  118A  2373  120A  118A  	fcall	_Lcd_Write_String
  1273     03C1                     l129:
  1274     03C1  0008               	return
  1275     03C2                     __end_of_Lcd_Padrao:
  1276                           
  1277                           	psect	text4
  1278     0373                     __ptext4:	
  1279 ;; *************** function _Lcd_Write_String *****************
  1280 ;; Defined at:
  1281 ;;		line 96 in file "./LCD.h"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  a               1    wreg     PTR unsigned char 
  1284 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  1285 ;;		 -> STR_1(16), 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  a               1    7[BANK0 ] PTR unsigned char 
  1288 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  1289 ;;		 -> STR_1(16), 
  1290 ;;  i               2    5[BANK0 ] int 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       3       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       3       0       0       0
  1304 ;;Total ram usage:        3 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 6
  1307 ;; This function calls:
  1308 ;;		_Lcd_Write_Char
  1309 ;; This function is called by:
  1310 ;;		_Lcd_Padrao
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315     0373                     _Lcd_Write_String:	
  1316                           ;psect for function _Lcd_Write_String
  1317                           
  1318                           
  1319                           ;incstack = 0
  1320                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1321                           ;Lcd_Write_String@a stored from wreg
  1322     0373  1283               	bcf	3,5	;RP0=0, select bank0
  1323     0374  1303               	bcf	3,6	;RP1=0, select bank0
  1324     0375  00A7               	movwf	Lcd_Write_String@a
  1325     0376                     l1113:
  1326                           
  1327                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1328     0376  01A5               	clrf	Lcd_Write_String@i
  1329     0377  01A6               	clrf	Lcd_Write_String@i+1
  1330     0378  2B8E               	goto	l1119
  1331     0379                     l1115:
  1332                           
  1333                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  1334     0379  0825               	movf	Lcd_Write_String@i,w
  1335     037A  0727               	addwf	Lcd_Write_String@a,w
  1336     037B  0084               	movwf	4
  1337     037C  120A  118A  2200  120A  118A  	fcall	stringdir
  1338     0381  120A  118A  2307  120A  118A  	fcall	_Lcd_Write_Char
  1339     0386                     l1117:
  1340     0386  3001               	movlw	1
  1341     0387  1283               	bcf	3,5	;RP0=0, select bank0
  1342     0388  1303               	bcf	3,6	;RP1=0, select bank0
  1343     0389  07A5               	addwf	Lcd_Write_String@i,f
  1344     038A  1803               	skipnc
  1345     038B  0AA6               	incf	Lcd_Write_String@i+1,f
  1346     038C  3000               	movlw	0
  1347     038D  07A6               	addwf	Lcd_Write_String@i+1,f
  1348     038E                     l1119:
  1349     038E  0825               	movf	Lcd_Write_String@i,w
  1350     038F  0727               	addwf	Lcd_Write_String@a,w
  1351     0390  0084               	movwf	4
  1352     0391  120A  118A  2200  120A  118A  	fcall	stringdir
  1353     0396  3A00               	xorlw	0
  1354     0397  1D03               	skipz
  1355     0398  2B9A               	goto	u411
  1356     0399  2B9B               	goto	u410
  1357     039A                     u411:
  1358     039A  2B79               	goto	l1115
  1359     039B                     u410:
  1360     039B                     l93:
  1361     039B  0008               	return
  1362     039C                     __end_of_Lcd_Write_String:
  1363                           
  1364                           	psect	text5
  1365     0307                     __ptext5:	
  1366 ;; *************** function _Lcd_Write_Char *****************
  1367 ;; Defined at:
  1368 ;;		line 80 in file "./LCD.h"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  a               1    wreg     unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  a               1    4[BANK0 ] unsigned char 
  1373 ;;  y               1    3[BANK0 ] unsigned char 
  1374 ;;  temp            1    2[BANK0 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         0       0       0       0       0
  1385 ;;      Locals:         0       3       0       0       0
  1386 ;;      Temps:          0       1       0       0       0
  1387 ;;      Totals:         0       4       0       0       0
  1388 ;;Total ram usage:        4 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 5
  1391 ;; This function calls:
  1392 ;;		_Lcd_Port
  1393 ;; This function is called by:
  1394 ;;		_Lcd_Write_String
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398     0307                     _Lcd_Write_Char:	
  1399                           ;psect for function _Lcd_Write_Char
  1400                           
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1404                           ;Lcd_Write_Char@a stored from wreg
  1405     0307  1283               	bcf	3,5	;RP0=0, select bank0
  1406     0308  1303               	bcf	3,6	;RP1=0, select bank0
  1407     0309  00A4               	movwf	Lcd_Write_Char@a
  1408     030A                     l1061:
  1409                           
  1410                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  1411     030A  0824               	movf	Lcd_Write_Char@a,w
  1412     030B  390F               	andlw	15
  1413     030C  00A2               	movwf	Lcd_Write_Char@temp
  1414                           
  1415                           ;./LCD.h: 84:    y = a&0xF0;
  1416     030D  0824               	movf	Lcd_Write_Char@a,w
  1417     030E  39F0               	andlw	240
  1418     030F  00A3               	movwf	Lcd_Write_Char@y
  1419     0310                     l1063:
  1420                           
  1421                           ;./LCD.h: 85:    RC0 = 1;
  1422     0310  1407               	bsf	7,0	;volatile
  1423     0311                     l1065:
  1424                           
  1425                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  1426     0311  0823               	movf	Lcd_Write_Char@y,w
  1427     0312  00A1               	movwf	??_Lcd_Write_Char
  1428     0313  3004               	movlw	4
  1429     0314                     u325:
  1430     0314  1003               	clrc
  1431     0315  0CA1               	rrf	??_Lcd_Write_Char,f
  1432     0316  3EFF               	addlw	-1
  1433     0317  1D03               	skipz
  1434     0318  2B14               	goto	u325
  1435     0319  0821               	movf	??_Lcd_Write_Char,w
  1436     031A  120A  118A  2409  120A  118A  	fcall	_Lcd_Port
  1437     031F                     l1067:
  1438                           
  1439                           ;./LCD.h: 87:    RC2 = 1;
  1440     031F  1283               	bcf	3,5	;RP0=0, select bank0
  1441     0320  1303               	bcf	3,6	;RP1=0, select bank0
  1442     0321  1507               	bsf	7,2	;volatile
  1443     0322                     l1069:
  1444                           
  1445                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1446     0322  300C               	movlw	12
  1447     0323  1283               	bcf	3,5	;RP0=0, select bank0
  1448     0324  1303               	bcf	3,6	;RP1=0, select bank0
  1449     0325  00A1               	movwf	??_Lcd_Write_Char
  1450     0326                     u677:
  1451     0326  0BA1               	decfsz	??_Lcd_Write_Char,f
  1452     0327  2B26               	goto	u677
  1453     0328  0000               	nop
  1454     0329                     l1071:
  1455                           
  1456                           ;./LCD.h: 89:    RC2 = 0;
  1457     0329  1283               	bcf	3,5	;RP0=0, select bank0
  1458     032A  1303               	bcf	3,6	;RP1=0, select bank0
  1459     032B  1107               	bcf	7,2	;volatile
  1460     032C                     l1073:
  1461                           
  1462                           ;./LCD.h: 90:    Lcd_Port(temp);
  1463     032C  0822               	movf	Lcd_Write_Char@temp,w
  1464     032D  120A  118A  2409  120A  118A  	fcall	_Lcd_Port
  1465     0332                     l1075:
  1466                           
  1467                           ;./LCD.h: 91:    RC2 = 1;
  1468     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1469     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1470     0334  1507               	bsf	7,2	;volatile
  1471     0335                     l1077:
  1472                           
  1473                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1474     0335  300C               	movlw	12
  1475     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1476     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1477     0338  00A1               	movwf	??_Lcd_Write_Char
  1478     0339                     u687:
  1479     0339  0BA1               	decfsz	??_Lcd_Write_Char,f
  1480     033A  2B39               	goto	u687
  1481     033B  0000               	nop
  1482     033C                     l1079:
  1483                           
  1484                           ;./LCD.h: 93:    RC2 = 0;
  1485     033C  1283               	bcf	3,5	;RP0=0, select bank0
  1486     033D  1303               	bcf	3,6	;RP1=0, select bank0
  1487     033E  1107               	bcf	7,2	;volatile
  1488     033F                     l87:
  1489     033F  0008               	return
  1490     0340                     __end_of_Lcd_Write_Char:
  1491                           
  1492                           	psect	text6
  1493     0157                     __ptext6:	
  1494 ;; *************** function _Lcd_Set_Cursor *****************
  1495 ;; Defined at:
  1496 ;;		line 40 in file "./LCD.h"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  a               1    wreg     unsigned char 
  1499 ;;  b               1    4[BANK0 ] unsigned char 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  a               1    6[BANK0 ] unsigned char 
  1502 ;;  temp            1    9[BANK0 ] unsigned char 
  1503 ;;  y               1    8[BANK0 ] unsigned char 
  1504 ;;  z               1    7[BANK0 ] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  1    wreg      void 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0, pclath, cstack
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         0       1       0       0       0
  1515 ;;      Locals:         0       4       0       0       0
  1516 ;;      Temps:          0       1       0       0       0
  1517 ;;      Totals:         0       6       0       0       0
  1518 ;;Total ram usage:        6 bytes
  1519 ;; Hardware stack levels used: 1
  1520 ;; Hardware stack levels required when called: 6
  1521 ;; This function calls:
  1522 ;;		_Lcd_Cmd
  1523 ;; This function is called by:
  1524 ;;		_Lcd_Padrao
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529     0157                     _Lcd_Set_Cursor:	
  1530                           ;psect for function _Lcd_Set_Cursor
  1531                           
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1535                           ;Lcd_Set_Cursor@a stored from wreg
  1536     0157  1283               	bcf	3,5	;RP0=0, select bank0
  1537     0158  1303               	bcf	3,6	;RP1=0, select bank0
  1538     0159  00A6               	movwf	Lcd_Set_Cursor@a
  1539     015A                     l1093:
  1540                           
  1541                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1542     015A  0326               	decf	Lcd_Set_Cursor@a,w
  1543     015B  1D03               	btfss	3,2
  1544     015C  295E               	goto	u371
  1545     015D  295F               	goto	u370
  1546     015E                     u371:
  1547     015E  297E               	goto	l1103
  1548     015F                     u370:
  1549     015F                     l1095:
  1550                           
  1551                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1552     015F  0824               	movf	Lcd_Set_Cursor@b,w
  1553     0160  3E7F               	addlw	127
  1554     0161  00A9               	movwf	Lcd_Set_Cursor@temp
  1555                           
  1556                           ;./LCD.h: 46:   z = temp>>4;
  1557     0162  0829               	movf	Lcd_Set_Cursor@temp,w
  1558     0163  00A5               	movwf	??_Lcd_Set_Cursor
  1559     0164  3004               	movlw	4
  1560     0165                     u385:
  1561     0165  1003               	clrc
  1562     0166  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1563     0167  3EFF               	addlw	-1
  1564     0168  1D03               	skipz
  1565     0169  2965               	goto	u385
  1566     016A  0825               	movf	??_Lcd_Set_Cursor,w
  1567     016B  00A7               	movwf	Lcd_Set_Cursor@z
  1568     016C                     l1097:
  1569                           
  1570                           ;./LCD.h: 47:   y = temp & 0x0F;
  1571     016C  0829               	movf	Lcd_Set_Cursor@temp,w
  1572     016D  390F               	andlw	15
  1573     016E  00A8               	movwf	Lcd_Set_Cursor@y
  1574     016F                     l1099:
  1575                           
  1576                           ;./LCD.h: 48:   Lcd_Cmd(z);
  1577     016F  0827               	movf	Lcd_Set_Cursor@z,w
  1578     0170  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1579     0175                     l1101:
  1580                           
  1581                           ;./LCD.h: 49:   Lcd_Cmd(y);
  1582     0175  1283               	bcf	3,5	;RP0=0, select bank0
  1583     0176  1303               	bcf	3,6	;RP1=0, select bank0
  1584     0177  0828               	movf	Lcd_Set_Cursor@y,w
  1585     0178  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1586                           
  1587                           ;./LCD.h: 50:  }
  1588     017D  29A2               	goto	l81
  1589     017E                     l1103:
  1590     017E  3002               	movlw	2
  1591     017F  0626               	xorwf	Lcd_Set_Cursor@a,w
  1592     0180  1D03               	btfss	3,2
  1593     0181  2983               	goto	u391
  1594     0182  2984               	goto	u390
  1595     0183                     u391:
  1596     0183  29A2               	goto	l81
  1597     0184                     u390:
  1598     0184                     l1105:
  1599                           
  1600                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1601     0184  0824               	movf	Lcd_Set_Cursor@b,w
  1602     0185  3EBF               	addlw	191
  1603     0186  00A9               	movwf	Lcd_Set_Cursor@temp
  1604                           
  1605                           ;./LCD.h: 54:   z = temp>>4;
  1606     0187  0829               	movf	Lcd_Set_Cursor@temp,w
  1607     0188  00A5               	movwf	??_Lcd_Set_Cursor
  1608     0189  3004               	movlw	4
  1609     018A                     u405:
  1610     018A  1003               	clrc
  1611     018B  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1612     018C  3EFF               	addlw	-1
  1613     018D  1D03               	skipz
  1614     018E  298A               	goto	u405
  1615     018F  0825               	movf	??_Lcd_Set_Cursor,w
  1616     0190  00A7               	movwf	Lcd_Set_Cursor@z
  1617     0191                     l1107:
  1618                           
  1619                           ;./LCD.h: 55:   y = temp & 0x0F;
  1620     0191  0829               	movf	Lcd_Set_Cursor@temp,w
  1621     0192  390F               	andlw	15
  1622     0193  00A8               	movwf	Lcd_Set_Cursor@y
  1623     0194                     l1109:
  1624                           
  1625                           ;./LCD.h: 56:   Lcd_Cmd(z);
  1626     0194  0827               	movf	Lcd_Set_Cursor@z,w
  1627     0195  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1628     019A                     l1111:
  1629                           
  1630                           ;./LCD.h: 57:   Lcd_Cmd(y);
  1631     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1632     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1633     019C  0828               	movf	Lcd_Set_Cursor@y,w
  1634     019D  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1635     01A2                     l81:
  1636     01A2  0008               	return
  1637     01A3                     __end_of_Lcd_Set_Cursor:
  1638                           
  1639                           	psect	text7
  1640     045F                     __ptext7:	
  1641 ;; *************** function _Lcd_Clear *****************
  1642 ;; Defined at:
  1643 ;;		line 34 in file "./LCD.h"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;		None
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  1    wreg      void 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0
  1660 ;;      Totals:         0       0       0       0       0
  1661 ;;Total ram usage:        0 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; Hardware stack levels required when called: 6
  1664 ;; This function calls:
  1665 ;;		_Lcd_Cmd
  1666 ;; This function is called by:
  1667 ;;		_Lcd_Padrao
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672     045F                     _Lcd_Clear:	
  1673                           ;psect for function _Lcd_Clear
  1674                           
  1675     045F                     l1091:	
  1676                           ;incstack = 0
  1677                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1678                           
  1679                           
  1680                           ;./LCD.h: 36:  Lcd_Cmd(0);
  1681     045F  3000               	movlw	0
  1682     0460  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1683                           
  1684                           ;./LCD.h: 37:  Lcd_Cmd(1);
  1685     0465  3001               	movlw	1
  1686     0466  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1687     046B                     l75:
  1688     046B  0008               	return
  1689     046C                     __end_of_Lcd_Clear:
  1690                           
  1691                           	psect	text8
  1692     00F4                     __ptext8:	
  1693 ;; *************** function _Lcd_Init *****************
  1694 ;; Defined at:
  1695 ;;		line 61 in file "./LCD.h"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, pclath, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1709 ;;      Params:         0       0       0       0       0
  1710 ;;      Locals:         0       0       0       0       0
  1711 ;;      Temps:          0       2       0       0       0
  1712 ;;      Totals:         0       2       0       0       0
  1713 ;;Total ram usage:        2 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 6
  1716 ;; This function calls:
  1717 ;;		_Lcd_Cmd
  1718 ;;		_Lcd_Port
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724     00F4                     _Lcd_Init:	
  1725                           ;psect for function _Lcd_Init
  1726                           
  1727     00F4                     l1151:	
  1728                           ;incstack = 0
  1729                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1730                           
  1731                           
  1732                           ;./LCD.h: 63:   Lcd_Port(0x00);
  1733     00F4  3000               	movlw	0
  1734     00F5  120A  118A  2409  120A  118A  	fcall	_Lcd_Port
  1735     00FA                     l1153:
  1736                           
  1737                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1738     00FA  301A               	movlw	26
  1739     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1740     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1741     00FD  00A5               	movwf	??_Lcd_Init+1
  1742     00FE  30F7               	movlw	247
  1743     00FF  00A4               	movwf	??_Lcd_Init
  1744     0100                     u697:
  1745     0100  0BA4               	decfsz	??_Lcd_Init,f
  1746     0101  2900               	goto	u697
  1747     0102  0BA5               	decfsz	??_Lcd_Init+1,f
  1748     0103  2900               	goto	u697
  1749     0104  2905               	nop2
  1750     0105                     l1155:
  1751                           
  1752                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  1753     0105  3003               	movlw	3
  1754     0106  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1755                           
  1756                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1757     010B  3007               	movlw	7
  1758     010C  1283               	bcf	3,5	;RP0=0, select bank0
  1759     010D  1303               	bcf	3,6	;RP1=0, select bank0
  1760     010E  00A5               	movwf	??_Lcd_Init+1
  1761     010F  307C               	movlw	124
  1762     0110  00A4               	movwf	??_Lcd_Init
  1763     0111                     u707:
  1764     0111  0BA4               	decfsz	??_Lcd_Init,f
  1765     0112  2911               	goto	u707
  1766     0113  0BA5               	decfsz	??_Lcd_Init+1,f
  1767     0114  2911               	goto	u707
  1768     0115  0000               	nop
  1769     0116                     l1157:
  1770                           
  1771                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  1772     0116  3003               	movlw	3
  1773     0117  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1774     011C                     l1159:
  1775                           
  1776                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1777     011C  300F               	movlw	15
  1778     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1779     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1780     011F  00A5               	movwf	??_Lcd_Init+1
  1781     0120  3047               	movlw	71
  1782     0121  00A4               	movwf	??_Lcd_Init
  1783     0122                     u717:
  1784     0122  0BA4               	decfsz	??_Lcd_Init,f
  1785     0123  2922               	goto	u717
  1786     0124  0BA5               	decfsz	??_Lcd_Init+1,f
  1787     0125  2922               	goto	u717
  1788                           
  1789                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  1790     0126  3003               	movlw	3
  1791     0127  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1792                           
  1793                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  1794     012C  3002               	movlw	2
  1795     012D  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1796                           
  1797                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  1798     0132  3002               	movlw	2
  1799     0133  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1800                           
  1801                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  1802     0138  3008               	movlw	8
  1803     0139  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1804                           
  1805                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  1806     013E  3000               	movlw	0
  1807     013F  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1808                           
  1809                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  1810     0144  300C               	movlw	12
  1811     0145  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1812                           
  1813                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  1814     014A  3000               	movlw	0
  1815     014B  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1816                           
  1817                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  1818     0150  3006               	movlw	6
  1819     0151  120A  118A  2429  120A  118A  	fcall	_Lcd_Cmd
  1820     0156                     l84:
  1821     0156  0008               	return
  1822     0157                     __end_of_Lcd_Init:
  1823                           
  1824                           	psect	text9
  1825     0429                     __ptext9:	
  1826 ;; *************** function _Lcd_Cmd *****************
  1827 ;; Defined at:
  1828 ;;		line 25 in file "./LCD.h"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  a               1    wreg     unsigned char 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  a               1    3[BANK0 ] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, pclath, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1842 ;;      Params:         0       0       0       0       0
  1843 ;;      Locals:         0       1       0       0       0
  1844 ;;      Temps:          0       2       0       0       0
  1845 ;;      Totals:         0       3       0       0       0
  1846 ;;Total ram usage:        3 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 5
  1849 ;; This function calls:
  1850 ;;		_Lcd_Port
  1851 ;; This function is called by:
  1852 ;;		_Lcd_Clear
  1853 ;;		_Lcd_Set_Cursor
  1854 ;;		_Lcd_Init
  1855 ;;		_Lcd_Shift_Right
  1856 ;;		_Lcd_Shift_Left
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860     0429                     _Lcd_Cmd:	
  1861                           ;psect for function _Lcd_Cmd
  1862                           
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1866                           ;Lcd_Cmd@a stored from wreg
  1867     0429  1283               	bcf	3,5	;RP0=0, select bank0
  1868     042A  1303               	bcf	3,6	;RP1=0, select bank0
  1869     042B  00A3               	movwf	Lcd_Cmd@a
  1870     042C                     l1051:
  1871                           
  1872                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  1873     042C  1007               	bcf	7,0	;volatile
  1874     042D                     l1053:
  1875                           
  1876                           ;./LCD.h: 28:  Lcd_Port(a);
  1877     042D  0823               	movf	Lcd_Cmd@a,w
  1878     042E  120A  118A  2409  120A  118A  	fcall	_Lcd_Port
  1879     0433                     l1055:
  1880                           
  1881                           ;./LCD.h: 29:  RC2 = 1;
  1882     0433  1283               	bcf	3,5	;RP0=0, select bank0
  1883     0434  1303               	bcf	3,6	;RP1=0, select bank0
  1884     0435  1507               	bsf	7,2	;volatile
  1885     0436                     l1057:
  1886                           
  1887                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1888     0436  3006               	movlw	6
  1889     0437  1283               	bcf	3,5	;RP0=0, select bank0
  1890     0438  1303               	bcf	3,6	;RP1=0, select bank0
  1891     0439  00A2               	movwf	??_Lcd_Cmd+1
  1892     043A  302F               	movlw	47
  1893     043B  00A1               	movwf	??_Lcd_Cmd
  1894     043C                     u727:
  1895     043C  0BA1               	decfsz	??_Lcd_Cmd,f
  1896     043D  2C3C               	goto	u727
  1897     043E  0BA2               	decfsz	??_Lcd_Cmd+1,f
  1898     043F  2C3C               	goto	u727
  1899     0440  2C41               	nop2
  1900     0441                     l1059:
  1901                           
  1902                           ;./LCD.h: 31:         RC2 = 0;
  1903     0441  1283               	bcf	3,5	;RP0=0, select bank0
  1904     0442  1303               	bcf	3,6	;RP1=0, select bank0
  1905     0443  1107               	bcf	7,2	;volatile
  1906     0444                     l72:
  1907     0444  0008               	return
  1908     0445                     __end_of_Lcd_Cmd:
  1909                           
  1910                           	psect	text10
  1911     0409                     __ptext10:	
  1912 ;; *************** function _Lcd_Port *****************
  1913 ;; Defined at:
  1914 ;;		line 3 in file "./LCD.h"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  a               1    wreg     unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  a               1    0[BANK0 ] unsigned char 
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       1       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0       1       0       0       0
  1932 ;;Total ram usage:        1 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 4
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_Lcd_Cmd
  1939 ;;		_Lcd_Init
  1940 ;;		_Lcd_Write_Char
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944     0409                     _Lcd_Port:	
  1945                           ;psect for function _Lcd_Port
  1946                           
  1947                           
  1948                           ;incstack = 0
  1949                           ; Regs used in _Lcd_Port: [wreg]
  1950                           ;Lcd_Port@a stored from wreg
  1951     0409  1283               	bcf	3,5	;RP0=0, select bank0
  1952     040A  1303               	bcf	3,6	;RP1=0, select bank0
  1953     040B  00A0               	movwf	Lcd_Port@a
  1954     040C                     l1041:
  1955                           
  1956                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  1957     040C  1C20               	btfss	Lcd_Port@a,0
  1958     040D  2C0F               	goto	u281
  1959     040E  2C10               	goto	u280
  1960     040F                     u281:
  1961     040F  2C12               	goto	l61
  1962     0410                     u280:
  1963     0410                     l1043:
  1964                           
  1965                           ;./LCD.h: 6:   RC4 = 1;
  1966     0410  1607               	bsf	7,4	;volatile
  1967     0411  2C13               	goto	l62
  1968     0412                     l61:	
  1969                           ;./LCD.h: 7:  else
  1970                           
  1971                           
  1972                           ;./LCD.h: 8:   RC4 = 0;
  1973     0412  1207               	bcf	7,4	;volatile
  1974     0413                     l62:
  1975                           
  1976                           ;./LCD.h: 10:  if(a & 2)
  1977     0413  1CA0               	btfss	Lcd_Port@a,1
  1978     0414  2C16               	goto	u291
  1979     0415  2C17               	goto	u290
  1980     0416                     u291:
  1981     0416  2C19               	goto	l63
  1982     0417                     u290:
  1983     0417                     l1045:
  1984                           
  1985                           ;./LCD.h: 11:   RC5 = 1;
  1986     0417  1687               	bsf	7,5	;volatile
  1987     0418  2C1A               	goto	l64
  1988     0419                     l63:	
  1989                           ;./LCD.h: 12:  else
  1990                           
  1991                           
  1992                           ;./LCD.h: 13:   RC5 = 0;
  1993     0419  1287               	bcf	7,5	;volatile
  1994     041A                     l64:
  1995                           
  1996                           ;./LCD.h: 15:  if(a & 4)
  1997     041A  1D20               	btfss	Lcd_Port@a,2
  1998     041B  2C1D               	goto	u301
  1999     041C  2C1E               	goto	u300
  2000     041D                     u301:
  2001     041D  2C20               	goto	l65
  2002     041E                     u300:
  2003     041E                     l1047:
  2004                           
  2005                           ;./LCD.h: 16:   RC6 = 1;
  2006     041E  1707               	bsf	7,6	;volatile
  2007     041F  2C21               	goto	l66
  2008     0420                     l65:	
  2009                           ;./LCD.h: 17:  else
  2010                           
  2011                           
  2012                           ;./LCD.h: 18:   RC6 = 0;
  2013     0420  1307               	bcf	7,6	;volatile
  2014     0421                     l66:
  2015                           
  2016                           ;./LCD.h: 20:  if(a & 8)
  2017     0421  1DA0               	btfss	Lcd_Port@a,3
  2018     0422  2C24               	goto	u311
  2019     0423  2C25               	goto	u310
  2020     0424                     u311:
  2021     0424  2C27               	goto	l67
  2022     0425                     u310:
  2023     0425                     l1049:
  2024                           
  2025                           ;./LCD.h: 21:   RC7 = 1;
  2026     0425  1787               	bsf	7,7	;volatile
  2027     0426  2C28               	goto	l69
  2028     0427                     l67:	
  2029                           ;./LCD.h: 22:  else
  2030                           
  2031                           
  2032                           ;./LCD.h: 23:   RC7 = 0;
  2033     0427  1387               	bcf	7,7	;volatile
  2034     0428                     l69:
  2035     0428  0008               	return
  2036     0429                     __end_of_Lcd_Port:
  2037                           
  2038                           	psect	text11
  2039     01A3                     __ptext11:	
  2040 ;; *************** function _tes *****************
  2041 ;; Defined at:
  2042 ;;		line 47 in file "newmain.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          4       0       0       0       0
  2059 ;;      Totals:         4       0       0       0       0
  2060 ;;Total ram usage:        4 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 3
  2063 ;; This function calls:
  2064 ;;		i1_Lcd_Clear
  2065 ;;		i1_Lcd_Set_Cursor
  2066 ;;		i1_Lcd_Write_String
  2067 ;; This function is called by:
  2068 ;;		Interrupt level 1
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072     01A3                     _tes:	
  2073                           ;psect for function _tes
  2074                           
  2075     01A3                     i1l1225:
  2076                           
  2077                           ;newmain.c: 48:     if(TMR1IF){
  2078     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2079     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2080     01A5  1C0C               	btfss	12,0	;volatile
  2081     01A6  29A8               	goto	u48_21
  2082     01A7  29A9               	goto	u48_20
  2083     01A8                     u48_21:
  2084     01A8  29C3               	goto	i1l116
  2085     01A9                     u48_20:
  2086     01A9                     i1l1227:
  2087                           
  2088                           ;newmain.c: 49:         PIR1bits.TMR1IF = 0;
  2089     01A9  100C               	bcf	12,0	;volatile
  2090     01AA                     i1l1229:
  2091                           
  2092                           ;newmain.c: 50:         TMR1L = 0xDC;
  2093     01AA  30DC               	movlw	220
  2094     01AB  008E               	movwf	14	;volatile
  2095                           
  2096                           ;newmain.c: 51:         TMR1H = 0X0B;
  2097     01AC  300B               	movlw	11
  2098     01AD  008F               	movwf	15	;volatile
  2099                           
  2100                           ;newmain.c: 52:         conta++;
  2101     01AE  3001               	movlw	1
  2102     01AF  07AD               	addwf	_conta,f
  2103     01B0  1803               	skipnc
  2104     01B1  0AAE               	incf	_conta+1,f
  2105     01B2  3000               	movlw	0
  2106     01B3  07AE               	addwf	_conta+1,f
  2107     01B4                     i1l1231:
  2108                           
  2109                           ;newmain.c: 53:         if(conta == 8){
  2110     01B4  3008               	movlw	8
  2111     01B5  062D               	xorwf	_conta,w
  2112     01B6  042E               	iorwf	_conta+1,w
  2113     01B7  1D03               	btfss	3,2
  2114     01B8  29BA               	goto	u49_21
  2115     01B9  29BB               	goto	u49_20
  2116     01BA                     u49_21:
  2117     01BA  29E3               	goto	i1l120
  2118     01BB                     u49_20:
  2119     01BB                     i1l1233:
  2120                           
  2121                           ;newmain.c: 54:             T1CONbits.TMR1ON = 0;
  2122     01BB  1010               	bcf	16,0	;volatile
  2123     01BC                     i1l1235:
  2124                           
  2125                           ;newmain.c: 55:             conta = 0;
  2126     01BC  01AD               	clrf	_conta
  2127     01BD  01AE               	clrf	_conta+1
  2128     01BE                     i1l1237:
  2129                           
  2130                           ;newmain.c: 56:             aux_despejo = 1;
  2131     01BE  3001               	movlw	1
  2132     01BF  00B1               	movwf	_aux_despejo
  2133     01C0  3000               	movlw	0
  2134     01C1  00B2               	movwf	_aux_despejo+1
  2135     01C2  29E3               	goto	i1l120
  2136     01C3                     i1l116:	
  2137                           ;newmain.c: 60:     else if (INTCONbits.INTF)
  2138                           
  2139     01C3  1C8B               	btfss	11,1	;volatile
  2140     01C4  29C6               	goto	u50_21
  2141     01C5  29C7               	goto	u50_20
  2142     01C6                     u50_21:
  2143     01C6  29E3               	goto	i1l120
  2144     01C7                     u50_20:
  2145     01C7                     i1l1239:
  2146                           
  2147                           ;newmain.c: 61:     {;newmain.c: 62:         INTCONbits.INTF = 0;
  2148     01C7  108B               	bcf	11,1	;volatile
  2149                           
  2150                           ;newmain.c: 63:         PORTDbits.RD7 = 0;
  2151     01C8  1388               	bcf	8,7	;volatile
  2152     01C9                     i1l1241:
  2153                           
  2154                           ;newmain.c: 64:         Lcd_Clear();
  2155     01C9  120A  118A  246C  120A  118A  	fcall	i1_Lcd_Clear
  2156                           
  2157                           ;newmain.c: 65:         Lcd_Set_Cursor(1,1);
  2158     01CE  01F4               	clrf	i1Lcd_Set_Cursor@b
  2159     01CF  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2160     01D0  3001               	movlw	1
  2161     01D1  120A  118A  2247  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2162     01D6                     i1l1243:
  2163                           
  2164                           ;newmain.c: 66:         Lcd_Write_String("INTERROMPIDO...");
  2165     01D6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2166     01D7  120A  118A  23C2  120A  118A  	fcall	i1_Lcd_Write_String
  2167     01DC                     i1l1245:
  2168                           
  2169                           ;newmain.c: 67:         interrupcao = 1;
  2170     01DC  3001               	movlw	1
  2171     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2172     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2173     01DF  00AF               	movwf	_interrupcao
  2174     01E0  3000               	movlw	0
  2175     01E1  00B0               	movwf	_interrupcao+1
  2176     01E2  29BE               	goto	i1l1237
  2177     01E3                     i1l120:
  2178     01E3  087D               	movf	??_tes+3,w
  2179     01E4  00FF               	movwf	btemp+1
  2180     01E5  087C               	movf	??_tes+2,w
  2181     01E6  008A               	movwf	10
  2182     01E7  087B               	movf	??_tes+1,w
  2183     01E8  0084               	movwf	4
  2184     01E9  0E7A               	swapf	??_tes,w
  2185     01EA  0083               	movwf	3
  2186     01EB  0EFE               	swapf	btemp,f
  2187     01EC  0E7E               	swapf	btemp,w
  2188     01ED  0009               	retfie
  2189     01EE                     __end_of_tes:
  2190                           
  2191                           	psect	intentry
  2192     0004                     __pintentry:	
  2193                           ;incstack = 0
  2194                           ; Regs used in _tes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2195                           
  2196     0004                     interrupt_function:
  2197     007E                     saved_w	set	btemp
  2198     0004  00FE               	movwf	btemp
  2199     0005  0E03               	swapf	3,w
  2200     0006  00FA               	movwf	??_tes
  2201     0007  0804               	movf	4,w
  2202     0008  00FB               	movwf	??_tes+1
  2203     0009  080A               	movf	10,w
  2204     000A  00FC               	movwf	??_tes+2
  2205     000B  087F               	movf	btemp+1,w
  2206     000C  00FD               	movwf	??_tes+3
  2207     000D  120A  118A  29A3   	ljmp	_tes
  2208                           
  2209                           	psect	text12
  2210     03C2                     __ptext12:	
  2211 ;; *************** function i1_Lcd_Write_String *****************
  2212 ;; Defined at:
  2213 ;;		line 96 in file "./LCD.h"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  a               1    wreg     PTR unsigned char 
  2216 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  2217 ;;		 -> STR_1(16), 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  a               1    5[COMMON] PTR unsigned char 
  2220 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  2221 ;;		 -> STR_1(16), 
  2222 ;;  i               2    6[COMMON] int 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       0       0       0       0
  2233 ;;      Locals:         3       0       0       0       0
  2234 ;;      Temps:          0       0       0       0       0
  2235 ;;      Totals:         3       0       0       0       0
  2236 ;;Total ram usage:        3 bytes
  2237 ;; Hardware stack levels used: 1
  2238 ;; Hardware stack levels required when called: 2
  2239 ;; This function calls:
  2240 ;;		i1_Lcd_Write_Char
  2241 ;; This function is called by:
  2242 ;;		_tes
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246     03C2                     i1_Lcd_Write_String:	
  2247                           ;psect for function i1_Lcd_Write_String
  2248                           
  2249                           
  2250                           ;incstack = 0
  2251 ;; using string table level
  2252                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2253                           ;i1Lcd_Write_String@a stored from wreg
  2254     03C2  00F5               	movwf	i1Lcd_Write_String@a
  2255     03C3                     i1l1213:
  2256                           
  2257                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2258     03C3  01F6               	clrf	i1Lcd_Write_String@i
  2259     03C4  01F7               	clrf	i1Lcd_Write_String@i+1
  2260     03C5  2BD9               	goto	i1l1219
  2261     03C6                     i1l1215:
  2262                           
  2263                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  2264     03C6  0876               	movf	i1Lcd_Write_String@i,w
  2265     03C7  0775               	addwf	i1Lcd_Write_String@a,w
  2266     03C8  0084               	movwf	4
  2267     03C9  120A  118A  2200  120A  118A  	fcall	stringdir
  2268     03CE  120A  118A  2340  120A  118A  	fcall	i1_Lcd_Write_Char
  2269     03D3                     i1l1217:
  2270     03D3  3001               	movlw	1
  2271     03D4  07F6               	addwf	i1Lcd_Write_String@i,f
  2272     03D5  1803               	skipnc
  2273     03D6  0AF7               	incf	i1Lcd_Write_String@i+1,f
  2274     03D7  3000               	movlw	0
  2275     03D8  07F7               	addwf	i1Lcd_Write_String@i+1,f
  2276     03D9                     i1l1219:
  2277     03D9  0876               	movf	i1Lcd_Write_String@i,w
  2278     03DA  0775               	addwf	i1Lcd_Write_String@a,w
  2279     03DB  0084               	movwf	4
  2280     03DC  120A  118A  2200  120A  118A  	fcall	stringdir
  2281     03E1  3A00               	xorlw	0
  2282     03E2  1D03               	skipz
  2283     03E3  2BE5               	goto	u47_21
  2284     03E4  2BE6               	goto	u47_20
  2285     03E5                     u47_21:
  2286     03E5  2BC6               	goto	i1l1215
  2287     03E6                     u47_20:
  2288     03E6                     i1l93:
  2289     03E6  0008               	return
  2290     03E7                     __end_ofi1_Lcd_Write_String:
  2291                           
  2292                           	psect	text13
  2293     0340                     __ptext13:	
  2294 ;; *************** function i1_Lcd_Write_Char *****************
  2295 ;; Defined at:
  2296 ;;		line 80 in file "./LCD.h"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  a               1    wreg     unsigned char 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  a               1    4[COMMON] unsigned char 
  2301 ;;  y               1    3[COMMON] unsigned char 
  2302 ;;  temp            1    2[COMMON] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       0       0       0       0
  2313 ;;      Locals:         3       0       0       0       0
  2314 ;;      Temps:          1       0       0       0       0
  2315 ;;      Totals:         4       0       0       0       0
  2316 ;;Total ram usage:        4 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; Hardware stack levels required when called: 1
  2319 ;; This function calls:
  2320 ;;		i1_Lcd_Port
  2321 ;; This function is called by:
  2322 ;;		i1_Lcd_Write_String
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     0340                     i1_Lcd_Write_Char:	
  2327                           ;psect for function i1_Lcd_Write_Char
  2328                           
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2332                           ;i1Lcd_Write_Char@a stored from wreg
  2333     0340  00F4               	movwf	i1Lcd_Write_Char@a
  2334     0341                     i1l1131:
  2335                           
  2336                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  2337     0341  0874               	movf	i1Lcd_Write_Char@a,w
  2338     0342  390F               	andlw	15
  2339     0343  00F2               	movwf	i1Lcd_Write_Char@temp
  2340                           
  2341                           ;./LCD.h: 84:    y = a&0xF0;
  2342     0344  0874               	movf	i1Lcd_Write_Char@a,w
  2343     0345  39F0               	andlw	240
  2344     0346  00F3               	movwf	i1Lcd_Write_Char@y
  2345     0347                     i1l1133:
  2346                           
  2347                           ;./LCD.h: 85:    RC0 = 1;
  2348     0347  1283               	bcf	3,5	;RP0=0, select bank0
  2349     0348  1303               	bcf	3,6	;RP1=0, select bank0
  2350     0349  1407               	bsf	7,0	;volatile
  2351     034A                     i1l1135:
  2352                           
  2353                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  2354     034A  0873               	movf	i1Lcd_Write_Char@y,w
  2355     034B  00F1               	movwf	??i1_Lcd_Write_Char
  2356     034C  3004               	movlw	4
  2357     034D                     u42_25:
  2358     034D  1003               	clrc
  2359     034E  0CF1               	rrf	??i1_Lcd_Write_Char,f
  2360     034F  3EFF               	addlw	-1
  2361     0350  1D03               	skipz
  2362     0351  2B4D               	goto	u42_25
  2363     0352  0871               	movf	??i1_Lcd_Write_Char,w
  2364     0353  120A  118A  23E7  120A  118A  	fcall	i1_Lcd_Port
  2365     0358                     i1l1137:
  2366                           
  2367                           ;./LCD.h: 87:    RC2 = 1;
  2368     0358  1283               	bcf	3,5	;RP0=0, select bank0
  2369     0359  1303               	bcf	3,6	;RP1=0, select bank0
  2370     035A  1507               	bsf	7,2	;volatile
  2371     035B                     i1l1139:
  2372                           
  2373                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2374     035B  300D               	movlw	13
  2375     035C  00F1               	movwf	??i1_Lcd_Write_Char
  2376     035D                     u73_27:
  2377     035D  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2378     035E  2B5D               	goto	u73_27
  2379     035F                     i1l1141:
  2380                           
  2381                           ;./LCD.h: 89:    RC2 = 0;
  2382     035F  1283               	bcf	3,5	;RP0=0, select bank0
  2383     0360  1303               	bcf	3,6	;RP1=0, select bank0
  2384     0361  1107               	bcf	7,2	;volatile
  2385     0362                     i1l1143:
  2386                           
  2387                           ;./LCD.h: 90:    Lcd_Port(temp);
  2388     0362  0872               	movf	i1Lcd_Write_Char@temp,w
  2389     0363  120A  118A  23E7  120A  118A  	fcall	i1_Lcd_Port
  2390     0368                     i1l1145:
  2391                           
  2392                           ;./LCD.h: 91:    RC2 = 1;
  2393     0368  1283               	bcf	3,5	;RP0=0, select bank0
  2394     0369  1303               	bcf	3,6	;RP1=0, select bank0
  2395     036A  1507               	bsf	7,2	;volatile
  2396     036B                     i1l1147:
  2397                           
  2398                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2399     036B  300D               	movlw	13
  2400     036C  00F1               	movwf	??i1_Lcd_Write_Char
  2401     036D                     u74_27:
  2402     036D  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2403     036E  2B6D               	goto	u74_27
  2404     036F                     i1l1149:
  2405                           
  2406                           ;./LCD.h: 93:    RC2 = 0;
  2407     036F  1283               	bcf	3,5	;RP0=0, select bank0
  2408     0370  1303               	bcf	3,6	;RP1=0, select bank0
  2409     0371  1107               	bcf	7,2	;volatile
  2410     0372                     i1l87:
  2411     0372  0008               	return
  2412     0373                     __end_ofi1_Lcd_Write_Char:
  2413                           
  2414                           	psect	text14
  2415     0247                     __ptext14:	
  2416 ;; *************** function i1_Lcd_Set_Cursor *****************
  2417 ;; Defined at:
  2418 ;;		line 40 in file "./LCD.h"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  a               1    wreg     unsigned char 
  2421 ;;  b               1    4[COMMON] unsigned char 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  a               1    6[COMMON] unsigned char 
  2424 ;;  temp            1    9[COMMON] unsigned char 
  2425 ;;  y               1    8[COMMON] unsigned char 
  2426 ;;  z               1    7[COMMON] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, pclath, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2436 ;;      Params:         1       0       0       0       0
  2437 ;;      Locals:         4       0       0       0       0
  2438 ;;      Temps:          1       0       0       0       0
  2439 ;;      Totals:         6       0       0       0       0
  2440 ;;Total ram usage:        6 bytes
  2441 ;; Hardware stack levels used: 1
  2442 ;; Hardware stack levels required when called: 2
  2443 ;; This function calls:
  2444 ;;		i1_Lcd_Cmd
  2445 ;; This function is called by:
  2446 ;;		_tes
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450     0247                     i1_Lcd_Set_Cursor:	
  2451                           ;psect for function i1_Lcd_Set_Cursor
  2452                           
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2456                           ;i1Lcd_Set_Cursor@a stored from wreg
  2457     0247  00F6               	movwf	i1Lcd_Set_Cursor@a
  2458     0248                     i1l1193:
  2459                           
  2460                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  2461     0248  0376               	decf	i1Lcd_Set_Cursor@a,w
  2462     0249  1D03               	btfss	3,2
  2463     024A  2A4C               	goto	u43_21
  2464     024B  2A4D               	goto	u43_20
  2465     024C                     u43_21:
  2466     024C  2A6A               	goto	i1l1203
  2467     024D                     u43_20:
  2468     024D                     i1l1195:
  2469                           
  2470                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  2471     024D  0874               	movf	i1Lcd_Set_Cursor@b,w
  2472     024E  3E7F               	addlw	127
  2473     024F  00F9               	movwf	i1Lcd_Set_Cursor@temp
  2474                           
  2475                           ;./LCD.h: 46:   z = temp>>4;
  2476     0250  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2477     0251  00F5               	movwf	??i1_Lcd_Set_Cursor
  2478     0252  3004               	movlw	4
  2479     0253                     u44_25:
  2480     0253  1003               	clrc
  2481     0254  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2482     0255  3EFF               	addlw	-1
  2483     0256  1D03               	skipz
  2484     0257  2A53               	goto	u44_25
  2485     0258  0875               	movf	??i1_Lcd_Set_Cursor,w
  2486     0259  00F7               	movwf	i1Lcd_Set_Cursor@z
  2487     025A                     i1l1197:
  2488                           
  2489                           ;./LCD.h: 47:   y = temp & 0x0F;
  2490     025A  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2491     025B  390F               	andlw	15
  2492     025C  00F8               	movwf	i1Lcd_Set_Cursor@y
  2493     025D                     i1l1199:
  2494                           
  2495                           ;./LCD.h: 48:   Lcd_Cmd(z);
  2496     025D  0877               	movf	i1Lcd_Set_Cursor@z,w
  2497     025E  120A  118A  2445  120A  118A  	fcall	i1_Lcd_Cmd
  2498     0263                     i1l1201:
  2499                           
  2500                           ;./LCD.h: 49:   Lcd_Cmd(y);
  2501     0263  0878               	movf	i1Lcd_Set_Cursor@y,w
  2502     0264  120A  118A  2445  120A  118A  	fcall	i1_Lcd_Cmd
  2503                           
  2504                           ;./LCD.h: 50:  }
  2505     0269  2A8C               	goto	i1l81
  2506     026A                     i1l1203:
  2507     026A  3002               	movlw	2
  2508     026B  0676               	xorwf	i1Lcd_Set_Cursor@a,w
  2509     026C  1D03               	btfss	3,2
  2510     026D  2A6F               	goto	u45_21
  2511     026E  2A70               	goto	u45_20
  2512     026F                     u45_21:
  2513     026F  2A8C               	goto	i1l81
  2514     0270                     u45_20:
  2515     0270                     i1l1205:
  2516                           
  2517                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  2518     0270  0874               	movf	i1Lcd_Set_Cursor@b,w
  2519     0271  3EBF               	addlw	191
  2520     0272  00F9               	movwf	i1Lcd_Set_Cursor@temp
  2521                           
  2522                           ;./LCD.h: 54:   z = temp>>4;
  2523     0273  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2524     0274  00F5               	movwf	??i1_Lcd_Set_Cursor
  2525     0275  3004               	movlw	4
  2526     0276                     u46_25:
  2527     0276  1003               	clrc
  2528     0277  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2529     0278  3EFF               	addlw	-1
  2530     0279  1D03               	skipz
  2531     027A  2A76               	goto	u46_25
  2532     027B  0875               	movf	??i1_Lcd_Set_Cursor,w
  2533     027C  00F7               	movwf	i1Lcd_Set_Cursor@z
  2534     027D                     i1l1207:
  2535                           
  2536                           ;./LCD.h: 55:   y = temp & 0x0F;
  2537     027D  0879               	movf	i1Lcd_Set_Cursor@temp,w
  2538     027E  390F               	andlw	15
  2539     027F  00F8               	movwf	i1Lcd_Set_Cursor@y
  2540     0280                     i1l1209:
  2541                           
  2542                           ;./LCD.h: 56:   Lcd_Cmd(z);
  2543     0280  0877               	movf	i1Lcd_Set_Cursor@z,w
  2544     0281  120A  118A  2445  120A  118A  	fcall	i1_Lcd_Cmd
  2545     0286                     i1l1211:
  2546                           
  2547                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2548     0286  0878               	movf	i1Lcd_Set_Cursor@y,w
  2549     0287  120A  118A  2445  120A  118A  	fcall	i1_Lcd_Cmd
  2550     028C                     i1l81:
  2551     028C  0008               	return
  2552     028D                     __end_ofi1_Lcd_Set_Cursor:
  2553                           
  2554                           	psect	text15
  2555     046C                     __ptext15:	
  2556 ;; *************** function i1_Lcd_Clear *****************
  2557 ;; Defined at:
  2558 ;;		line 34 in file "./LCD.h"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         0       0       0       0       0
  2573 ;;      Locals:         0       0       0       0       0
  2574 ;;      Temps:          0       0       0       0       0
  2575 ;;      Totals:         0       0       0       0       0
  2576 ;;Total ram usage:        0 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 2
  2579 ;; This function calls:
  2580 ;;		i1_Lcd_Cmd
  2581 ;; This function is called by:
  2582 ;;		_tes
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586     046C                     i1_Lcd_Clear:	
  2587                           ;psect for function i1_Lcd_Clear
  2588                           
  2589     046C                     i1l1191:	
  2590                           ;incstack = 0
  2591                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2592                           
  2593                           
  2594                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2595     046C  3000               	movlw	0
  2596     046D  120A  118A  2445  120A  118A  	fcall	i1_Lcd_Cmd
  2597                           
  2598                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2599     0472  3001               	movlw	1
  2600     0473  120A  118A  2445  120A  118A  	fcall	i1_Lcd_Cmd
  2601     0478                     i1l75:
  2602     0478  0008               	return
  2603     0479                     __end_ofi1_Lcd_Clear:
  2604                           
  2605                           	psect	text16
  2606     0445                     __ptext16:	
  2607 ;; *************** function i1_Lcd_Cmd *****************
  2608 ;; Defined at:
  2609 ;;		line 25 in file "./LCD.h"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  a               1    wreg     unsigned char 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  a               1    3[COMMON] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      void 
  2616 ;; Registers used:
  2617 ;;		wreg, status,2, status,0, pclath, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2623 ;;      Params:         0       0       0       0       0
  2624 ;;      Locals:         1       0       0       0       0
  2625 ;;      Temps:          2       0       0       0       0
  2626 ;;      Totals:         3       0       0       0       0
  2627 ;;Total ram usage:        3 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 1
  2630 ;; This function calls:
  2631 ;;		i1_Lcd_Port
  2632 ;; This function is called by:
  2633 ;;		i1_Lcd_Clear
  2634 ;;		i1_Lcd_Set_Cursor
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638     0445                     i1_Lcd_Cmd:	
  2639                           ;psect for function i1_Lcd_Cmd
  2640                           
  2641                           
  2642                           ;incstack = 0
  2643                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2644                           ;i1Lcd_Cmd@a stored from wreg
  2645     0445  00F3               	movwf	i1Lcd_Cmd@a
  2646     0446                     i1l1121:
  2647                           
  2648                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  2649     0446  1283               	bcf	3,5	;RP0=0, select bank0
  2650     0447  1303               	bcf	3,6	;RP1=0, select bank0
  2651     0448  1007               	bcf	7,0	;volatile
  2652     0449                     i1l1123:
  2653                           
  2654                           ;./LCD.h: 28:  Lcd_Port(a);
  2655     0449  0873               	movf	i1Lcd_Cmd@a,w
  2656     044A  120A  118A  23E7  120A  118A  	fcall	i1_Lcd_Port
  2657     044F                     i1l1125:
  2658                           
  2659                           ;./LCD.h: 29:  RC2 = 1;
  2660     044F  1283               	bcf	3,5	;RP0=0, select bank0
  2661     0450  1303               	bcf	3,6	;RP1=0, select bank0
  2662     0451  1507               	bsf	7,2	;volatile
  2663     0452                     i1l1127:
  2664                           
  2665                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2666     0452  3006               	movlw	6
  2667     0453  00F2               	movwf	??i1_Lcd_Cmd+1
  2668     0454  3030               	movlw	48
  2669     0455  00F1               	movwf	??i1_Lcd_Cmd
  2670     0456                     u75_27:
  2671     0456  0BF1               	decfsz	??i1_Lcd_Cmd,f
  2672     0457  2C56               	goto	u75_27
  2673     0458  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  2674     0459  2C56               	goto	u75_27
  2675     045A  0000               	nop
  2676     045B                     i1l1129:
  2677                           
  2678                           ;./LCD.h: 31:         RC2 = 0;
  2679     045B  1283               	bcf	3,5	;RP0=0, select bank0
  2680     045C  1303               	bcf	3,6	;RP1=0, select bank0
  2681     045D  1107               	bcf	7,2	;volatile
  2682     045E                     i1l72:
  2683     045E  0008               	return
  2684     045F                     __end_ofi1_Lcd_Cmd:
  2685                           
  2686                           	psect	text17
  2687     03E7                     __ptext17:	
  2688 ;; *************** function i1_Lcd_Port *****************
  2689 ;; Defined at:
  2690 ;;		line 3 in file "./LCD.h"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  a               1    wreg     unsigned char 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  a               1    0[COMMON] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  1    wreg      void 
  2697 ;; Registers used:
  2698 ;;		wreg
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         0       0       0       0       0
  2705 ;;      Locals:         1       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0
  2707 ;;      Totals:         1       0       0       0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		i1_Lcd_Cmd
  2714 ;;		i1_Lcd_Write_Char
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718     03E7                     i1_Lcd_Port:	
  2719                           ;psect for function i1_Lcd_Port
  2720                           
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in i1_Lcd_Port: [wreg]
  2724                           ;i1Lcd_Port@a stored from wreg
  2725     03E7  00F0               	movwf	i1Lcd_Port@a
  2726     03E8                     i1l1081:
  2727                           
  2728                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2729     03E8  1C70               	btfss	i1Lcd_Port@a,0
  2730     03E9  2BEB               	goto	u33_21
  2731     03EA  2BEC               	goto	u33_20
  2732     03EB                     u33_21:
  2733     03EB  2BF0               	goto	i1l61
  2734     03EC                     u33_20:
  2735     03EC                     i1l1083:
  2736                           
  2737                           ;./LCD.h: 6:   RC4 = 1;
  2738     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2739     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2740     03EE  1607               	bsf	7,4	;volatile
  2741     03EF  2BF3               	goto	i1l62
  2742     03F0                     i1l61:	
  2743                           ;./LCD.h: 7:  else
  2744                           
  2745                           
  2746                           ;./LCD.h: 8:   RC4 = 0;
  2747     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2748     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2749     03F2  1207               	bcf	7,4	;volatile
  2750     03F3                     i1l62:
  2751                           
  2752                           ;./LCD.h: 10:  if(a & 2)
  2753     03F3  1CF0               	btfss	i1Lcd_Port@a,1
  2754     03F4  2BF6               	goto	u34_21
  2755     03F5  2BF7               	goto	u34_20
  2756     03F6                     u34_21:
  2757     03F6  2BF9               	goto	i1l63
  2758     03F7                     u34_20:
  2759     03F7                     i1l1085:
  2760                           
  2761                           ;./LCD.h: 11:   RC5 = 1;
  2762     03F7  1687               	bsf	7,5	;volatile
  2763     03F8  2BFA               	goto	i1l64
  2764     03F9                     i1l63:	
  2765                           ;./LCD.h: 12:  else
  2766                           
  2767                           
  2768                           ;./LCD.h: 13:   RC5 = 0;
  2769     03F9  1287               	bcf	7,5	;volatile
  2770     03FA                     i1l64:
  2771                           
  2772                           ;./LCD.h: 15:  if(a & 4)
  2773     03FA  1D70               	btfss	i1Lcd_Port@a,2
  2774     03FB  2BFD               	goto	u35_21
  2775     03FC  2BFE               	goto	u35_20
  2776     03FD                     u35_21:
  2777     03FD  2C00               	goto	i1l65
  2778     03FE                     u35_20:
  2779     03FE                     i1l1087:
  2780                           
  2781                           ;./LCD.h: 16:   RC6 = 1;
  2782     03FE  1707               	bsf	7,6	;volatile
  2783     03FF  2C01               	goto	i1l66
  2784     0400                     i1l65:	
  2785                           ;./LCD.h: 17:  else
  2786                           
  2787                           
  2788                           ;./LCD.h: 18:   RC6 = 0;
  2789     0400  1307               	bcf	7,6	;volatile
  2790     0401                     i1l66:
  2791                           
  2792                           ;./LCD.h: 20:  if(a & 8)
  2793     0401  1DF0               	btfss	i1Lcd_Port@a,3
  2794     0402  2C04               	goto	u36_21
  2795     0403  2C05               	goto	u36_20
  2796     0404                     u36_21:
  2797     0404  2C07               	goto	i1l67
  2798     0405                     u36_20:
  2799     0405                     i1l1089:
  2800                           
  2801                           ;./LCD.h: 21:   RC7 = 1;
  2802     0405  1787               	bsf	7,7	;volatile
  2803     0406  2C08               	goto	i1l69
  2804     0407                     i1l67:	
  2805                           ;./LCD.h: 22:  else
  2806                           
  2807                           
  2808                           ;./LCD.h: 23:   RC7 = 0;
  2809     0407  1387               	bcf	7,7	;volatile
  2810     0408                     i1l69:
  2811     0408  0008               	return
  2812     0409                     __end_ofi1_Lcd_Port:
  2813     007E                     btemp	set	126	;btemp
  2814     007E                     wtemp0	set	126
  2815                           
  2816                           	psect	config
  2817                           
  2818                           ;Config register CONFIG @ 0x2007
  2819                           ;	Oscillator Selection bits
  2820                           ;	FOSC = HS, HS oscillator
  2821                           ;	Watchdog Timer Enable bit
  2822                           ;	WDTE = OFF, WDT disabled
  2823                           ;	Power-up Timer Enable bit
  2824                           ;	PWRTE = ON, PWRT enabled
  2825                           ;	Brown-out Reset Enable bit
  2826                           ;	BOREN = ON, BOR enabled
  2827                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2828                           ;	LVP = 0x1, unprogrammed default
  2829                           ;	Data EEPROM Memory Code Protection bit
  2830                           ;	CPD = 0x1, unprogrammed default
  2831                           ;	Flash Program Memory Write Enable bits
  2832                           ;	WRT = 0x3, unprogrammed default
  2833                           ;	In-Circuit Debugger Mode bit
  2834                           ;	DEBUG = 0x1, unprogrammed default
  2835                           ;	Flash Program Memory Code Protection bit
  2836                           ;	CP = 0x1, unpro  2837     2007                     	org	8199
  2838     2007  3FF2               	dw	16370

Data Sizes:
    Strings     65
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_5(CODE[16]), STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    _tes->i1_Lcd_Set_Cursor
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Padrao->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2798
                                             10 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                         _Lcd_Padrao
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _PesoCambuca
                        _PesoEstoque
 ---------------------------------------------------------------------------------
 (1) _PesoEstoque                                          6     4      2      23
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _PesoCambuca                                          6     4      2      23
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Padrao                                           0     0      0    1277
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     433
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     734
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tes                                                  4     4      0     784
                                             10 COMMON     4     4      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_String                                   3     3      0     268
                                              5 COMMON     3     3      0
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     6     5      1     406
                                              4 COMMON     6     5      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Padrao
     _Lcd_Clear
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _PesoCambuca
   _PesoEstoque

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jul 21 22:09:52 2022

                         pc 0002                          l61 0412                          l62 0413  
                        l63 0419                          l64 041A                          l72 0444  
                        l65 0420                          l81 01A2                          l66 0421  
                        l67 0427                          l75 046B                          l84 0156  
                        l69 0428                          l93 039B                          l87 033F  
                        fsr 0004                         l123 0306                         l126 02C9  
                       l129 03C1                         l138 00BA                         l139 00C1  
                       _RC0 0038                         _RC2 003A                         _RC4 003C  
                       _RC5 003D                         _RC6 003E                         _RC7 003F  
                       u300 041E                         u301 041D                         u310 0425  
                       u311 0424                         u410 039B                         u411 039A  
                       u405 018A                         u325 0314                         u510 0083  
                       u511 0082                         u280 0410                         u520 009F  
                       u281 040F                         u521 009E                         u290 0417  
                       u370 015F                         u530 00C1                         u291 0416  
                       u371 015E                         u531 00C0                         u540 00C8  
                       u541 00C7                         u390 0184                         u391 0183  
                       u607 02AF                         u385 0165                         u617 02B9  
                       u707 0111                         u627 02CE                         u717 0122  
                       u637 02D8                         u557 008D                         u727 043C  
                       u647 02E2                         u567 00E5                         u657 02EC  
                       u577 0291                         u667 02F6                         u587 029B  
                       u677 0326                         u597 02A5                         u687 0339  
                       u697 0100                         _tes 01A3                         fsr0 0004  
                      l1101 0175                        l1111 019A                        l1103 017E  
                      l1041 040C                        l1105 0184                        l1113 0376  
                      l1043 0410                        l1051 042C                        l1107 0191  
                      l1115 0379                        l1045 0417                        l1053 042D  
                      l1109 0194                        l1061 030A                        l1117 0386  
                      l1301 005B                        l1047 041E                        l1055 0433  
                      l1151 00F4                        l1071 0329                        l1063 0310  
                      l1119 038E                        l1311 0072                        l1303 0060  
                      l1049 0425                        l1057 0436                        l1153 00FA  
                      l1073 032C                        l1065 0311                        l1161 02CA  
                      l1321 0098                        l1313 007D                        l1305 0063  
                      l1059 0441                        l1155 0105                        l1091 045F  
                      l1075 0332                        l1067 031F                        l1163 02D1  
                      l1331 00B0                        l1323 009B                        l1315 0083  
                      l1307 0065                        l1251 0025                        l1157 0116  
                      l1093 015A                        l1077 0335                        l1069 0322  
                      l1165 02DB                        l1181 02B2                        l1173 028D  
                      l1341 00D7                        l1333 00B6                        l1325 009F  
                      l1317 0085                        l1309 0067                        l1261 0033  
                      l1253 002B                        l1159 011C                        l1095 015F  
                      l1079 033C                        l1167 02E5                        l1175 0294  
                      l1343 00DD                        l1335 00BB                        l1327 00A1  
                      l1319 0093                        l1271 0038                        l1263 0034  
                      l1255 002C                        l1097 016C                        l1185 039C  
                      l1169 02EF                        l1177 029E                        l1345 00EB  
                      l1337 00C2                        l1329 00A6                        l1281 0047  
                      l1273 003B                        l1265 0035                        l1257 002F  
                      l1099 016F                        l1187 03AB                        l1179 02A8  
                      l1339 00C8                        l1291 004E                        l1283 0048  
                      l1275 003E                        l1267 0036                        l1259 0032  
                      l1189 03B1                        l1293 0051                        l1285 0049  
                      l1277 003F                        l1269 0037                        l1295 0052  
                      l1287 004A                        l1279 0044                        l1297 0055  
                      l1289 004D                        l1299 0056                        ?_tes 0070  
                      STR_1 0206                        STR_2 0234                        STR_3 023E  
                      STR_4 0226                        STR_5 0216                        i1l61 03F0  
                      i1l62 03F3                        i1l63 03F9                        i1l64 03FA  
                      i1l72 045E                        i1l65 0400                        i1l81 028C  
                      i1l66 0401                        i1l67 0407                        i1l75 0478  
                      i1l69 0408                        i1l93 03E6                        i1l87 0372  
         ?_Lcd_Write_String 0070                        _main 0025                        btemp 007E  
                      start 0010          ??_Lcd_Write_String 0025             __end_of_Lcd_Cmd 0445  
                     ??_tes 007A                  _Lcd_Padrao 039C                       ?_main 0070  
                     i1l120 01E3                       i1l116 01C3           ?i1_Lcd_Set_Cursor 0074  
                     u33_20 03EC                       u33_21 03EB                       _TMR1H 000F  
                     _TMR1L 000E                       u34_20 03F7                       u50_20 01C7  
                     u34_21 03F6                       u50_21 01C6                       u42_25 034D  
                     u35_20 03FE                       u43_20 024D                       u35_21 03FD  
                     u43_21 024C                       _PORTA 0005                       _PORTB 0006  
                     _PORTC 0007                       _PORTD 0008                       u36_20 0405  
                     u36_21 0404                       u44_25 0253                       u45_20 0270  
                     u45_21 026F                       u46_25 0276                       u47_20 03E6  
                     u47_21 03E5                       u48_20 01A9                       u48_21 01A8  
                     u49_20 01BB                       u49_21 01BA                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     u73_27 035D                       u74_27 036D                       u75_27 0456  
               ?i1_Lcd_Port 0070          ??i1_Lcd_Set_Cursor 0075                       _conta 002D  
                     _valor 0033                       pclath 000A                       status 0003  
                     wtemp0 007E               ??_PesoCambuca 0022            __end_of_Lcd_Init 0157  
          __end_of_Lcd_Port 0429             __initialization 0013                __end_of_main 00F4  
             ??_PesoEstoque 0022                      ??_main 002A                      _ADRESH 001E  
                    _ADRESL 009E                      i1l1121 0446                      i1l1201 0263  
                    i1l1123 0449                      i1l1211 0286                      i1l1203 026A  
                    i1l1131 0341                      i1l1125 044F                      i1l1205 0270  
                    i1l1141 035F                      i1l1133 0347                      i1l1213 03C3  
                    i1l1127 0452                      i1l1207 027D                      i1l1143 0362  
                    i1l1135 034A                      i1l1215 03C6                      i1l1231 01B4  
                    i1l1081 03E8                      i1l1129 045B                      i1l1209 0280  
                    i1l1145 0368                      i1l1137 0358                      i1l1217 03D3  
                    i1l1241 01C9                      i1l1233 01BB                      i1l1225 01A3  
                    i1l1083 03EC                      i1l1147 036B                      i1l1139 035B  
                    i1l1219 03D9                      i1l1243 01D6                      i1l1235 01BC  
                    i1l1227 01A9                      i1l1085 03F7                      i1l1149 036F  
                    i1l1245 01DC                      i1l1237 01BE                      i1l1229 01AA  
                    i1l1087 03FE                      i1l1191 046C                      i1l1239 01C7  
                    i1l1089 0405                      i1l1193 0248                      i1l1195 024D  
                    i1l1197 025A                      i1l1199 025D           ?i1_Lcd_Write_Char 0070  
                 ??_Lcd_Cmd 0021                      _TMR1IF 0060                ?i1_Lcd_Clear 0070  
        ??i1_Lcd_Write_Char 0071           __end_ofi1_Lcd_Cmd 045F           i1Lcd_Write_Char@a 0074  
         i1Lcd_Write_Char@y 0073         __end_of_PesoCambuca 0307                 ?_Lcd_Padrao 0070  
       __end_of_PesoEstoque 02CA                      saved_w 007E             Lcd_Set_Cursor@a 0026  
           Lcd_Set_Cursor@b 0024             Lcd_Set_Cursor@y 0028             Lcd_Set_Cursor@z 0027  
   __end_of__initialization 0021           __end_of_Lcd_Clear 046C              __pcstackCOMMON 0070  
            _Lcd_Set_Cursor 0157                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                __pbssBANK0 002D                 _PesoCambuca 02CA                  __pmaintext 0025  
               _PesoEstoque 028D                  __pintentry 0004      __end_of_Lcd_Set_Cursor 01A3  
              ??i1_Lcd_Port 0070                  ??_Lcd_Init 0024                  ??_Lcd_Port 0020  
                __stringtab 0200              _Lcd_Write_Char 0307                     _Lcd_Cmd 0429  
        __end_ofi1_Lcd_Port 0409             ?_Lcd_Set_Cursor 0024                     __ptext1 028D  
                   __ptext2 02CA                     __ptext3 039C                     __ptext4 0373  
                   __ptext5 0307                     __ptext6 0157                     __ptext7 045F  
                   __ptext8 00F4                     __ptext9 0429                   _T1CONbits 0010  
__end_ofi1_Lcd_Write_String 03E7      __end_of_Lcd_Write_Char 0340        end_of_initialization 0021  
                 Lcd_Port@a 0020             PesoCambuca@peso 0024                ??_Lcd_Padrao 002A  
                 i1_Lcd_Cmd 0445                   _PORTBbits 0006                   _PORTDbits 0008  
           ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0027           Lcd_Write_String@i 0025  
        __end_of_Lcd_Padrao 03C2                   _Lcd_Clear 045F                  ?i1_Lcd_Cmd 0070  
          _Lcd_Write_String 0373         start_initialization 0013                 __end_of_tes 01EE  
          i1_Lcd_Set_Cursor 0247                ?_PesoCambuca 0020                  ?_Lcd_Clear 0070  
              ?_PesoEstoque 0020             Lcd_Write_Char@a 0024             Lcd_Write_Char@y 0023  
                 ___latbits 0002               __pcstackBANK0 0020        i1Lcd_Write_Char@temp 0072  
                  ?_Lcd_Cmd 0070            ??_Lcd_Set_Cursor 0025            i1_Lcd_Write_Char 0340  
               ??i1_Lcd_Cmd 0071        i1Lcd_Set_Cursor@temp 0079                   __pstrings 0200  
         interrupt_function 0004               ??i1_Lcd_Clear 0074                    _PIE1bits 008C  
        i1_Lcd_Write_String 03C2                    Lcd_Cmd@a 0023                    _PIR1bits 000C  
               ??_Lcd_Clear 0024         ?i1_Lcd_Write_String 0070                  _ADCON0bits 001F  
               __stringbase 0205                  _ADCON1bits 009F            ??_Lcd_Write_Char 0021  
                  _Lcd_Init 00F4                    _Lcd_Port 0409                 _aux_despejo 0031  
      ??i1_Lcd_Write_String 0075    __end_of_Lcd_Write_String 039C                _peso_cambuca 0037  
       __end_ofi1_Lcd_Clear 0479                _peso_estoque 0035          __end_of__stringtab 0206  
  __end_ofi1_Lcd_Set_Cursor 028D           i1Lcd_Set_Cursor@a 0076           i1Lcd_Set_Cursor@b 0074  
         i1Lcd_Set_Cursor@y 0078           i1Lcd_Set_Cursor@z 0077                    __ptext10 0409  
                  __ptext11 01A3                    __ptext12 03C2                    __ptext13 0340  
                  __ptext14 0247                    __ptext15 046C                    __ptext16 0445  
                  __ptext17 03E7                 i1Lcd_Port@a 0070                 _interrupcao 002F  
       i1Lcd_Write_String@a 0075         i1Lcd_Write_String@i 0076                  _INTCONbits 000B  
        Lcd_Write_Char@temp 0022                    intlevel1 0000    __end_ofi1_Lcd_Write_Char 0373  
               i1_Lcd_Clear 046C                  i1Lcd_Cmd@a 0073                   stringcode 0200  
        Lcd_Set_Cursor@temp 0029                  _OPTION_REG 0081                  i1_Lcd_Port 03E7  
                  stringdir 0200                    stringtab 0200             PesoEstoque@peso 0024  
