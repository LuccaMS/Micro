

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jul 21 09:07:02 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0088                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0093                     	;# 
   167     0094                     	;# 
   168     0098                     	;# 
   169     0099                     	;# 
   170     009C                     	;# 
   171     009D                     	;# 
   172     009E                     	;# 
   173     009F                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180     0006                     _PORTBbits	set	6
   181     0008                     _PORTD	set	8
   182     0007                     _PORTC	set	7
   183     0006                     _PORTB	set	6
   184     0005                     _PORTA	set	5
   185     0008                     _PORTDbits	set	8
   186     000B                     _INTCONbits	set	11
   187     000F                     _TMR1H	set	15
   188     000E                     _TMR1L	set	14
   189     000C                     _PIR1bits	set	12
   190     0060                     _TMR1IF	set	96
   191     003A                     _RC2	set	58
   192     0038                     _RC0	set	56
   193     003F                     _RC7	set	63
   194     003E                     _RC6	set	62
   195     003D                     _RC5	set	61
   196     003C                     _RC4	set	60
   197     0081                     _OPTION_REG	set	129
   198     0088                     _TRISD	set	136
   199     0087                     _TRISC	set	135
   200     0086                     _TRISB	set	134
   201     0085                     _TRISA	set	133
   202                           
   203                           	psect	strings
   204     01C7                     __pstrings:
   205     01C7                     stringtab:
   206     01C7                     __stringtab:
   207     01C7                     stringcode:	
   208                           ;	String table - string pointers are 1 byte each
   209                           
   210     01C7                     stringdir:
   211     01C7  3001               	movlw	high stringdir
   212     01C8  008A               	movwf	10
   213     01C9  0804               	movf	4,w
   214     01CA  0A84               	incf	4,f
   215     01CB  0782               	addwf	2,f
   216     01CC                     __stringbase:
   217     01CC  3400               	retlw	0
   218     01CD                     __end_of__stringtab:
   219     01CD                     STR_3:
   220     01CD  3444               	retlw	68	;'D'
   221     01CE  3445               	retlw	69	;'E'
   222     01CF  3453               	retlw	83	;'S'
   223     01D0  3450               	retlw	80	;'P'
   224     01D1  3445               	retlw	69	;'E'
   225     01D2  344A               	retlw	74	;'J'
   226     01D3  3441               	retlw	65	;'A'
   227     01D4  344E               	retlw	78	;'N'
   228     01D5  3444               	retlw	68	;'D'
   229     01D6  344F               	retlw	79	;'O'
   230     01D7  342E               	retlw	46	;'.'
   231     01D8  342E               	retlw	46	;'.'
   232     01D9  342E               	retlw	46	;'.'
   233     01DA  3400               	retlw	0
   234     01DB                     STR_1:
   235     01DB  3453               	retlw	83	;'S'
   236     01DC  3449               	retlw	73	;'I'
   237     01DD  3447               	retlw	71	;'G'
   238     01DE  344D               	retlw	77	;'M'
   239     01DF  3441               	retlw	65	;'A'
   240     01E0  3420               	retlw	32	;' '
   241     01E1  3444               	retlw	68	;'D'
   242     01E2  344F               	retlw	79	;'O'
   243     01E3  3447               	retlw	71	;'G'
   244     01E4  3400               	retlw	0
   245     01E5                     STR_2:
   246     01E5  3447               	retlw	71	;'G'
   247     01E6  3452               	retlw	82	;'R'
   248     01E7  3449               	retlw	73	;'I'
   249     01E8  344E               	retlw	78	;'N'
   250     01E9  3444               	retlw	68	;'D'
   251     01EA  3453               	retlw	83	;'S'
   252     01EB  3445               	retlw	69	;'E'
   253     01EC  3454               	retlw	84	;'T'
   254     01ED  3400               	retlw	0
   255     01DB                     
   256                           	psect	cinit
   257     000F                     start_initialization:	
   258                           ; #config settings
   259                           
   260     000F                     __initialization:
   261                           
   262                           ; Clear objects allocated to COMMON
   263     000F  01F6               	clrf	__pbssCOMMON& (0+127)
   264     0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   265                           
   266                           ; Clear objects allocated to BANK0
   267     0011  1283               	bcf	3,5	;RP0=0, select bank0
   268     0012  1303               	bcf	3,6	;RP1=0, select bank0
   269     0013  01AA               	clrf	__pbssBANK0& (0+127)
   270     0014  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   271     0015                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274     0015                     __end_of__initialization:
   275     0015  0183               	clrf	3
   276     0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMMON
   279     0076                     __pbssCOMMON:
   280     0076                     _valor:
   281     0076                     	ds	2
   282                           
   283                           	psect	bssBANK0
   284     002A                     __pbssBANK0:
   285     002A                     _interrupcao:
   286     002A                     	ds	2
   287                           
   288                           	psect	cstackCOMMON
   289     0070                     __pcstackCOMMON:
   290     0070                     ?_Lcd_Port:
   291     0070                     ?_Lcd_Cmd:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ?_Lcd_Clear:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?_Lcd_Init:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?_Lcd_Write_Char:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?_Lcd_Write_String:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_tes:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?i1_Lcd_Port:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ??i1_Lcd_Port:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ?i1_Lcd_Cmd:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?i1_Lcd_Clear:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     i1Lcd_Port@a:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329     0070                     	ds	1
   330     0071                     ??i1_Lcd_Cmd:
   331                           
   332                           ; 1 bytes @ 0x1
   333     0071                     	ds	2
   334     0073                     i1Lcd_Cmd@a:
   335                           
   336                           ; 1 bytes @ 0x3
   337     0073                     	ds	1
   338     0074                     ??_tes:
   339     0074                     ??i1_Lcd_Clear:	
   340                           ; 1 bytes @ 0x4
   341                           
   342                           
   343                           ; 1 bytes @ 0x4
   344     0074                     	ds	2
   345     0076                     ??_Lcd_Port:
   346     0076                     ??_Lcd_Clear:	
   347                           ; 1 bytes @ 0x6
   348                           
   349     0076                     ??_Lcd_Write_String:	
   350                           ; 1 bytes @ 0x6
   351                           
   352     0076                     ??_main:	
   353                           ; 1 bytes @ 0x6
   354                           
   355                           
   356                           	psect	cstackBANK0
   357     0020                     __pcstackBANK0:	
   358                           ; 1 bytes @ 0x6
   359                           
   360     0020                     Lcd_Port@a:
   361                           
   362                           ; 1 bytes @ 0x0
   363     0020                     	ds	1
   364     0021                     ??_Lcd_Cmd:
   365     0021                     ??_Lcd_Write_Char:	
   366                           ; 1 bytes @ 0x1
   367                           
   368                           
   369                           ; 1 bytes @ 0x1
   370     0021                     	ds	1
   371     0022                     Lcd_Write_Char@temp:
   372                           
   373                           ; 1 bytes @ 0x2
   374     0022                     	ds	1
   375     0023                     Lcd_Cmd@a:
   376     0023                     Lcd_Write_Char@y:	
   377                           ; 1 bytes @ 0x3
   378                           
   379                           
   380                           ; 1 bytes @ 0x3
   381     0023                     	ds	1
   382     0024                     ?_Lcd_Set_Cursor:
   383     0024                     ??_Lcd_Init:	
   384                           ; 1 bytes @ 0x4
   385                           
   386     0024                     Lcd_Set_Cursor@b:	
   387                           ; 1 bytes @ 0x4
   388                           
   389     0024                     Lcd_Write_Char@a:	
   390                           ; 1 bytes @ 0x4
   391                           
   392                           
   393                           ; 1 bytes @ 0x4
   394     0024                     	ds	1
   395     0025                     ??_Lcd_Set_Cursor:
   396     0025                     Lcd_Write_String@i:	
   397                           ; 1 bytes @ 0x5
   398                           
   399                           
   400                           ; 2 bytes @ 0x5
   401     0025                     	ds	1
   402     0026                     Lcd_Set_Cursor@a:
   403                           
   404                           ; 1 bytes @ 0x6
   405     0026                     	ds	1
   406     0027                     Lcd_Set_Cursor@z:
   407     0027                     Lcd_Write_String@a:	
   408                           ; 1 bytes @ 0x7
   409                           
   410                           
   411                           ; 1 bytes @ 0x7
   412     0027                     	ds	1
   413     0028                     Lcd_Set_Cursor@y:
   414                           
   415                           ; 1 bytes @ 0x8
   416     0028                     	ds	1
   417     0029                     Lcd_Set_Cursor@temp:
   418                           
   419                           ; 1 bytes @ 0x9
   420     0029                     	ds	1
   421                           
   422                           	psect	maintext
   423     0019                     __pmaintext:	
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 64 in file "newmain.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : B00/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   443 ;;      Params:         0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0
   446 ;;      Totals:         0       0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels required when called: 7
   449 ;; This function calls:
   450 ;;		_Lcd_Clear
   451 ;;		_Lcd_Init
   452 ;;		_Lcd_Set_Cursor
   453 ;;		_Lcd_Write_String
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459     0019                     _main:	
   460                           ;psect for function _main
   461                           
   462     0019                     l1137:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   465                           
   466                           
   467                           ;newmain.c: 65:     TRISA = 0b11111111;
   468     0019  30FF               	movlw	255
   469     001A  1683               	bsf	3,5	;RP0=1, select bank1
   470     001B  1303               	bcf	3,6	;RP1=0, select bank1
   471     001C  0085               	movwf	5	;volatile
   472                           
   473                           ;newmain.c: 66:     TRISB = 0b00000011;
   474     001D  3003               	movlw	3
   475     001E  0086               	movwf	6	;volatile
   476     001F                     l1139:
   477                           
   478                           ;newmain.c: 67:     TRISC = 0;
   479     001F  0187               	clrf	7	;volatile
   480     0020                     l1141:
   481                           
   482                           ;newmain.c: 68:     TRISD = 0;
   483     0020  0188               	clrf	8	;volatile
   484                           
   485                           ;newmain.c: 69:     OPTION_REG = 0b00111111;
   486     0021  303F               	movlw	63
   487     0022  0081               	movwf	1	;volatile
   488     0023                     l1143:
   489                           
   490                           ;newmain.c: 70:     PORTA = 0;
   491     0023  1283               	bcf	3,5	;RP0=0, select bank0
   492     0024  1303               	bcf	3,6	;RP1=0, select bank0
   493     0025  0185               	clrf	5	;volatile
   494     0026                     l1145:
   495                           
   496                           ;newmain.c: 71:     PORTB = 0;
   497     0026  0186               	clrf	6	;volatile
   498     0027                     l1147:
   499                           
   500                           ;newmain.c: 72:     PORTC = 0;
   501     0027  0187               	clrf	7	;volatile
   502     0028                     l1149:
   503                           
   504                           ;newmain.c: 73:     PORTD = 0;
   505     0028  0188               	clrf	8	;volatile
   506     0029                     l1151:
   507                           
   508                           ;newmain.c: 76:     INTCONbits.GIE = 1;
   509     0029  178B               	bsf	11,7	;volatile
   510     002A                     l1153:
   511                           
   512                           ;newmain.c: 77:     INTCONbits.PEIE = 1;
   513     002A  170B               	bsf	11,6	;volatile
   514     002B                     l1155:
   515                           
   516                           ;newmain.c: 78:     INTCONbits.INTE=1;
   517     002B  160B               	bsf	11,4	;volatile
   518     002C                     l1157:
   519                           
   520                           ;newmain.c: 116:     Lcd_Init();
   521     002C  120A  118A  20B6  120A  118A  	fcall	_Lcd_Init
   522     0031                     l1159:
   523                           
   524                           ;newmain.c: 117:     Lcd_Clear();
   525     0031  120A  118A  228A  120A  118A  	fcall	_Lcd_Clear
   526     0036                     l1161:
   527                           
   528                           ;newmain.c: 118:     Lcd_Set_Cursor(1,1);
   529     0036  1283               	bcf	3,5	;RP0=0, select bank0
   530     0037  1303               	bcf	3,6	;RP1=0, select bank0
   531     0038  01A4               	clrf	Lcd_Set_Cursor@b
   532     0039  0AA4               	incf	Lcd_Set_Cursor@b,f
   533     003A  3001               	movlw	1
   534     003B  120A  118A  2119  120A  118A  	fcall	_Lcd_Set_Cursor
   535     0040                     l1163:
   536                           
   537                           ;newmain.c: 119:     Lcd_Write_String("SIGMA DOG");
   538     0040  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   539     0041  120A  118A  219E  120A  118A  	fcall	_Lcd_Write_String
   540     0046                     l1165:
   541                           
   542                           ;newmain.c: 120:     Lcd_Set_Cursor(2,1);
   543     0046  1283               	bcf	3,5	;RP0=0, select bank0
   544     0047  1303               	bcf	3,6	;RP1=0, select bank0
   545     0048  01A4               	clrf	Lcd_Set_Cursor@b
   546     0049  0AA4               	incf	Lcd_Set_Cursor@b,f
   547     004A  3002               	movlw	2
   548     004B  120A  118A  2119  120A  118A  	fcall	_Lcd_Set_Cursor
   549     0050                     l1167:
   550                           
   551                           ;newmain.c: 121:     Lcd_Write_String("GRINDSET");
   552     0050  3019               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   553     0051  120A  118A  219E  120A  118A  	fcall	_Lcd_Write_String
   554     0056                     l1169:
   555                           
   556                           ;newmain.c: 122:     PORTDbits.RD5 = 1;
   557     0056  1283               	bcf	3,5	;RP0=0, select bank0
   558     0057  1303               	bcf	3,6	;RP1=0, select bank0
   559     0058  1688               	bsf	8,5	;volatile
   560     0059                     l1171:
   561                           
   562                           ;newmain.c: 123:     interrupcao = 0;
   563     0059  01AA               	clrf	_interrupcao
   564     005A  01AB               	clrf	_interrupcao+1
   565     005B                     l1173:
   566                           
   567                           ;newmain.c: 125:         if(interrupcao){
   568     005B  1283               	bcf	3,5	;RP0=0, select bank0
   569     005C  1303               	bcf	3,6	;RP1=0, select bank0
   570     005D  082A               	movf	_interrupcao,w
   571     005E  042B               	iorwf	_interrupcao+1,w
   572     005F  1903               	btfsc	3,2
   573     0060  2862               	goto	u511
   574     0061  2863               	goto	u510
   575     0062                     u511:
   576     0062  2864               	goto	l105
   577     0063                     u510:
   578     0063  28B3               	goto	l106
   579     0064                     l105:	
   580                           ;newmain.c: 127:         }
   581                           
   582                           
   583                           ;newmain.c: 128:         PORTDbits.RD7 = 0;
   584     0064  1388               	bcf	8,7	;volatile
   585                           
   586                           ;newmain.c: 129:         if(PORTBbits.RB1 == 0){
   587     0065  1886               	btfsc	6,1	;volatile
   588     0066  2868               	goto	u521
   589     0067  2869               	goto	u520
   590     0068                     u521:
   591     0068  285B               	goto	l1173
   592     0069                     u520:
   593     0069                     l1177:
   594                           
   595                           ;newmain.c: 130:             Lcd_Clear();
   596     0069  120A  118A  228A  120A  118A  	fcall	_Lcd_Clear
   597                           
   598                           ;newmain.c: 131:             Lcd_Set_Cursor(1,1);
   599     006E  1283               	bcf	3,5	;RP0=0, select bank0
   600     006F  1303               	bcf	3,6	;RP1=0, select bank0
   601     0070  01A4               	clrf	Lcd_Set_Cursor@b
   602     0071  0AA4               	incf	Lcd_Set_Cursor@b,f
   603     0072  3001               	movlw	1
   604     0073  120A  118A  2119  120A  118A  	fcall	_Lcd_Set_Cursor
   605     0078                     l1179:
   606                           
   607                           ;newmain.c: 132:             Lcd_Write_String("DESPEJANDO...");
   608     0078  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   609     0079  120A  118A  219E  120A  118A  	fcall	_Lcd_Write_String
   610                           
   611                           ;newmain.c: 133:             while(PORTBbits.RB1 == 0){
   612     007E  2887               	goto	l108
   613     007F                     l1181:
   614                           
   615                           ;newmain.c: 134:                 if(interrupcao){
   616     007F  082A               	movf	_interrupcao,w
   617     0080  042B               	iorwf	_interrupcao+1,w
   618     0081  1903               	btfsc	3,2
   619     0082  2884               	goto	u531
   620     0083  2885               	goto	u530
   621     0084                     u531:
   622     0084  2886               	goto	l110
   623     0085                     u530:
   624     0085  28B3               	goto	l106
   625     0086                     l110:	
   626                           ;newmain.c: 136:                 }
   627                           
   628                           
   629                           ;newmain.c: 137:                 PORTDbits.RD7 = 1;
   630     0086  1788               	bsf	8,7	;volatile
   631     0087                     l108:	
   632                           ;newmain.c: 138:             }
   633                           
   634                           
   635                           ;newmain.c: 133:             while(PORTBbits.RB1 == 0){
   636     0087  1283               	bcf	3,5	;RP0=0, select bank0
   637     0088  1303               	bcf	3,6	;RP1=0, select bank0
   638     0089  1C86               	btfss	6,1	;volatile
   639     008A  288C               	goto	u541
   640     008B  288D               	goto	u540
   641     008C                     u541:
   642     008C  287F               	goto	l1181
   643     008D                     u540:
   644     008D                     l1185:
   645                           
   646                           ;newmain.c: 139:             Lcd_Clear();
   647     008D  120A  118A  228A  120A  118A  	fcall	_Lcd_Clear
   648                           
   649                           ;newmain.c: 140:             Lcd_Set_Cursor(1,1);
   650     0092  1283               	bcf	3,5	;RP0=0, select bank0
   651     0093  1303               	bcf	3,6	;RP1=0, select bank0
   652     0094  01A4               	clrf	Lcd_Set_Cursor@b
   653     0095  0AA4               	incf	Lcd_Set_Cursor@b,f
   654     0096  3001               	movlw	1
   655     0097  120A  118A  2119  120A  118A  	fcall	_Lcd_Set_Cursor
   656     009C                     l1187:
   657                           
   658                           ;newmain.c: 141:             Lcd_Write_String("SIGMA DOG");
   659     009C  300F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   660     009D  120A  118A  219E  120A  118A  	fcall	_Lcd_Write_String
   661     00A2                     l1189:
   662                           
   663                           ;newmain.c: 142:             Lcd_Set_Cursor(2,1);
   664     00A2  1283               	bcf	3,5	;RP0=0, select bank0
   665     00A3  1303               	bcf	3,6	;RP1=0, select bank0
   666     00A4  01A4               	clrf	Lcd_Set_Cursor@b
   667     00A5  0AA4               	incf	Lcd_Set_Cursor@b,f
   668     00A6  3002               	movlw	2
   669     00A7  120A  118A  2119  120A  118A  	fcall	_Lcd_Set_Cursor
   670                           
   671                           ;newmain.c: 143:             Lcd_Write_String("GRINDSET");
   672     00AC  3019               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   673     00AD  120A  118A  219E  120A  118A  	fcall	_Lcd_Write_String
   674     00B2  285B               	goto	l1173
   675     00B3                     l106:
   676     00B3  120A  118A  280C   	ljmp	start
   677     00B6                     __end_of_main:
   678                           
   679                           	psect	text1
   680     019E                     __ptext1:	
   681 ;; *************** function _Lcd_Write_String *****************
   682 ;; Defined at:
   683 ;;		line 96 in file "./LCD.h"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  a               1    wreg     PTR unsigned char 
   686 ;;		 -> STR_5(9), STR_4(10), STR_3(14), STR_2(9), 
   687 ;;		 -> STR_1(10), 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  a               1    7[BANK0 ] PTR unsigned char 
   690 ;;		 -> STR_5(9), STR_4(10), STR_3(14), STR_2(9), 
   691 ;;		 -> STR_1(10), 
   692 ;;  i               2    5[BANK0 ] int 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       3       0       0       0
   704 ;;      Temps:          0       0       0       0       0
   705 ;;      Totals:         0       3       0       0       0
   706 ;;Total ram usage:        3 bytes
   707 ;; Hardware stack levels used: 1
   708 ;; Hardware stack levels required when called: 6
   709 ;; This function calls:
   710 ;;		_Lcd_Write_Char
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716     019E                     _Lcd_Write_String:	
   717                           ;psect for function _Lcd_Write_String
   718                           
   719                           
   720                           ;incstack = 0
   721                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   722                           ;Lcd_Write_String@a stored from wreg
   723     019E  1283               	bcf	3,5	;RP0=0, select bank0
   724     019F  1303               	bcf	3,6	;RP1=0, select bank0
   725     01A0  00A7               	movwf	Lcd_Write_String@a
   726     01A1                     l1125:
   727                           
   728                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
   729     01A1  01A5               	clrf	Lcd_Write_String@i
   730     01A2  01A6               	clrf	Lcd_Write_String@i+1
   731     01A3  29B9               	goto	l1131
   732     01A4                     l1127:
   733                           
   734                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
   735     01A4  0825               	movf	Lcd_Write_String@i,w
   736     01A5  0727               	addwf	Lcd_Write_String@a,w
   737     01A6  0084               	movwf	4
   738     01A7  120A  118A  21C7  120A  118A  	fcall	stringdir
   739     01AC  120A  118A  2165  120A  118A  	fcall	_Lcd_Write_Char
   740     01B1                     l1129:
   741     01B1  3001               	movlw	1
   742     01B2  1283               	bcf	3,5	;RP0=0, select bank0
   743     01B3  1303               	bcf	3,6	;RP1=0, select bank0
   744     01B4  07A5               	addwf	Lcd_Write_String@i,f
   745     01B5  1803               	skipnc
   746     01B6  0AA6               	incf	Lcd_Write_String@i+1,f
   747     01B7  3000               	movlw	0
   748     01B8  07A6               	addwf	Lcd_Write_String@i+1,f
   749     01B9                     l1131:
   750     01B9  0825               	movf	Lcd_Write_String@i,w
   751     01BA  0727               	addwf	Lcd_Write_String@a,w
   752     01BB  0084               	movwf	4
   753     01BC  120A  118A  21C7  120A  118A  	fcall	stringdir
   754     01C1  3A00               	xorlw	0
   755     01C2  1D03               	skipz
   756     01C3  29C5               	goto	u501
   757     01C4  29C6               	goto	u500
   758     01C5                     u501:
   759     01C5  29A4               	goto	l1127
   760     01C6                     u500:
   761     01C6                     l81:
   762     01C6  0008               	return
   763     01C7                     __end_of_Lcd_Write_String:
   764                           
   765                           	psect	text2
   766     0165                     __ptext2:	
   767 ;; *************** function _Lcd_Write_Char *****************
   768 ;; Defined at:
   769 ;;		line 80 in file "./LCD.h"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  a               1    wreg     unsigned char 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  a               1    4[BANK0 ] unsigned char 
   774 ;;  y               1    3[BANK0 ] unsigned char 
   775 ;;  temp            1    2[BANK0 ] unsigned char 
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, pclath, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       3       0       0       0
   787 ;;      Temps:          0       1       0       0       0
   788 ;;      Totals:         0       4       0       0       0
   789 ;;Total ram usage:        4 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 5
   792 ;; This function calls:
   793 ;;		_Lcd_Port
   794 ;; This function is called by:
   795 ;;		_Lcd_Write_String
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799     0165                     _Lcd_Write_Char:	
   800                           ;psect for function _Lcd_Write_Char
   801                           
   802                           
   803                           ;incstack = 0
   804                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   805                           ;Lcd_Write_Char@a stored from wreg
   806     0165  1283               	bcf	3,5	;RP0=0, select bank0
   807     0166  1303               	bcf	3,6	;RP1=0, select bank0
   808     0167  00A4               	movwf	Lcd_Write_Char@a
   809     0168                     l1073:
   810                           
   811                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
   812     0168  0824               	movf	Lcd_Write_Char@a,w
   813     0169  390F               	andlw	15
   814     016A  00A2               	movwf	Lcd_Write_Char@temp
   815                           
   816                           ;./LCD.h: 84:    y = a&0xF0;
   817     016B  0824               	movf	Lcd_Write_Char@a,w
   818     016C  39F0               	andlw	240
   819     016D  00A3               	movwf	Lcd_Write_Char@y
   820     016E                     l1075:
   821                           
   822                           ;./LCD.h: 85:    RC0 = 1;
   823     016E  1407               	bsf	7,0	;volatile
   824     016F                     l1077:
   825                           
   826                           ;./LCD.h: 86:    Lcd_Port(y>>4);
   827     016F  0823               	movf	Lcd_Write_Char@y,w
   828     0170  00A1               	movwf	??_Lcd_Write_Char
   829     0171  3004               	movlw	4
   830     0172                     u455:
   831     0172  1003               	clrc
   832     0173  0CA1               	rrf	??_Lcd_Write_Char,f
   833     0174  3EFF               	addlw	-1
   834     0175  1D03               	skipz
   835     0176  2972               	goto	u455
   836     0177  0821               	movf	??_Lcd_Write_Char,w
   837     0178  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
   838     017D                     l1079:
   839                           
   840                           ;./LCD.h: 87:    RC2 = 1;
   841     017D  1283               	bcf	3,5	;RP0=0, select bank0
   842     017E  1303               	bcf	3,6	;RP1=0, select bank0
   843     017F  1507               	bsf	7,2	;volatile
   844     0180                     l1081:
   845                           
   846                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   847     0180  300C               	movlw	12
   848     0181  1283               	bcf	3,5	;RP0=0, select bank0
   849     0182  1303               	bcf	3,6	;RP1=0, select bank0
   850     0183  00A1               	movwf	??_Lcd_Write_Char
   851     0184                     u557:
   852     0184  0BA1               	decfsz	??_Lcd_Write_Char,f
   853     0185  2984               	goto	u557
   854     0186  0000               	nop
   855     0187                     l1083:
   856                           
   857                           ;./LCD.h: 89:    RC2 = 0;
   858     0187  1283               	bcf	3,5	;RP0=0, select bank0
   859     0188  1303               	bcf	3,6	;RP1=0, select bank0
   860     0189  1107               	bcf	7,2	;volatile
   861     018A                     l1085:
   862                           
   863                           ;./LCD.h: 90:    Lcd_Port(temp);
   864     018A  0822               	movf	Lcd_Write_Char@temp,w
   865     018B  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
   866     0190                     l1087:
   867                           
   868                           ;./LCD.h: 91:    RC2 = 1;
   869     0190  1283               	bcf	3,5	;RP0=0, select bank0
   870     0191  1303               	bcf	3,6	;RP1=0, select bank0
   871     0192  1507               	bsf	7,2	;volatile
   872     0193                     l1089:
   873                           
   874                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   875     0193  300C               	movlw	12
   876     0194  1283               	bcf	3,5	;RP0=0, select bank0
   877     0195  1303               	bcf	3,6	;RP1=0, select bank0
   878     0196  00A1               	movwf	??_Lcd_Write_Char
   879     0197                     u567:
   880     0197  0BA1               	decfsz	??_Lcd_Write_Char,f
   881     0198  2997               	goto	u567
   882     0199  0000               	nop
   883     019A                     l1091:
   884                           
   885                           ;./LCD.h: 93:    RC2 = 0;
   886     019A  1283               	bcf	3,5	;RP0=0, select bank0
   887     019B  1303               	bcf	3,6	;RP1=0, select bank0
   888     019C  1107               	bcf	7,2	;volatile
   889     019D                     l75:
   890     019D  0008               	return
   891     019E                     __end_of_Lcd_Write_Char:
   892                           
   893                           	psect	text3
   894     0119                     __ptext3:	
   895 ;; *************** function _Lcd_Set_Cursor *****************
   896 ;; Defined at:
   897 ;;		line 40 in file "./LCD.h"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  a               1    wreg     unsigned char 
   900 ;;  b               1    4[BANK0 ] unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  a               1    6[BANK0 ] unsigned char 
   903 ;;  temp            1    9[BANK0 ] unsigned char 
   904 ;;  y               1    8[BANK0 ] unsigned char 
   905 ;;  z               1    7[BANK0 ] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, pclath, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       1       0       0       0
   916 ;;      Locals:         0       4       0       0       0
   917 ;;      Temps:          0       1       0       0       0
   918 ;;      Totals:         0       6       0       0       0
   919 ;;Total ram usage:        6 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 6
   922 ;; This function calls:
   923 ;;		_Lcd_Cmd
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     0119                     _Lcd_Set_Cursor:	
   930                           ;psect for function _Lcd_Set_Cursor
   931                           
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   935                           ;Lcd_Set_Cursor@a stored from wreg
   936     0119  1283               	bcf	3,5	;RP0=0, select bank0
   937     011A  1303               	bcf	3,6	;RP1=0, select bank0
   938     011B  00A6               	movwf	Lcd_Set_Cursor@a
   939     011C                     l1095:
   940                           
   941                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
   942     011C  0326               	decf	Lcd_Set_Cursor@a,w
   943     011D  1D03               	btfss	3,2
   944     011E  2920               	goto	u461
   945     011F  2921               	goto	u460
   946     0120                     u461:
   947     0120  2940               	goto	l1105
   948     0121                     u460:
   949     0121                     l1097:
   950                           
   951                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
   952     0121  0824               	movf	Lcd_Set_Cursor@b,w
   953     0122  3E7F               	addlw	127
   954     0123  00A9               	movwf	Lcd_Set_Cursor@temp
   955                           
   956                           ;./LCD.h: 46:   z = temp>>4;
   957     0124  0829               	movf	Lcd_Set_Cursor@temp,w
   958     0125  00A5               	movwf	??_Lcd_Set_Cursor
   959     0126  3004               	movlw	4
   960     0127                     u475:
   961     0127  1003               	clrc
   962     0128  0CA5               	rrf	??_Lcd_Set_Cursor,f
   963     0129  3EFF               	addlw	-1
   964     012A  1D03               	skipz
   965     012B  2927               	goto	u475
   966     012C  0825               	movf	??_Lcd_Set_Cursor,w
   967     012D  00A7               	movwf	Lcd_Set_Cursor@z
   968     012E                     l1099:
   969                           
   970                           ;./LCD.h: 47:   y = temp & 0x0F;
   971     012E  0829               	movf	Lcd_Set_Cursor@temp,w
   972     012F  390F               	andlw	15
   973     0130  00A8               	movwf	Lcd_Set_Cursor@y
   974     0131                     l1101:
   975                           
   976                           ;./LCD.h: 48:   Lcd_Cmd(z);
   977     0131  0827               	movf	Lcd_Set_Cursor@z,w
   978     0132  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
   979     0137                     l1103:
   980                           
   981                           ;./LCD.h: 49:   Lcd_Cmd(y);
   982     0137  1283               	bcf	3,5	;RP0=0, select bank0
   983     0138  1303               	bcf	3,6	;RP1=0, select bank0
   984     0139  0828               	movf	Lcd_Set_Cursor@y,w
   985     013A  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
   986                           
   987                           ;./LCD.h: 50:  }
   988     013F  2964               	goto	l69
   989     0140                     l1105:
   990     0140  3002               	movlw	2
   991     0141  0626               	xorwf	Lcd_Set_Cursor@a,w
   992     0142  1D03               	btfss	3,2
   993     0143  2945               	goto	u481
   994     0144  2946               	goto	u480
   995     0145                     u481:
   996     0145  2964               	goto	l69
   997     0146                     u480:
   998     0146                     l1107:
   999                           
  1000                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1001     0146  0824               	movf	Lcd_Set_Cursor@b,w
  1002     0147  3EBF               	addlw	191
  1003     0148  00A9               	movwf	Lcd_Set_Cursor@temp
  1004                           
  1005                           ;./LCD.h: 54:   z = temp>>4;
  1006     0149  0829               	movf	Lcd_Set_Cursor@temp,w
  1007     014A  00A5               	movwf	??_Lcd_Set_Cursor
  1008     014B  3004               	movlw	4
  1009     014C                     u495:
  1010     014C  1003               	clrc
  1011     014D  0CA5               	rrf	??_Lcd_Set_Cursor,f
  1012     014E  3EFF               	addlw	-1
  1013     014F  1D03               	skipz
  1014     0150  294C               	goto	u495
  1015     0151  0825               	movf	??_Lcd_Set_Cursor,w
  1016     0152  00A7               	movwf	Lcd_Set_Cursor@z
  1017     0153                     l1109:
  1018                           
  1019                           ;./LCD.h: 55:   y = temp & 0x0F;
  1020     0153  0829               	movf	Lcd_Set_Cursor@temp,w
  1021     0154  390F               	andlw	15
  1022     0155  00A8               	movwf	Lcd_Set_Cursor@y
  1023     0156                     l1111:
  1024                           
  1025                           ;./LCD.h: 56:   Lcd_Cmd(z);
  1026     0156  0827               	movf	Lcd_Set_Cursor@z,w
  1027     0157  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1028     015C                     l1113:
  1029                           
  1030                           ;./LCD.h: 57:   Lcd_Cmd(y);
  1031     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1032     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1033     015E  0828               	movf	Lcd_Set_Cursor@y,w
  1034     015F  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1035     0164                     l69:
  1036     0164  0008               	return
  1037     0165                     __end_of_Lcd_Set_Cursor:
  1038                           
  1039                           	psect	text4
  1040     00B6                     __ptext4:	
  1041 ;; *************** function _Lcd_Init *****************
  1042 ;; Defined at:
  1043 ;;		line 61 in file "./LCD.h"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0
  1059 ;;      Temps:          0       2       0       0       0
  1060 ;;      Totals:         0       2       0       0       0
  1061 ;;Total ram usage:        2 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 6
  1064 ;; This function calls:
  1065 ;;		_Lcd_Cmd
  1066 ;;		_Lcd_Port
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072     00B6                     _Lcd_Init:	
  1073                           ;psect for function _Lcd_Init
  1074                           
  1075     00B6                     l1115:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1078                           
  1079                           
  1080                           ;./LCD.h: 63:   Lcd_Port(0x00);
  1081     00B6  3000               	movlw	0
  1082     00B7  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  1083     00BC                     l1117:
  1084                           
  1085                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1086     00BC  301A               	movlw	26
  1087     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1088     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1089     00BF  00A5               	movwf	??_Lcd_Init+1
  1090     00C0  30F7               	movlw	247
  1091     00C1  00A4               	movwf	??_Lcd_Init
  1092     00C2                     u577:
  1093     00C2  0BA4               	decfsz	??_Lcd_Init,f
  1094     00C3  28C2               	goto	u577
  1095     00C4  0BA5               	decfsz	??_Lcd_Init+1,f
  1096     00C5  28C2               	goto	u577
  1097     00C6  28C7               	nop2
  1098     00C7                     l1119:
  1099                           
  1100                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  1101     00C7  3003               	movlw	3
  1102     00C8  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1103                           
  1104                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1105     00CD  3007               	movlw	7
  1106     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1107     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1108     00D0  00A5               	movwf	??_Lcd_Init+1
  1109     00D1  307C               	movlw	124
  1110     00D2  00A4               	movwf	??_Lcd_Init
  1111     00D3                     u587:
  1112     00D3  0BA4               	decfsz	??_Lcd_Init,f
  1113     00D4  28D3               	goto	u587
  1114     00D5  0BA5               	decfsz	??_Lcd_Init+1,f
  1115     00D6  28D3               	goto	u587
  1116     00D7  0000               	nop
  1117     00D8                     l1121:
  1118                           
  1119                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  1120     00D8  3003               	movlw	3
  1121     00D9  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1122     00DE                     l1123:
  1123                           
  1124                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1125     00DE  300F               	movlw	15
  1126     00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1127     00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1128     00E1  00A5               	movwf	??_Lcd_Init+1
  1129     00E2  3047               	movlw	71
  1130     00E3  00A4               	movwf	??_Lcd_Init
  1131     00E4                     u597:
  1132     00E4  0BA4               	decfsz	??_Lcd_Init,f
  1133     00E5  28E4               	goto	u597
  1134     00E6  0BA5               	decfsz	??_Lcd_Init+1,f
  1135     00E7  28E4               	goto	u597
  1136                           
  1137                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  1138     00E8  3003               	movlw	3
  1139     00E9  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1140                           
  1141                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  1142     00EE  3002               	movlw	2
  1143     00EF  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1144                           
  1145                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  1146     00F4  3002               	movlw	2
  1147     00F5  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1148                           
  1149                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  1150     00FA  3008               	movlw	8
  1151     00FB  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1152                           
  1153                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  1154     0100  3000               	movlw	0
  1155     0101  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1156                           
  1157                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  1158     0106  300C               	movlw	12
  1159     0107  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1160                           
  1161                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  1162     010C  3000               	movlw	0
  1163     010D  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1164                           
  1165                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  1166     0112  3006               	movlw	6
  1167     0113  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1168     0118                     l72:
  1169     0118  0008               	return
  1170     0119                     __end_of_Lcd_Init:
  1171                           
  1172                           	psect	text5
  1173     028A                     __ptext5:	
  1174 ;; *************** function _Lcd_Clear *****************
  1175 ;; Defined at:
  1176 ;;		line 34 in file "./LCD.h"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, pclath, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       0       0       0       0
  1191 ;;      Locals:         0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0
  1193 ;;      Totals:         0       0       0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 6
  1197 ;; This function calls:
  1198 ;;		_Lcd_Cmd
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204     028A                     _Lcd_Clear:	
  1205                           ;psect for function _Lcd_Clear
  1206                           
  1207     028A                     l1093:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1210                           
  1211                           
  1212                           ;./LCD.h: 36:  Lcd_Cmd(0);
  1213     028A  3000               	movlw	0
  1214     028B  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1215                           
  1216                           ;./LCD.h: 37:  Lcd_Cmd(1);
  1217     0290  3001               	movlw	1
  1218     0291  120A  118A  2254  120A  118A  	fcall	_Lcd_Cmd
  1219     0296                     l63:
  1220     0296  0008               	return
  1221     0297                     __end_of_Lcd_Clear:
  1222                           
  1223                           	psect	text6
  1224     0254                     __ptext6:	
  1225 ;; *************** function _Lcd_Cmd *****************
  1226 ;; Defined at:
  1227 ;;		line 25 in file "./LCD.h"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  a               1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  a               1    3[BANK0 ] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       1       0       0       0
  1243 ;;      Temps:          0       2       0       0       0
  1244 ;;      Totals:         0       3       0       0       0
  1245 ;;Total ram usage:        3 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 5
  1248 ;; This function calls:
  1249 ;;		_Lcd_Port
  1250 ;; This function is called by:
  1251 ;;		_Lcd_Clear
  1252 ;;		_Lcd_Set_Cursor
  1253 ;;		_Lcd_Init
  1254 ;;		_Lcd_Shift_Right
  1255 ;;		_Lcd_Shift_Left
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259     0254                     _Lcd_Cmd:	
  1260                           ;psect for function _Lcd_Cmd
  1261                           
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1265                           ;Lcd_Cmd@a stored from wreg
  1266     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1267     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1268     0256  00A3               	movwf	Lcd_Cmd@a
  1269     0257                     l1063:
  1270                           
  1271                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  1272     0257  1007               	bcf	7,0	;volatile
  1273     0258                     l1065:
  1274                           
  1275                           ;./LCD.h: 28:  Lcd_Port(a);
  1276     0258  0823               	movf	Lcd_Cmd@a,w
  1277     0259  120A  118A  2234  120A  118A  	fcall	_Lcd_Port
  1278     025E                     l1067:
  1279                           
  1280                           ;./LCD.h: 29:  RC2 = 1;
  1281     025E  1283               	bcf	3,5	;RP0=0, select bank0
  1282     025F  1303               	bcf	3,6	;RP1=0, select bank0
  1283     0260  1507               	bsf	7,2	;volatile
  1284     0261                     l1069:
  1285                           
  1286                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1287     0261  3006               	movlw	6
  1288     0262  1283               	bcf	3,5	;RP0=0, select bank0
  1289     0263  1303               	bcf	3,6	;RP1=0, select bank0
  1290     0264  00A2               	movwf	??_Lcd_Cmd+1
  1291     0265  302F               	movlw	47
  1292     0266  00A1               	movwf	??_Lcd_Cmd
  1293     0267                     u607:
  1294     0267  0BA1               	decfsz	??_Lcd_Cmd,f
  1295     0268  2A67               	goto	u607
  1296     0269  0BA2               	decfsz	??_Lcd_Cmd+1,f
  1297     026A  2A67               	goto	u607
  1298     026B  2A6C               	nop2
  1299     026C                     l1071:
  1300                           
  1301                           ;./LCD.h: 31:         RC2 = 0;
  1302     026C  1283               	bcf	3,5	;RP0=0, select bank0
  1303     026D  1303               	bcf	3,6	;RP1=0, select bank0
  1304     026E  1107               	bcf	7,2	;volatile
  1305     026F                     l60:
  1306     026F  0008               	return
  1307     0270                     __end_of_Lcd_Cmd:
  1308                           
  1309                           	psect	text7
  1310     0234                     __ptext7:	
  1311 ;; *************** function _Lcd_Port *****************
  1312 ;; Defined at:
  1313 ;;		line 3 in file "./LCD.h"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  a               1    wreg     unsigned char 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  a               1    0[BANK0 ] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       1       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       1       0       0       0
  1331 ;;Total ram usage:        1 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 4
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_Lcd_Cmd
  1338 ;;		_Lcd_Init
  1339 ;;		_Lcd_Write_Char
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343     0234                     _Lcd_Port:	
  1344                           ;psect for function _Lcd_Port
  1345                           
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in _Lcd_Port: [wreg]
  1349                           ;Lcd_Port@a stored from wreg
  1350     0234  1283               	bcf	3,5	;RP0=0, select bank0
  1351     0235  1303               	bcf	3,6	;RP1=0, select bank0
  1352     0236  00A0               	movwf	Lcd_Port@a
  1353     0237                     l1053:
  1354                           
  1355                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  1356     0237  1C20               	btfss	Lcd_Port@a,0
  1357     0238  2A3A               	goto	u411
  1358     0239  2A3B               	goto	u410
  1359     023A                     u411:
  1360     023A  2A3D               	goto	l49
  1361     023B                     u410:
  1362     023B                     l1055:
  1363                           
  1364                           ;./LCD.h: 6:   RC4 = 1;
  1365     023B  1607               	bsf	7,4	;volatile
  1366     023C  2A3E               	goto	l50
  1367     023D                     l49:	
  1368                           ;./LCD.h: 7:  else
  1369                           
  1370                           
  1371                           ;./LCD.h: 8:   RC4 = 0;
  1372     023D  1207               	bcf	7,4	;volatile
  1373     023E                     l50:
  1374                           
  1375                           ;./LCD.h: 10:  if(a & 2)
  1376     023E  1CA0               	btfss	Lcd_Port@a,1
  1377     023F  2A41               	goto	u421
  1378     0240  2A42               	goto	u420
  1379     0241                     u421:
  1380     0241  2A44               	goto	l51
  1381     0242                     u420:
  1382     0242                     l1057:
  1383                           
  1384                           ;./LCD.h: 11:   RC5 = 1;
  1385     0242  1687               	bsf	7,5	;volatile
  1386     0243  2A45               	goto	l52
  1387     0244                     l51:	
  1388                           ;./LCD.h: 12:  else
  1389                           
  1390                           
  1391                           ;./LCD.h: 13:   RC5 = 0;
  1392     0244  1287               	bcf	7,5	;volatile
  1393     0245                     l52:
  1394                           
  1395                           ;./LCD.h: 15:  if(a & 4)
  1396     0245  1D20               	btfss	Lcd_Port@a,2
  1397     0246  2A48               	goto	u431
  1398     0247  2A49               	goto	u430
  1399     0248                     u431:
  1400     0248  2A4B               	goto	l53
  1401     0249                     u430:
  1402     0249                     l1059:
  1403                           
  1404                           ;./LCD.h: 16:   RC6 = 1;
  1405     0249  1707               	bsf	7,6	;volatile
  1406     024A  2A4C               	goto	l54
  1407     024B                     l53:	
  1408                           ;./LCD.h: 17:  else
  1409                           
  1410                           
  1411                           ;./LCD.h: 18:   RC6 = 0;
  1412     024B  1307               	bcf	7,6	;volatile
  1413     024C                     l54:
  1414                           
  1415                           ;./LCD.h: 20:  if(a & 8)
  1416     024C  1DA0               	btfss	Lcd_Port@a,3
  1417     024D  2A4F               	goto	u441
  1418     024E  2A50               	goto	u440
  1419     024F                     u441:
  1420     024F  2A52               	goto	l55
  1421     0250                     u440:
  1422     0250                     l1061:
  1423                           
  1424                           ;./LCD.h: 21:   RC7 = 1;
  1425     0250  1787               	bsf	7,7	;volatile
  1426     0251  2A53               	goto	l57
  1427     0252                     l55:	
  1428                           ;./LCD.h: 22:  else
  1429                           
  1430                           
  1431                           ;./LCD.h: 23:   RC7 = 0;
  1432     0252  1387               	bcf	7,7	;volatile
  1433     0253                     l57:
  1434     0253  0008               	return
  1435     0254                     __end_of_Lcd_Port:
  1436                           
  1437                           	psect	text8
  1438     01EE                     __ptext8:	
  1439 ;; *************** function _tes *****************
  1440 ;; Defined at:
  1441 ;;		line 44 in file "newmain.c"
  1442 ;; Parameters:    Size  Location     Type
  1443 ;;		None
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;		None
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      void 
  1448 ;; Registers used:
  1449 ;;		wreg, status,2, status,0, pclath, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1455 ;;      Params:         0       0       0       0       0
  1456 ;;      Locals:         0       0       0       0       0
  1457 ;;      Temps:          2       0       0       0       0
  1458 ;;      Totals:         2       0       0       0       0
  1459 ;;Total ram usage:        2 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 3
  1462 ;; This function calls:
  1463 ;;		i1_Lcd_Clear
  1464 ;; This function is called by:
  1465 ;;		Interrupt level 1
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     01EE                     _tes:	
  1470                           ;psect for function _tes
  1471                           
  1472     01EE                     i1l985:
  1473                           
  1474                           ;newmain.c: 45:     if(TMR1IF){
  1475     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1476     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1477     01F0  1C0C               	btfss	12,0	;volatile
  1478     01F1  29F3               	goto	u35_21
  1479     01F2  29F4               	goto	u35_20
  1480     01F3                     u35_21:
  1481     01F3  29FA               	goto	i1l96
  1482     01F4                     u35_20:
  1483     01F4                     i1l987:
  1484                           
  1485                           ;newmain.c: 46:         PIR1bits.TMR1IF = 0;
  1486     01F4  100C               	bcf	12,0	;volatile
  1487     01F5                     i1l989:
  1488                           
  1489                           ;newmain.c: 47:         TMR1L = 0xDC;
  1490     01F5  30DC               	movlw	220
  1491     01F6  008E               	movwf	14	;volatile
  1492                           
  1493                           ;newmain.c: 48:         TMR1H = 0x0B;
  1494     01F7  300B               	movlw	11
  1495     01F8  008F               	movwf	15	;volatile
  1496                           
  1497                           ;newmain.c: 49:     }
  1498     01F9  2A0B               	goto	i1l99
  1499     01FA                     i1l96:	
  1500                           ;newmain.c: 50:     else if (INTCONbits.INTF)
  1501                           
  1502     01FA  1C8B               	btfss	11,1	;volatile
  1503     01FB  29FD               	goto	u36_21
  1504     01FC  29FE               	goto	u36_20
  1505     01FD                     u36_21:
  1506     01FD  2A0B               	goto	i1l99
  1507     01FE                     u36_20:
  1508     01FE                     i1l991:
  1509                           
  1510                           ;newmain.c: 51:     {;newmain.c: 55:         INTCONbits.INTF = 0;
  1511     01FE  108B               	bcf	11,1	;volatile
  1512                           
  1513                           ;newmain.c: 56:         PORTDbits.RD7 = 0;
  1514     01FF  1388               	bcf	8,7	;volatile
  1515     0200                     i1l993:
  1516                           
  1517                           ;newmain.c: 57:         Lcd_Clear();
  1518     0200  120A  118A  2297  120A  118A  	fcall	i1_Lcd_Clear
  1519     0205                     i1l995:
  1520                           
  1521                           ;newmain.c: 58:         interrupcao = 1;
  1522     0205  3001               	movlw	1
  1523     0206  1283               	bcf	3,5	;RP0=0, select bank0
  1524     0207  1303               	bcf	3,6	;RP1=0, select bank0
  1525     0208  00AA               	movwf	_interrupcao
  1526     0209  3000               	movlw	0
  1527     020A  00AB               	movwf	_interrupcao+1
  1528     020B                     i1l99:
  1529     020B  0875               	movf	??_tes+1,w
  1530     020C  008A               	movwf	10
  1531     020D  0E74               	swapf	??_tes,w
  1532     020E  0083               	movwf	3
  1533     020F  0EFE               	swapf	btemp,f
  1534     0210  0E7E               	swapf	btemp,w
  1535     0211  0009               	retfie
  1536     0212                     __end_of_tes:
  1537                           
  1538                           	psect	intentry
  1539     0004                     __pintentry:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _tes: [wreg+status,2+status,0+pclath+cstack]
  1542                           
  1543     0004                     interrupt_function:
  1544     007E                     saved_w	set	btemp
  1545     0004  00FE               	movwf	btemp
  1546     0005  0E03               	swapf	3,w
  1547     0006  00F4               	movwf	??_tes
  1548     0007  080A               	movf	10,w
  1549     0008  00F5               	movwf	??_tes+1
  1550     0009  120A  118A  29EE   	ljmp	_tes
  1551                           
  1552                           	psect	text9
  1553     0297                     __ptext9:	
  1554 ;; *************** function i1_Lcd_Clear *****************
  1555 ;; Defined at:
  1556 ;;		line 34 in file "./LCD.h"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0
  1573 ;;      Totals:         0       0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 2
  1577 ;; This function calls:
  1578 ;;		i1_Lcd_Cmd
  1579 ;; This function is called by:
  1580 ;;		_tes
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584     0297                     i1_Lcd_Clear:	
  1585                           ;psect for function i1_Lcd_Clear
  1586                           
  1587     0297                     i1l979:	
  1588                           ;incstack = 0
  1589                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1590                           
  1591                           
  1592                           ;./LCD.h: 36:  Lcd_Cmd(0);
  1593     0297  3000               	movlw	0
  1594     0298  120A  118A  2270  120A  118A  	fcall	i1_Lcd_Cmd
  1595                           
  1596                           ;./LCD.h: 37:  Lcd_Cmd(1);
  1597     029D  3001               	movlw	1
  1598     029E  120A  118A  2270  120A  118A  	fcall	i1_Lcd_Cmd
  1599     02A3                     i1l63:
  1600     02A3  0008               	return
  1601     02A4                     __end_ofi1_Lcd_Clear:
  1602                           
  1603                           	psect	text10
  1604     0270                     __ptext10:	
  1605 ;; *************** function i1_Lcd_Cmd *****************
  1606 ;; Defined at:
  1607 ;;		line 25 in file "./LCD.h"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  a               1    wreg     unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  a               1    3[COMMON] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, pclath, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1621 ;;      Params:         0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0
  1623 ;;      Temps:          2       0       0       0       0
  1624 ;;      Totals:         3       0       0       0       0
  1625 ;;Total ram usage:        3 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 1
  1628 ;; This function calls:
  1629 ;;		i1_Lcd_Port
  1630 ;; This function is called by:
  1631 ;;		i1_Lcd_Clear
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635     0270                     i1_Lcd_Cmd:	
  1636                           ;psect for function i1_Lcd_Cmd
  1637                           
  1638                           
  1639                           ;incstack = 0
  1640                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1641                           ;i1Lcd_Cmd@a stored from wreg
  1642     0270  00F3               	movwf	i1Lcd_Cmd@a
  1643     0271                     i1l929:
  1644                           
  1645                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  1646     0271  1283               	bcf	3,5	;RP0=0, select bank0
  1647     0272  1303               	bcf	3,6	;RP1=0, select bank0
  1648     0273  1007               	bcf	7,0	;volatile
  1649     0274                     i1l931:
  1650                           
  1651                           ;./LCD.h: 28:  Lcd_Port(a);
  1652     0274  0873               	movf	i1Lcd_Cmd@a,w
  1653     0275  120A  118A  2212  120A  118A  	fcall	i1_Lcd_Port
  1654     027A                     i1l933:
  1655                           
  1656                           ;./LCD.h: 29:  RC2 = 1;
  1657     027A  1283               	bcf	3,5	;RP0=0, select bank0
  1658     027B  1303               	bcf	3,6	;RP1=0, select bank0
  1659     027C  1507               	bsf	7,2	;volatile
  1660     027D                     i1l935:
  1661                           
  1662                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1663     027D  3006               	movlw	6
  1664     027E  00F2               	movwf	??i1_Lcd_Cmd+1
  1665     027F  3030               	movlw	48
  1666     0280  00F1               	movwf	??i1_Lcd_Cmd
  1667     0281                     u61_27:
  1668     0281  0BF1               	decfsz	??i1_Lcd_Cmd,f
  1669     0282  2A81               	goto	u61_27
  1670     0283  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  1671     0284  2A81               	goto	u61_27
  1672     0285  0000               	nop
  1673     0286                     i1l937:
  1674                           
  1675                           ;./LCD.h: 31:         RC2 = 0;
  1676     0286  1283               	bcf	3,5	;RP0=0, select bank0
  1677     0287  1303               	bcf	3,6	;RP1=0, select bank0
  1678     0288  1107               	bcf	7,2	;volatile
  1679     0289                     i1l60:
  1680     0289  0008               	return
  1681     028A                     __end_ofi1_Lcd_Cmd:
  1682                           
  1683                           	psect	text11
  1684     0212                     __ptext11:	
  1685 ;; *************** function i1_Lcd_Port *****************
  1686 ;; Defined at:
  1687 ;;		line 3 in file "./LCD.h"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  a               1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  a               1    0[COMMON] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0
  1704 ;;      Totals:         1       0       0       0       0
  1705 ;;Total ram usage:        1 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		i1_Lcd_Cmd
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714     0212                     i1_Lcd_Port:	
  1715                           ;psect for function i1_Lcd_Port
  1716                           
  1717                           
  1718                           ;incstack = 0
  1719                           ; Regs used in i1_Lcd_Port: [wreg]
  1720                           ;i1Lcd_Port@a stored from wreg
  1721     0212  00F0               	movwf	i1Lcd_Port@a
  1722     0213                     i1l889:
  1723                           
  1724                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  1725     0213  1C70               	btfss	i1Lcd_Port@a,0
  1726     0214  2A16               	goto	u25_21
  1727     0215  2A17               	goto	u25_20
  1728     0216                     u25_21:
  1729     0216  2A1B               	goto	i1l49
  1730     0217                     u25_20:
  1731     0217                     i1l891:
  1732                           
  1733                           ;./LCD.h: 6:   RC4 = 1;
  1734     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1735     0218  1303               	bcf	3,6	;RP1=0, select bank0
  1736     0219  1607               	bsf	7,4	;volatile
  1737     021A  2A1E               	goto	i1l50
  1738     021B                     i1l49:	
  1739                           ;./LCD.h: 7:  else
  1740                           
  1741                           
  1742                           ;./LCD.h: 8:   RC4 = 0;
  1743     021B  1283               	bcf	3,5	;RP0=0, select bank0
  1744     021C  1303               	bcf	3,6	;RP1=0, select bank0
  1745     021D  1207               	bcf	7,4	;volatile
  1746     021E                     i1l50:
  1747                           
  1748                           ;./LCD.h: 10:  if(a & 2)
  1749     021E  1CF0               	btfss	i1Lcd_Port@a,1
  1750     021F  2A21               	goto	u26_21
  1751     0220  2A22               	goto	u26_20
  1752     0221                     u26_21:
  1753     0221  2A24               	goto	i1l51
  1754     0222                     u26_20:
  1755     0222                     i1l893:
  1756                           
  1757                           ;./LCD.h: 11:   RC5 = 1;
  1758     0222  1687               	bsf	7,5	;volatile
  1759     0223  2A25               	goto	i1l52
  1760     0224                     i1l51:	
  1761                           ;./LCD.h: 12:  else
  1762                           
  1763                           
  1764                           ;./LCD.h: 13:   RC5 = 0;
  1765     0224  1287               	bcf	7,5	;volatile
  1766     0225                     i1l52:
  1767                           
  1768                           ;./LCD.h: 15:  if(a & 4)
  1769     0225  1D70               	btfss	i1Lcd_Port@a,2
  1770     0226  2A28               	goto	u27_21
  1771     0227  2A29               	goto	u27_20
  1772     0228                     u27_21:
  1773     0228  2A2B               	goto	i1l53
  1774     0229                     u27_20:
  1775     0229                     i1l895:
  1776                           
  1777                           ;./LCD.h: 16:   RC6 = 1;
  1778     0229  1707               	bsf	7,6	;volatile
  1779     022A  2A2C               	goto	i1l54
  1780     022B                     i1l53:	
  1781                           ;./LCD.h: 17:  else
  1782                           
  1783                           
  1784                           ;./LCD.h: 18:   RC6 = 0;
  1785     022B  1307               	bcf	7,6	;volatile
  1786     022C                     i1l54:
  1787                           
  1788                           ;./LCD.h: 20:  if(a & 8)
  1789     022C  1DF0               	btfss	i1Lcd_Port@a,3
  1790     022D  2A2F               	goto	u28_21
  1791     022E  2A30               	goto	u28_20
  1792     022F                     u28_21:
  1793     022F  2A32               	goto	i1l55
  1794     0230                     u28_20:
  1795     0230                     i1l897:
  1796                           
  1797                           ;./LCD.h: 21:   RC7 = 1;
  1798     0230  1787               	bsf	7,7	;volatile
  1799     0231  2A33               	goto	i1l57
  1800     0232                     i1l55:	
  1801                           ;./LCD.h: 22:  else
  1802                           
  1803                           
  1804                           ;./LCD.h: 23:   RC7 = 0;
  1805     0232  1387               	bcf	7,7	;volatile
  1806     0233                     i1l57:
  1807     0233  0008               	return
  1808     0234                     __end_ofi1_Lcd_Port:
  1809     007E                     btemp	set	126	;btemp
  1810     007E                     wtemp0	set	126
  1811                           
  1812                           	psect	config
  1813                           
  1814                           ;Config register CONFIG @ 0x2007
  1815                           ;	Oscillator Selection bits
  1816                           ;	FOSC = HS, HS oscillator
  1817                           ;	Watchdog Timer Enable bit
  1818                           ;	WDTE = OFF, WDT disabled
  1819                           ;	Power-up Timer Enable bit
  1820                           ;	PWRTE = ON, PWRT enabled
  1821                           ;	Brown-out Reset Enable bit
  1822                           ;	BOREN = ON, BOR enabled
  1823                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1824                           ;	LVP = 0x1, unprogrammed default
  1825                           ;	Data EEPROM Memory Code Protection bit
  1826                           ;	CPD = 0x1, unprogrammed default
  1827                           ;	Flash Program Memory Write Enable bits
  1828                           ;	WRT = 0x3, unprogrammed default
  1829                           ;	In-Circuit Debugger Mode bit
  1830                           ;	DEBUG = 0x1, unprogrammed default
  1831                           ;	Flash Program Memory Code Protection bit
  1832                           ;	CP = 0x1, unpro  1833     2007                     	org	8199
  1834     2007  3FF2               	dw	16370

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     10      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[14]), STR_2(CODE[9]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1993
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     564
                                              5 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     254
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     995
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _tes                                                  2     2      0     110
                                              4 COMMON     2     2      0
                        i1_Lcd_Clear
 ---------------------------------------------------------------------------------
 (5) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jul 21 09:07:02 2022

                       pc 0002                        l50 023E                        l51 0244  
                      l52 0245                        l60 026F                        l53 024B  
                      l54 024C                        l55 0252                        l63 0296  
                      l72 0118                        l57 0253                        l49 023D  
                      l81 01C6                        l75 019D                        l69 0164  
                      fsr 0004                       l110 0086                       l105 0064  
                     l106 00B3                       l108 0087                       _RC0 0038  
                     _RC2 003A                       _RC4 003C                       _RC5 003D  
                     _RC6 003E                       _RC7 003F                       u410 023B  
                     u411 023A                       u420 0242                       u500 01C6  
                     u421 0241                       u501 01C5                       u430 0249  
                     u510 0063                       u431 0248                       u511 0062  
                     u440 0250                       u520 0069                       u441 024F  
                     u521 0068                       u530 0085                       u531 0084  
                     u460 0121                       u540 008D                       u461 0120  
                     u541 008C                       u607 0267                       u455 0172  
                     u480 0146                       u481 0145                       u475 0127  
                     u557 0184                       u495 014C                       u567 0197  
                     u577 00C2                       u587 00D3                       u597 00E4  
                     _tes 01EE                       fsr0 0004                      l1101 0131  
                    l1111 0156                      l1103 0137                      l1121 00D8  
                    l1113 015C                      l1105 0140                      l1123 00DE  
                    l1115 00B6                      l1107 0146                      l1131 01B9  
                    l1061 0250                      l1053 0237                      l1117 00BC  
                    l1109 0153                      l1125 01A1                      l1141 0020  
                    l1055 023B                      l1071 026C                      l1063 0257  
                    l1119 00C7                      l1127 01A4                      l1151 0029  
                    l1143 0023                      l1057 0242                      l1065 0258  
                    l1081 0180                      l1073 0168                      l1129 01B1  
                    l1161 0036                      l1153 002A                      l1145 0026  
                    l1137 0019                      l1059 0249                      l1067 025E  
                    l1091 019A                      l1083 0187                      l1075 016E  
                    l1171 0059                      l1163 0040                      l1155 002B  
                    l1147 0027                      l1139 001F                      l1069 0261  
                    l1093 028A                      l1085 018A                      l1077 016F  
                    l1181 007F                      l1173 005B                      l1165 0046  
                    l1157 002C                      l1149 0028                      l1095 011C  
                    l1087 0190                      l1079 017D                      l1167 0050  
                    l1159 0031                      l1097 0121                      l1089 0193  
                    l1185 008D                      l1177 0069                      l1169 0056  
                    l1099 012E                      l1187 009C                      l1179 0078  
                    l1189 00A2                      ?_tes 0070                      STR_1 01DB  
                    STR_2 01E5                      STR_3 01CD                      STR_4 01DB  
                    STR_5 01E5                      i1l50 021E                      i1l51 0224  
                    i1l52 0225                      i1l60 0289                      i1l53 022B  
                    i1l54 022C                      i1l55 0232                      i1l63 02A3  
                    i1l57 0233                      i1l49 021B                      i1l96 01FA  
                    i1l99 020B         ?_Lcd_Write_String 0070                      _main 0019  
                    btemp 007E                      start 000C        ??_Lcd_Write_String 0076  
         __end_of_Lcd_Cmd 0270                     ??_tes 0074                     ?_main 0070  
                   i1l931 0274                     i1l933 027A                     i1l935 027D  
                   i1l937 0286                     i1l929 0271                     i1l891 0217  
                   i1l893 0222                     i1l895 0229                     i1l991 01FE  
                   i1l897 0230                     i1l889 0213                     i1l993 0200  
                   i1l985 01EE                     i1l979 0297                     i1l995 0205  
                   i1l987 01F4                     i1l989 01F5                     u25_20 0217  
                   u25_21 0216                     _TMR1H 000F                     _TMR1L 000E  
                   u26_20 0222                     u26_21 0221                     u27_20 0229  
                   u35_20 01F4                     u27_21 0228                     u35_21 01F3  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     u28_20 0230                     u36_20 01FE  
                   u28_21 022F                     u36_21 01FD                     u61_27 0281  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088               ?i1_Lcd_Port 0070                     _valor 0076  
                   pclath 000A                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 0119          __end_of_Lcd_Port 0254           __initialization 000F  
            __end_of_main 00B6                    ??_main 0076                 ??_Lcd_Cmd 0021  
                  _TMR1IF 0060              ?i1_Lcd_Clear 0070         __end_ofi1_Lcd_Cmd 028A  
                  saved_w 007E           Lcd_Set_Cursor@a 0026           Lcd_Set_Cursor@b 0024  
         Lcd_Set_Cursor@y 0028           Lcd_Set_Cursor@z 0027   __end_of__initialization 0015  
       __end_of_Lcd_Clear 0297            __pcstackCOMMON 0070            _Lcd_Set_Cursor 0119  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070                __pbssBANK0 002A  
              __pmaintext 0019                __pintentry 0004    __end_of_Lcd_Set_Cursor 0165  
            ??i1_Lcd_Port 0070                ??_Lcd_Init 0024                ??_Lcd_Port 0076  
              __stringtab 01C7            _Lcd_Write_Char 0165                   _Lcd_Cmd 0254  
      __end_ofi1_Lcd_Port 0234           ?_Lcd_Set_Cursor 0024                   __ptext1 019E  
                 __ptext2 0165                   __ptext3 0119                   __ptext4 00B6  
                 __ptext5 028A                   __ptext6 0254                   __ptext7 0234  
                 __ptext8 01EE                   __ptext9 0297    __end_of_Lcd_Write_Char 019E  
    end_of_initialization 0015                 Lcd_Port@a 0020                 i1_Lcd_Cmd 0270  
               _PORTBbits 0006                 _PORTDbits 0008           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0027         Lcd_Write_String@i 0025                 _Lcd_Clear 028A  
              ?i1_Lcd_Cmd 0070          _Lcd_Write_String 019E       start_initialization 000F  
             __end_of_tes 0212                ?_Lcd_Clear 0070           Lcd_Write_Char@a 0024  
         Lcd_Write_Char@y 0023               __pbssCOMMON 0076                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0025  
             ??i1_Lcd_Cmd 0071                 __pstrings 01C7         interrupt_function 0004  
           ??i1_Lcd_Clear 0074                  Lcd_Cmd@a 0023                  _PIR1bits 000C  
             ??_Lcd_Clear 0076               __stringbase 01CC          ??_Lcd_Write_Char 0021  
                _Lcd_Init 00B6                  _Lcd_Port 0234  __end_of_Lcd_Write_String 01C7  
     __end_ofi1_Lcd_Clear 02A4        __end_of__stringtab 01CD                  __ptext10 0270  
                __ptext11 0212               i1Lcd_Port@a 0070               _interrupcao 002A  
              _INTCONbits 000B        Lcd_Write_Char@temp 0022                  intlevel1 0000  
             i1_Lcd_Clear 0297                i1Lcd_Cmd@a 0073                 stringcode 01C7  
      Lcd_Set_Cursor@temp 0029                _OPTION_REG 0081                i1_Lcd_Port 0212  
                stringdir 01C7                  stringtab 01C7  
