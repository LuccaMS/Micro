

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 21 22:33:46 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0006                     _PORTBbits	set	6
   187  0008                     _PORTD	set	8
   188  0007                     _PORTC	set	7
   189  0006                     _PORTB	set	6
   190  0005                     _PORTA	set	5
   191  001E                     _ADRESH	set	30
   192  001F                     _ADCON0bits	set	31
   193  0008                     _PORTDbits	set	8
   194  000B                     _INTCONbits	set	11
   195  0010                     _T1CONbits	set	16
   196  000F                     _TMR1H	set	15
   197  000E                     _TMR1L	set	14
   198  000C                     _PIR1bits	set	12
   199  0060                     _TMR1IF	set	96
   200  003A                     _RC2	set	58
   201  0038                     _RC0	set	56
   202  003F                     _RC7	set	63
   203  003E                     _RC6	set	62
   204  003D                     _RC5	set	61
   205  003C                     _RC4	set	60
   206  009E                     _ADRESL	set	158
   207  009F                     _ADCON1bits	set	159
   208  008C                     _PIE1bits	set	140
   209  0081                     _OPTION_REG	set	129
   210  0088                     _TRISD	set	136
   211  0087                     _TRISC	set	135
   212  0086                     _TRISB	set	134
   213  0085                     _TRISA	set	133
   214                           
   215                           	psect	strings
   216  026F                     __pstrings:
   217  026F                     stringtab:
   218  026F                     __stringtab:
   219  026F                     stringcode:	
   220                           ;	String table - string pointers are 1 byte each
   221                           
   222  026F                     stringdir:
   223  026F  3002               	movlw	high stringdir
   224  0270  008A               	movwf	10
   225  0271  0804               	movf	4,w
   226  0272  0A84               	incf	4,f
   227  0273  0782               	addwf	2,f
   228  0274                     __stringbase:
   229  0274  3400               	retlw	0
   230  0275                     __end_of__stringtab:
   231  0275                     STR_1:
   232  0275  3449               	retlw	73	;'I'
   233  0276  344E               	retlw	78	;'N'
   234  0277  3454               	retlw	84	;'T'
   235  0278  3445               	retlw	69	;'E'
   236  0279  3452               	retlw	82	;'R'
   237  027A  3452               	retlw	82	;'R'
   238  027B  344F               	retlw	79	;'O'
   239  027C  344D               	retlw	77	;'M'
   240  027D  3450               	retlw	80	;'P'
   241  027E  3449               	retlw	73	;'I'
   242  027F  3444               	retlw	68	;'D'
   243  0280  344F               	retlw	79	;'O'
   244  0281  342E               	retlw	46	;'.'
   245  0282  342E               	retlw	46	;'.'
   246  0283  342E               	retlw	46	;'.'
   247  0284  3400               	retlw	0
   248  0285                     STR_5:
   249  0285  3452               	retlw	82	;'R'
   250  0286  3441               	retlw	65	;'A'
   251  0287  3443               	retlw	67	;'C'
   252  0288  3441               	retlw	65	;'A'
   253  0289  344F               	retlw	79	;'O'
   254  028A  3420               	retlw	32	;' '
   255  028B  3443               	retlw	67	;'C'
   256  028C  344F               	retlw	79	;'O'
   257  028D  344C               	retlw	76	;'L'
   258  028E  344F               	retlw	79	;'O'
   259  028F  3443               	retlw	67	;'C'
   260  0290  3441               	retlw	65	;'A'
   261  0291  3444               	retlw	68	;'D'
   262  0292  3441               	retlw	65	;'A'
   263  0293  342E               	retlw	46	;'.'
   264  0294  3400               	retlw	0
   265  0295                     STR_4:
   266  0295  3444               	retlw	68	;'D'
   267  0296  3445               	retlw	69	;'E'
   268  0297  3453               	retlw	83	;'S'
   269  0298  3450               	retlw	80	;'P'
   270  0299  3445               	retlw	69	;'E'
   271  029A  344A               	retlw	74	;'J'
   272  029B  3441               	retlw	65	;'A'
   273  029C  344E               	retlw	78	;'N'
   274  029D  3444               	retlw	68	;'D'
   275  029E  344F               	retlw	79	;'O'
   276  029F  342E               	retlw	46	;'.'
   277  02A0  342E               	retlw	46	;'.'
   278  02A1  342E               	retlw	46	;'.'
   279  02A2  3400               	retlw	0
   280  02A3                     STR_2:
   281  02A3  3453               	retlw	83	;'S'
   282  02A4  3449               	retlw	73	;'I'
   283  02A5  3447               	retlw	71	;'G'
   284  02A6  344D               	retlw	77	;'M'
   285  02A7  3441               	retlw	65	;'A'
   286  02A8  3420               	retlw	32	;' '
   287  02A9  3444               	retlw	68	;'D'
   288  02AA  344F               	retlw	79	;'O'
   289  02AB  3447               	retlw	71	;'G'
   290  02AC  3400               	retlw	0
   291  02AD                     STR_3:
   292  02AD  3447               	retlw	71	;'G'
   293  02AE  3452               	retlw	82	;'R'
   294  02AF  3449               	retlw	73	;'I'
   295  02B0  344E               	retlw	78	;'N'
   296  02B1  3444               	retlw	68	;'D'
   297  02B2  3453               	retlw	83	;'S'
   298  02B3  3445               	retlw	69	;'E'
   299  02B4  3454               	retlw	84	;'T'
   300  02B5  3400               	retlw	0
   301                           
   302                           	psect	cinit
   303  0015                     start_initialization:	
   304                           ; #config settings
   305                           
   306  0015                     __initialization:
   307                           
   308                           ; Clear objects allocated to COMMON
   309  0015  01FB               	clrf	__pbssCOMMON& (0+127)
   310  0016  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   311                           
   312                           ; Clear objects allocated to BANK0
   313  0017  1283               	bcf	3,5	;RP0=0, select bank0
   314  0018  1303               	bcf	3,6	;RP1=0, select bank0
   315  0019  01B2               	clrf	__pbssBANK0& (0+127)
   316  001A  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   317  001B  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   318  001C  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   319  001D  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   320  001E  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   321  001F  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   322  0020  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   323  0021  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   324  0022  01BB               	clrf	(__pbssBANK0+9)& (0+127)
   325  0023                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328  0023                     __end_of__initialization:
   329  0023  0183               	clrf	3
   330  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   331                           
   332                           	psect	bssCOMMON
   333  007B                     __pbssCOMMON:
   334  007B                     _conta:
   335  007B                     	ds	2
   336                           
   337                           	psect	bssBANK0
   338  0032                     __pbssBANK0:
   339  0032                     _interrupcao:
   340  0032                     	ds	2
   341  0034                     _aux_despejo:
   342  0034                     	ds	2
   343  0036                     _valor:
   344  0036                     	ds	2
   345  0038                     _peso_estoque:
   346  0038                     	ds	2
   347  003A                     _peso_cambuca:
   348  003A                     	ds	2
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:
   352  0070                     ?_Lcd_Port:
   353  0070                     ?_Lcd_Cmd:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_Lcd_Clear:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_Lcd_Init:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_Lcd_Write_Char:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_Lcd_Write_String:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_tes:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_Lcd_Padrao:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?i1_Lcd_Port:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ??i1_Lcd_Port:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?i1_Lcd_Cmd:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?i1_Lcd_Clear:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?i1_Lcd_Write_Char:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?i1_Lcd_Write_String:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     i1Lcd_Port@a:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 1 bytes @ 0x0
   400  0070                     	ds	1
   401  0071                     ??i1_Lcd_Cmd:
   402  0071                     ??i1_Lcd_Write_Char:	
   403                           ; 1 bytes @ 0x1
   404                           
   405                           
   406                           ; 1 bytes @ 0x1
   407  0071                     	ds	1
   408  0072                     i1Lcd_Write_Char@temp:
   409                           
   410                           ; 1 bytes @ 0x2
   411  0072                     	ds	1
   412  0073                     i1Lcd_Cmd@a:
   413  0073                     i1Lcd_Write_Char@y:	
   414                           ; 1 bytes @ 0x3
   415                           
   416                           
   417                           ; 1 bytes @ 0x3
   418  0073                     	ds	1
   419  0074                     ??i1_Lcd_Clear:
   420  0074                     ?i1_Lcd_Set_Cursor:	
   421                           ; 1 bytes @ 0x4
   422                           
   423  0074                     i1Lcd_Set_Cursor@b:	
   424                           ; 1 bytes @ 0x4
   425                           
   426  0074                     i1Lcd_Write_Char@a:	
   427                           ; 1 bytes @ 0x4
   428                           
   429                           
   430                           ; 1 bytes @ 0x4
   431  0074                     	ds	1
   432  0075                     ??i1_Lcd_Set_Cursor:
   433  0075                     ??i1_Lcd_Write_String:	
   434                           ; 1 bytes @ 0x5
   435                           
   436  0075                     i1Lcd_Write_String@a:	
   437                           ; 1 bytes @ 0x5
   438                           
   439                           
   440                           ; 1 bytes @ 0x5
   441  0075                     	ds	1
   442  0076                     i1Lcd_Write_String@i:
   443                           
   444                           ; 2 bytes @ 0x6
   445  0076                     	ds	1
   446  0077                     i1Lcd_Set_Cursor@a:
   447                           
   448                           ; 1 bytes @ 0x7
   449  0077                     	ds	1
   450  0078                     i1Lcd_Set_Cursor@z:
   451                           
   452                           ; 1 bytes @ 0x8
   453  0078                     	ds	1
   454  0079                     i1Lcd_Set_Cursor@y:
   455                           
   456                           ; 1 bytes @ 0x9
   457  0079                     	ds	1
   458  007A                     i1Lcd_Set_Cursor@temp:
   459                           
   460                           ; 1 bytes @ 0xA
   461  007A                     	ds	1
   462                           
   463                           	psect	cstackBANK0
   464  0020                     __pcstackBANK0:
   465  0020                     ??_tes:
   466                           
   467                           ; 1 bytes @ 0x0
   468  0020                     	ds	4
   469  0024                     ??_Lcd_Port:
   470  0024                     ?_PesoCambuca:	
   471                           ; 1 bytes @ 0x4
   472                           
   473  0024                     ?_PesoEstoque:	
   474                           ; 2 bytes @ 0x4
   475                           
   476  0024                     Lcd_Port@a:	
   477                           ; 2 bytes @ 0x4
   478                           
   479                           
   480                           ; 1 bytes @ 0x4
   481  0024                     	ds	1
   482  0025                     ??_Lcd_Cmd:
   483  0025                     ??_Lcd_Write_Char:	
   484                           ; 1 bytes @ 0x5
   485                           
   486                           
   487                           ; 1 bytes @ 0x5
   488  0025                     	ds	1
   489  0026                     ??_PesoCambuca:
   490  0026                     ??_PesoEstoque:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0026                     Lcd_Write_Char@temp:	
   494                           ; 1 bytes @ 0x6
   495                           
   496                           
   497                           ; 1 bytes @ 0x6
   498  0026                     	ds	1
   499  0027                     Lcd_Cmd@a:
   500  0027                     Lcd_Write_Char@y:	
   501                           ; 1 bytes @ 0x7
   502                           
   503                           
   504                           ; 1 bytes @ 0x7
   505  0027                     	ds	1
   506  0028                     ??_Lcd_Clear:
   507  0028                     ?_Lcd_Set_Cursor:	
   508                           ; 1 bytes @ 0x8
   509                           
   510  0028                     ??_Lcd_Init:	
   511                           ; 1 bytes @ 0x8
   512                           
   513  0028                     Lcd_Set_Cursor@b:	
   514                           ; 1 bytes @ 0x8
   515                           
   516  0028                     Lcd_Write_Char@a:	
   517                           ; 1 bytes @ 0x8
   518                           
   519  0028                     PesoCambuca@peso:	
   520                           ; 1 bytes @ 0x8
   521                           
   522  0028                     PesoEstoque@peso:	
   523                           ; 2 bytes @ 0x8
   524                           
   525                           
   526                           ; 2 bytes @ 0x8
   527  0028                     	ds	1
   528  0029                     ??_Lcd_Set_Cursor:
   529  0029                     ??_Lcd_Write_String:	
   530                           ; 1 bytes @ 0x9
   531                           
   532  0029                     Lcd_Write_String@i:	
   533                           ; 1 bytes @ 0x9
   534                           
   535                           
   536                           ; 2 bytes @ 0x9
   537  0029                     	ds	2
   538  002B                     Lcd_Set_Cursor@a:
   539  002B                     Lcd_Write_String@a:	
   540                           ; 1 bytes @ 0xB
   541                           
   542                           
   543                           ; 1 bytes @ 0xB
   544  002B                     	ds	1
   545  002C                     Lcd_Set_Cursor@z:
   546                           
   547                           ; 1 bytes @ 0xC
   548  002C                     	ds	1
   549  002D                     Lcd_Set_Cursor@y:
   550                           
   551                           ; 1 bytes @ 0xD
   552  002D                     	ds	1
   553  002E                     Lcd_Set_Cursor@temp:
   554                           
   555                           ; 1 bytes @ 0xE
   556  002E                     	ds	1
   557  002F                     ??_Lcd_Padrao:
   558  002F                     ??_main:	
   559                           ; 1 bytes @ 0xF
   560                           
   561                           
   562                           ; 1 bytes @ 0xF
   563  002F                     	ds	3
   564                           
   565                           	psect	maintext
   566  0027                     __pmaintext:	
   567 ;;
   568 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   569 ;;
   570 ;; *************** function _main *****************
   571 ;; Defined at:
   572 ;;		line 112 in file "newmain.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : B00/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0
   588 ;;      Temps:          0       3       0       0       0
   589 ;;      Totals:         0       3       0       0       0
   590 ;;Total ram usage:        3 bytes
   591 ;; Hardware stack levels required when called: 8
   592 ;; This function calls:
   593 ;;		_Lcd_Clear
   594 ;;		_Lcd_Init
   595 ;;		_Lcd_Padrao
   596 ;;		_Lcd_Set_Cursor
   597 ;;		_Lcd_Write_String
   598 ;;		_PesoCambuca
   599 ;;		_PesoEstoque
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605  0027                     _main:	
   606                           ;psect for function _main
   607                           
   608  0027                     l1260:	
   609                           ;incstack = 0
   610                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   611                           
   612                           
   613                           ;newmain.c: 113:     TRISA = 0b11111111;
   614  0027  30FF               	movlw	255
   615  0028  1683               	bsf	3,5	;RP0=1, select bank1
   616  0029  1303               	bcf	3,6	;RP1=0, select bank1
   617  002A  0085               	movwf	5	;volatile
   618                           
   619                           ;newmain.c: 114:     TRISB = 0b00000011;
   620  002B  3003               	movlw	3
   621  002C  0086               	movwf	6	;volatile
   622  002D                     l1262:
   623                           
   624                           ;newmain.c: 115:     TRISC = 0;
   625  002D  0187               	clrf	7	;volatile
   626  002E                     l1264:
   627                           
   628                           ;newmain.c: 116:     TRISD = 0;
   629  002E  0188               	clrf	8	;volatile
   630                           
   631                           ;newmain.c: 117:     OPTION_REG = 0b00111111;
   632  002F  303F               	movlw	63
   633  0030  0081               	movwf	1	;volatile
   634  0031                     l1266:
   635                           
   636                           ;newmain.c: 118:     PORTA = 0;
   637  0031  1283               	bcf	3,5	;RP0=0, select bank0
   638  0032  1303               	bcf	3,6	;RP1=0, select bank0
   639  0033  0185               	clrf	5	;volatile
   640  0034                     l1268:
   641                           
   642                           ;newmain.c: 119:     PORTB = 0;
   643  0034  0186               	clrf	6	;volatile
   644  0035                     l1270:
   645                           
   646                           ;newmain.c: 120:     PORTC = 0;
   647  0035  0187               	clrf	7	;volatile
   648  0036                     l1272:
   649                           
   650                           ;newmain.c: 121:     PORTD = 0;
   651  0036  0188               	clrf	8	;volatile
   652  0037                     l1274:
   653                           
   654                           ;newmain.c: 123:     INTCONbits.GIE = 1;
   655  0037  178B               	bsf	11,7	;volatile
   656  0038                     l1276:
   657                           
   658                           ;newmain.c: 124:     INTCONbits.PEIE = 1;
   659  0038  170B               	bsf	11,6	;volatile
   660  0039                     l1278:
   661                           
   662                           ;newmain.c: 125:     INTCONbits.INTE=1;
   663  0039  160B               	bsf	11,4	;volatile
   664  003A                     l1280:
   665                           
   666                           ;newmain.c: 129:     PIE1bits.TMR1IE = 1;
   667  003A  1683               	bsf	3,5	;RP0=1, select bank1
   668  003B  1303               	bcf	3,6	;RP1=0, select bank1
   669  003C  140C               	bsf	12,0	;volatile
   670  003D                     l1282:
   671                           
   672                           ;newmain.c: 130:     T1CONbits.TMR1CS = 0;
   673  003D  1283               	bcf	3,5	;RP0=0, select bank0
   674  003E  1303               	bcf	3,6	;RP1=0, select bank0
   675  003F  1090               	bcf	16,1	;volatile
   676  0040                     l1284:
   677                           
   678                           ;newmain.c: 131:     T1CONbits.T1CKPS0 = 1;
   679  0040  1610               	bsf	16,4	;volatile
   680  0041                     l1286:
   681                           
   682                           ;newmain.c: 132:     T1CONbits.T1CKPS1 = 1;
   683  0041  1690               	bsf	16,5	;volatile
   684                           
   685                           ;newmain.c: 138:     TMR1L = 0xDC;
   686  0042  30DC               	movlw	220
   687  0043  008E               	movwf	14	;volatile
   688                           
   689                           ;newmain.c: 139:     TMR1H = 0X0B;
   690  0044  300B               	movlw	11
   691  0045  008F               	movwf	15	;volatile
   692  0046                     l1288:
   693                           
   694                           ;newmain.c: 142:     ADCON1bits.PCFG0 = 0;
   695  0046  1683               	bsf	3,5	;RP0=1, select bank1
   696  0047  1303               	bcf	3,6	;RP1=0, select bank1
   697  0048  101F               	bcf	31,0	;volatile
   698  0049                     l1290:
   699                           
   700                           ;newmain.c: 143:     ADCON1bits.PCFG1 = 0;
   701  0049  109F               	bcf	31,1	;volatile
   702  004A                     l1292:
   703                           
   704                           ;newmain.c: 144:     ADCON1bits.PCFG2 = 0;
   705  004A  111F               	bcf	31,2	;volatile
   706  004B                     l1294:
   707                           
   708                           ;newmain.c: 145:     ADCON1bits.PCFG3 = 0;
   709  004B  119F               	bcf	31,3	;volatile
   710  004C                     l1296:
   711                           
   712                           ;newmain.c: 147:  ADCON0bits.ADCS0 = 0;
   713  004C  1283               	bcf	3,5	;RP0=0, select bank0
   714  004D  1303               	bcf	3,6	;RP1=0, select bank0
   715  004E  131F               	bcf	31,6	;volatile
   716  004F                     l1298:
   717                           
   718                           ;newmain.c: 148:     ADCON0bits.ADCS1 = 0;
   719  004F  139F               	bcf	31,7	;volatile
   720  0050                     l1300:
   721                           
   722                           ;newmain.c: 150:     ADCON1bits.ADFM = 0;
   723  0050  1683               	bsf	3,5	;RP0=1, select bank1
   724  0051  1303               	bcf	3,6	;RP1=0, select bank1
   725  0052  139F               	bcf	31,7	;volatile
   726  0053                     l1302:
   727                           
   728                           ;newmain.c: 153:     ADRESL = 0x00;
   729  0053  019E               	clrf	30	;volatile
   730  0054                     l1304:
   731                           
   732                           ;newmain.c: 154:     ADRESH = 0x00;
   733  0054  1283               	bcf	3,5	;RP0=0, select bank0
   734  0055  1303               	bcf	3,6	;RP1=0, select bank0
   735  0056  019E               	clrf	30	;volatile
   736  0057                     l1306:
   737                           
   738                           ;newmain.c: 156:     ADCON0bits.ADON = 1;
   739  0057  141F               	bsf	31,0	;volatile
   740  0058                     l1308:
   741                           
   742                           ;newmain.c: 158:     Lcd_Init();
   743  0058  120A  118A  2119  120A  118A  	fcall	_Lcd_Init
   744  005D                     l1310:
   745                           
   746                           ;newmain.c: 159:     Lcd_Padrao();
   747  005D  120A  118A  23CD  120A  118A  	fcall	_Lcd_Padrao
   748  0062                     l1312:
   749                           
   750                           ;newmain.c: 160:     PORTDbits.RD5 = 1;
   751  0062  1283               	bcf	3,5	;RP0=0, select bank0
   752  0063  1303               	bcf	3,6	;RP1=0, select bank0
   753  0064  1688               	bsf	8,5	;volatile
   754  0065                     l1314:
   755                           
   756                           ;newmain.c: 161:     interrupcao = 0;
   757  0065  01B2               	clrf	_interrupcao
   758  0066  01B3               	clrf	_interrupcao+1
   759  0067                     l1316:
   760                           
   761                           ;newmain.c: 162:     aux_despejo = 0;
   762  0067  01B4               	clrf	_aux_despejo
   763  0068  01B5               	clrf	_aux_despejo+1
   764  0069                     l1318:
   765                           
   766                           ;newmain.c: 164:        peso_cambuca = PesoCambuca();
   767  0069  120A  118A  22F3  120A  118A  	fcall	_PesoCambuca
   768  006E  1283               	bcf	3,5	;RP0=0, select bank0
   769  006F  1303               	bcf	3,6	;RP1=0, select bank0
   770  0070  0825               	movf	?_PesoCambuca+1,w
   771  0071  00BB               	movwf	_peso_cambuca+1
   772  0072  0824               	movf	?_PesoCambuca,w
   773  0073  00BA               	movwf	_peso_cambuca
   774  0074                     l1320:
   775                           
   776                           ;newmain.c: 165:        peso_estoque = PesoEstoque();
   777  0074  120A  118A  22B6  120A  118A  	fcall	_PesoEstoque
   778  0079  1283               	bcf	3,5	;RP0=0, select bank0
   779  007A  1303               	bcf	3,6	;RP1=0, select bank0
   780  007B  0825               	movf	?_PesoEstoque+1,w
   781  007C  00B9               	movwf	_peso_estoque+1
   782  007D  0824               	movf	?_PesoEstoque,w
   783  007E  00B8               	movwf	_peso_estoque
   784  007F                     l1322:
   785                           
   786                           ;newmain.c: 166:         if(interrupcao == 1){
   787  007F  0332               	decf	_interrupcao,w
   788  0080  0433               	iorwf	_interrupcao+1,w
   789  0081  1D03               	btfss	3,2
   790  0082  2884               	goto	u521
   791  0083  2885               	goto	u520
   792  0084                     u521:
   793  0084  289A               	goto	l1330
   794  0085                     u520:
   795  0085                     l1324:
   796                           
   797                           ;newmain.c: 167:             interrupcao = 0;
   798  0085  01B2               	clrf	_interrupcao
   799  0086  01B3               	clrf	_interrupcao+1
   800  0087                     l1326:
   801                           
   802                           ;newmain.c: 168:             _delay((unsigned long)((2000)*(4000000/4000.0)));
   803  0087  300B               	movlw	11
   804  0088  1283               	bcf	3,5	;RP0=0, select bank0
   805  0089  1303               	bcf	3,6	;RP1=0, select bank0
   806  008A  00B1               	movwf	??_main+2
   807  008B  3026               	movlw	38
   808  008C  00B0               	movwf	??_main+1
   809  008D  305D               	movlw	93
   810  008E  00AF               	movwf	??_main
   811  008F                     u577:
   812  008F  0BAF               	decfsz	??_main,f
   813  0090  288F               	goto	u577
   814  0091  0BB0               	decfsz	??_main+1,f
   815  0092  288F               	goto	u577
   816  0093  0BB1               	decfsz	??_main+2,f
   817  0094  288F               	goto	u577
   818  0095                     l1328:
   819                           
   820                           ;newmain.c: 169:             Lcd_Padrao();
   821  0095  120A  118A  23CD  120A  118A  	fcall	_Lcd_Padrao
   822  009A                     l1330:
   823                           
   824                           ;newmain.c: 171:        if(peso_cambuca <= 51)
   825  009A  1283               	bcf	3,5	;RP0=0, select bank0
   826  009B  1303               	bcf	3,6	;RP1=0, select bank0
   827  009C  083B               	movf	_peso_cambuca+1,w
   828  009D  3A80               	xorlw	128
   829  009E  00FF               	movwf	btemp+1
   830  009F  3080               	movlw	128
   831  00A0  027F               	subwf	btemp+1,w
   832  00A1  1D03               	skipz
   833  00A2  28A5               	goto	u535
   834  00A3  3034               	movlw	52
   835  00A4  023A               	subwf	_peso_cambuca,w
   836  00A5                     u535:
   837  00A5  1803               	skipnc
   838  00A6  28A8               	goto	u531
   839  00A7  28A9               	goto	u530
   840  00A8                     u531:
   841  00A8  28BD               	goto	l1338
   842  00A9                     u530:
   843  00A9                     l1332:
   844                           
   845                           ;newmain.c: 172:        {;newmain.c: 173:            PORTDbits.RD6 = 1 ;
   846  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   847  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   848  00AB  1708               	bsf	8,6	;volatile
   849  00AC                     l1334:
   850                           
   851                           ;newmain.c: 174:            _delay((unsigned long)((1000)*(4000000/4000.0)));
   852  00AC  3006               	movlw	6
   853  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   854  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   855  00AF  00B1               	movwf	??_main+2
   856  00B0  3013               	movlw	19
   857  00B1  00B0               	movwf	??_main+1
   858  00B2  30AD               	movlw	173
   859  00B3  00AF               	movwf	??_main
   860  00B4                     u587:
   861  00B4  0BAF               	decfsz	??_main,f
   862  00B5  28B4               	goto	u587
   863  00B6  0BB0               	decfsz	??_main+1,f
   864  00B7  28B4               	goto	u587
   865  00B8  0BB1               	decfsz	??_main+2,f
   866  00B9  28B4               	goto	u587
   867  00BA                     l1336:
   868                           
   869                           ;newmain.c: 175:            PORTDbits.RD6 = 0;
   870  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   871  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   872  00BC  1308               	bcf	8,6	;volatile
   873  00BD                     l1338:
   874                           
   875                           ;newmain.c: 178:         PORTDbits.RD7 = 0;
   876  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   877  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   878  00BF  1388               	bcf	8,7	;volatile
   879  00C0                     l1340:
   880                           
   881                           ;newmain.c: 179:         if(PORTBbits.RB1 == 0){
   882  00C0  1886               	btfsc	6,1	;volatile
   883  00C1  28C3               	goto	u541
   884  00C2  28C4               	goto	u540
   885  00C3                     u541:
   886  00C3  2869               	goto	l1318
   887  00C4                     u540:
   888  00C4                     l1342:
   889                           
   890                           ;newmain.c: 180:             aux_despejo = 0;
   891  00C4  01B4               	clrf	_aux_despejo
   892  00C5  01B5               	clrf	_aux_despejo+1
   893  00C6                     l1344:
   894                           
   895                           ;newmain.c: 181:             Lcd_Clear();
   896  00C6  120A  118A  2490  120A  118A  	fcall	_Lcd_Clear
   897  00CB                     l1346:
   898                           
   899                           ;newmain.c: 182:             Lcd_Set_Cursor(1,1);
   900  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   901  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   902  00CD  01A8               	clrf	Lcd_Set_Cursor@b
   903  00CE  0AA8               	incf	Lcd_Set_Cursor@b,f
   904  00CF  3001               	movlw	1
   905  00D0  120A  118A  217C  120A  118A  	fcall	_Lcd_Set_Cursor
   906  00D5                     l1348:
   907                           
   908                           ;newmain.c: 183:             Lcd_Write_String("DESPEJANDO...");
   909  00D5  3021               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   910  00D6  120A  118A  23A4  120A  118A  	fcall	_Lcd_Write_String
   911  00DB                     l1350:
   912                           
   913                           ;newmain.c: 184:             T1CONbits.TMR1ON = 1;
   914  00DB  1283               	bcf	3,5	;RP0=0, select bank0
   915  00DC  1303               	bcf	3,6	;RP1=0, select bank0
   916  00DD  1410               	bsf	16,0	;volatile
   917                           
   918                           ;newmain.c: 185:             while (aux_despejo == 0){
   919  00DE  28E0               	goto	l1352
   920  00DF                     l139:
   921                           
   922                           ;newmain.c: 186:                 PORTDbits.RD7 = 1;
   923  00DF  1788               	bsf	8,7	;volatile
   924  00E0                     l1352:
   925                           
   926                           ;newmain.c: 185:             while (aux_despejo == 0){
   927  00E0  0834               	movf	_aux_despejo,w
   928  00E1  0435               	iorwf	_aux_despejo+1,w
   929  00E2  1903               	btfsc	3,2
   930  00E3  28E5               	goto	u551
   931  00E4  28E6               	goto	u550
   932  00E5                     u551:
   933  00E5  28DF               	goto	l139
   934  00E6                     u550:
   935  00E6                     l140:
   936                           
   937                           ;newmain.c: 188:             PORTDbits.RD7 = 0;
   938  00E6  1388               	bcf	8,7	;volatile
   939  00E7                     l1354:
   940                           
   941                           ;newmain.c: 189:             if(interrupcao == 0){
   942  00E7  0832               	movf	_interrupcao,w
   943  00E8  0433               	iorwf	_interrupcao+1,w
   944  00E9  1D03               	btfss	3,2
   945  00EA  28EC               	goto	u561
   946  00EB  28ED               	goto	u560
   947  00EC                     u561:
   948  00EC  2902               	goto	l1360
   949  00ED                     u560:
   950  00ED                     l1356:
   951                           
   952                           ;newmain.c: 190:                 Lcd_Clear();
   953  00ED  120A  118A  2490  120A  118A  	fcall	_Lcd_Clear
   954                           
   955                           ;newmain.c: 191:                 Lcd_Set_Cursor(1,1);
   956  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   957  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   958  00F4  01A8               	clrf	Lcd_Set_Cursor@b
   959  00F5  0AA8               	incf	Lcd_Set_Cursor@b,f
   960  00F6  3001               	movlw	1
   961  00F7  120A  118A  217C  120A  118A  	fcall	_Lcd_Set_Cursor
   962  00FC                     l1358:
   963                           
   964                           ;newmain.c: 192:                 Lcd_Write_String("RACAO COLOCADA.");
   965  00FC  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   966  00FD  120A  118A  23A4  120A  118A  	fcall	_Lcd_Write_String
   967  0102                     l1360:
   968                           
   969                           ;newmain.c: 194:             _delay((unsigned long)((2000)*(4000000/4000.0)));
   970  0102  300B               	movlw	11
   971  0103  1283               	bcf	3,5	;RP0=0, select bank0
   972  0104  1303               	bcf	3,6	;RP1=0, select bank0
   973  0105  00B1               	movwf	??_main+2
   974  0106  3026               	movlw	38
   975  0107  00B0               	movwf	??_main+1
   976  0108  305D               	movlw	93
   977  0109  00AF               	movwf	??_main
   978  010A                     u597:
   979  010A  0BAF               	decfsz	??_main,f
   980  010B  290A               	goto	u597
   981  010C  0BB0               	decfsz	??_main+1,f
   982  010D  290A               	goto	u597
   983  010E  0BB1               	decfsz	??_main+2,f
   984  010F  290A               	goto	u597
   985  0110                     l1362:
   986                           
   987                           ;newmain.c: 195:             Lcd_Padrao();
   988  0110  120A  118A  23CD  120A  118A  	fcall	_Lcd_Padrao
   989  0115  2869               	goto	l1318
   990  0116  120A  118A  2812   	ljmp	start
   991  0119                     __end_of_main:
   992                           
   993                           	psect	text1
   994  02B6                     __ptext1:	
   995 ;; *************** function _PesoEstoque *****************
   996 ;; Defined at:
   997 ;;		line 88 in file "newmain.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  peso            2    8[BANK0 ] int 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2    4[BANK0 ] int 
  1004 ;; Registers used:
  1005 ;;		wreg
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       2       0       0       0
  1012 ;;      Locals:         0       2       0       0       0
  1013 ;;      Temps:          0       2       0       0       0
  1014 ;;      Totals:         0       6       0       0       0
  1015 ;;Total ram usage:        6 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 4
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_main
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025  02B6                     _PesoEstoque:	
  1026                           ;psect for function _PesoEstoque
  1027                           
  1028  02B6                     l1182:	
  1029                           ;incstack = 0
  1030                           ; Regs used in _PesoEstoque: [wreg]
  1031                           
  1032                           
  1033                           ;newmain.c: 90:     int peso;;newmain.c: 91:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  1034  02B6  3002               	movlw	2
  1035  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1036  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1037  02B9  00A6               	movwf	??_PesoEstoque
  1038  02BA                     u607:
  1039  02BA  0BA6               	decfsz	??_PesoEstoque,f
  1040  02BB  2ABA               	goto	u607
  1041  02BC  0000               	nop
  1042  02BD                     l1184:
  1043                           
  1044                           ;newmain.c: 92:     ADCON0bits.CHS0 = 1;
  1045  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1046  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1047  02BF  159F               	bsf	31,3	;volatile
  1048                           
  1049                           ;newmain.c: 93:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1050  02C0  3002               	movlw	2
  1051  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1052  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1053  02C3  00A6               	movwf	??_PesoEstoque
  1054  02C4                     u617:
  1055  02C4  0BA6               	decfsz	??_PesoEstoque,f
  1056  02C5  2AC4               	goto	u617
  1057  02C6  0000               	nop
  1058  02C7                     l1186:
  1059                           
  1060                           ;newmain.c: 94:     ADCON0bits.CHS1 = 0;
  1061  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1062  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1063  02C9  121F               	bcf	31,4	;volatile
  1064                           
  1065                           ;newmain.c: 95:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1066  02CA  3002               	movlw	2
  1067  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1068  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1069  02CD  00A6               	movwf	??_PesoEstoque
  1070  02CE                     u627:
  1071  02CE  0BA6               	decfsz	??_PesoEstoque,f
  1072  02CF  2ACE               	goto	u627
  1073  02D0  0000               	nop
  1074  02D1                     l1188:
  1075                           
  1076                           ;newmain.c: 96:     ADCON0bits.CHS2 = 0;
  1077  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1078  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1079  02D3  129F               	bcf	31,5	;volatile
  1080                           
  1081                           ;newmain.c: 97:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1082  02D4  3002               	movlw	2
  1083  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  1084  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  1085  02D7  00A6               	movwf	??_PesoEstoque
  1086  02D8                     u637:
  1087  02D8  0BA6               	decfsz	??_PesoEstoque,f
  1088  02D9  2AD8               	goto	u637
  1089  02DA  0000               	nop
  1090  02DB                     l1190:
  1091                           
  1092                           ;newmain.c: 98:     ADCON0bits.GO = 1;
  1093  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1094  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1095  02DD  151F               	bsf	31,2	;volatile
  1096                           
  1097                           ;newmain.c: 99:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1098  02DE  3002               	movlw	2
  1099  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  1100  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  1101  02E1  00A6               	movwf	??_PesoEstoque
  1102  02E2                     u647:
  1103  02E2  0BA6               	decfsz	??_PesoEstoque,f
  1104  02E3  2AE2               	goto	u647
  1105  02E4  0000               	nop
  1106                           
  1107                           ;newmain.c: 100:     peso = ADRESH;
  1108  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1109  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1110  02E7  081E               	movf	30,w	;volatile
  1111  02E8  00A6               	movwf	??_PesoEstoque
  1112  02E9  01A7               	clrf	??_PesoEstoque+1
  1113  02EA  0826               	movf	??_PesoEstoque,w
  1114  02EB  00A8               	movwf	PesoEstoque@peso
  1115  02EC  0827               	movf	??_PesoEstoque+1,w
  1116  02ED  00A9               	movwf	PesoEstoque@peso+1
  1117                           
  1118                           ;newmain.c: 101:     return peso;
  1119  02EE  0829               	movf	PesoEstoque@peso+1,w
  1120  02EF  00A5               	movwf	?_PesoEstoque+1
  1121  02F0  0828               	movf	PesoEstoque@peso,w
  1122  02F1  00A4               	movwf	?_PesoEstoque
  1123  02F2                     l126:
  1124  02F2  0008               	return
  1125  02F3                     __end_of_PesoEstoque:
  1126                           
  1127                           	psect	text2
  1128  02F3                     __ptext2:	
  1129 ;; *************** function _PesoCambuca *****************
  1130 ;; Defined at:
  1131 ;;		line 73 in file "newmain.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  peso            2    8[BANK0 ] int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2    4[BANK0 ] int 
  1138 ;; Registers used:
  1139 ;;		wreg
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       2       0       0       0
  1146 ;;      Locals:         0       2       0       0       0
  1147 ;;      Temps:          0       2       0       0       0
  1148 ;;      Totals:         0       6       0       0       0
  1149 ;;Total ram usage:        6 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 4
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159  02F3                     _PesoCambuca:	
  1160                           ;psect for function _PesoCambuca
  1161                           
  1162  02F3                     l1170:	
  1163                           ;incstack = 0
  1164                           ; Regs used in _PesoCambuca: [wreg]
  1165                           
  1166                           
  1167                           ;newmain.c: 75:     int peso;;newmain.c: 76:     _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
  1168  02F3  3002               	movlw	2
  1169  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1170  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1171  02F6  00A6               	movwf	??_PesoCambuca
  1172  02F7                     u657:
  1173  02F7  0BA6               	decfsz	??_PesoCambuca,f
  1174  02F8  2AF7               	goto	u657
  1175  02F9  0000               	nop
  1176  02FA                     l1172:
  1177                           
  1178                           ;newmain.c: 77:     ADCON0bits.CHS0 = 0;
  1179  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1180  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1181  02FC  119F               	bcf	31,3	;volatile
  1182                           
  1183                           ;newmain.c: 78:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1184  02FD  3002               	movlw	2
  1185  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1186  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0300  00A6               	movwf	??_PesoCambuca
  1188  0301                     u667:
  1189  0301  0BA6               	decfsz	??_PesoCambuca,f
  1190  0302  2B01               	goto	u667
  1191  0303  0000               	nop
  1192  0304                     l1174:
  1193                           
  1194                           ;newmain.c: 79:     ADCON0bits.CHS1 = 0;
  1195  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0306  121F               	bcf	31,4	;volatile
  1198                           
  1199                           ;newmain.c: 80:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1200  0307  3002               	movlw	2
  1201  0308  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0309  1303               	bcf	3,6	;RP1=0, select bank0
  1203  030A  00A6               	movwf	??_PesoCambuca
  1204  030B                     u677:
  1205  030B  0BA6               	decfsz	??_PesoCambuca,f
  1206  030C  2B0B               	goto	u677
  1207  030D  0000               	nop
  1208  030E                     l1176:
  1209                           
  1210                           ;newmain.c: 81:     ADCON0bits.CHS2 = 0;
  1211  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1212  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0310  129F               	bcf	31,5	;volatile
  1214                           
  1215                           ;newmain.c: 82:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1216  0311  3002               	movlw	2
  1217  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0314  00A6               	movwf	??_PesoCambuca
  1220  0315                     u687:
  1221  0315  0BA6               	decfsz	??_PesoCambuca,f
  1222  0316  2B15               	goto	u687
  1223  0317  0000               	nop
  1224  0318                     l1178:
  1225                           
  1226                           ;newmain.c: 83:     ADCON0bits.GO = 1;
  1227  0318  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0319  1303               	bcf	3,6	;RP1=0, select bank0
  1229  031A  151F               	bsf	31,2	;volatile
  1230                           
  1231                           ;newmain.c: 84:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1232  031B  3002               	movlw	2
  1233  031C  1283               	bcf	3,5	;RP0=0, select bank0
  1234  031D  1303               	bcf	3,6	;RP1=0, select bank0
  1235  031E  00A6               	movwf	??_PesoCambuca
  1236  031F                     u697:
  1237  031F  0BA6               	decfsz	??_PesoCambuca,f
  1238  0320  2B1F               	goto	u697
  1239  0321  0000               	nop
  1240                           
  1241                           ;newmain.c: 85:     peso = ADRESH;
  1242  0322  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0323  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0324  081E               	movf	30,w	;volatile
  1245  0325  00A6               	movwf	??_PesoCambuca
  1246  0326  01A7               	clrf	??_PesoCambuca+1
  1247  0327  0826               	movf	??_PesoCambuca,w
  1248  0328  00A8               	movwf	PesoCambuca@peso
  1249  0329  0827               	movf	??_PesoCambuca+1,w
  1250  032A  00A9               	movwf	PesoCambuca@peso+1
  1251                           
  1252                           ;newmain.c: 86:     return peso;
  1253  032B  0829               	movf	PesoCambuca@peso+1,w
  1254  032C  00A5               	movwf	?_PesoCambuca+1
  1255  032D  0828               	movf	PesoCambuca@peso,w
  1256  032E  00A4               	movwf	?_PesoCambuca
  1257  032F                     l123:
  1258  032F  0008               	return
  1259  0330                     __end_of_PesoCambuca:
  1260                           
  1261                           	psect	text3
  1262  03CD                     __ptext3:	
  1263 ;; *************** function _Lcd_Padrao *****************
  1264 ;; Defined at:
  1265 ;;		line 104 in file "newmain.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0
  1282 ;;      Totals:         0       0       0       0       0
  1283 ;;Total ram usage:        0 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 7
  1286 ;; This function calls:
  1287 ;;		_Lcd_Clear
  1288 ;;		_Lcd_Set_Cursor
  1289 ;;		_Lcd_Write_String
  1290 ;; This function is called by:
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295  03CD                     _Lcd_Padrao:	
  1296                           ;psect for function _Lcd_Padrao
  1297                           
  1298  03CD                     l1194:	
  1299                           ;incstack = 0
  1300                           ; Regs used in _Lcd_Padrao: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1301                           
  1302                           
  1303                           ;newmain.c: 105:     Lcd_Clear();
  1304  03CD  120A  118A  2490  120A  118A  	fcall	_Lcd_Clear
  1305                           
  1306                           ;newmain.c: 106:     Lcd_Set_Cursor(1,1);
  1307  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1308  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1309  03D4  01A8               	clrf	Lcd_Set_Cursor@b
  1310  03D5  0AA8               	incf	Lcd_Set_Cursor@b,f
  1311  03D6  3001               	movlw	1
  1312  03D7  120A  118A  217C  120A  118A  	fcall	_Lcd_Set_Cursor
  1313  03DC                     l1196:
  1314                           
  1315                           ;newmain.c: 107:     Lcd_Write_String("SIGMA DOG");
  1316  03DC  302F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1317  03DD  120A  118A  23A4  120A  118A  	fcall	_Lcd_Write_String
  1318  03E2                     l1198:
  1319                           
  1320                           ;newmain.c: 108:     Lcd_Set_Cursor(2,1);
  1321  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  1322  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  1323  03E4  01A8               	clrf	Lcd_Set_Cursor@b
  1324  03E5  0AA8               	incf	Lcd_Set_Cursor@b,f
  1325  03E6  3002               	movlw	2
  1326  03E7  120A  118A  217C  120A  118A  	fcall	_Lcd_Set_Cursor
  1327                           
  1328                           ;newmain.c: 109:     Lcd_Write_String("GRINDSET");
  1329  03EC  3039               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1330  03ED  120A  118A  23A4  120A  118A  	fcall	_Lcd_Write_String
  1331  03F2                     l129:
  1332  03F2  0008               	return
  1333  03F3                     __end_of_Lcd_Padrao:
  1334                           
  1335                           	psect	text4
  1336  03A4                     __ptext4:	
  1337 ;; *************** function _Lcd_Write_String *****************
  1338 ;; Defined at:
  1339 ;;		line 96 in file "./LCD.h"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  a               1    wreg     PTR unsigned char 
  1342 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  1343 ;;		 -> STR_1(16), 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  a               1   11[BANK0 ] PTR unsigned char 
  1346 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  1347 ;;		 -> STR_1(16), 
  1348 ;;  i               2    9[BANK0 ] int 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         0       3       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         0       3       0       0       0
  1362 ;;Total ram usage:        3 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 6
  1365 ;; This function calls:
  1366 ;;		_Lcd_Write_Char
  1367 ;; This function is called by:
  1368 ;;		_Lcd_Padrao
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373  03A4                     _Lcd_Write_String:	
  1374                           ;psect for function _Lcd_Write_String
  1375                           
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1379                           ;Lcd_Write_String@a stored from wreg
  1380  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  1381  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  1382  03A6  00AB               	movwf	Lcd_Write_String@a
  1383  03A7                     l1122:
  1384                           
  1385                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  1386  03A7  01A9               	clrf	Lcd_Write_String@i
  1387  03A8  01AA               	clrf	Lcd_Write_String@i+1
  1388  03A9  2BBF               	goto	l1128
  1389  03AA                     l1124:
  1390                           
  1391                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  1392  03AA  0829               	movf	Lcd_Write_String@i,w
  1393  03AB  072B               	addwf	Lcd_Write_String@a,w
  1394  03AC  0084               	movwf	4
  1395  03AD  120A  118A  226F  120A  118A  	fcall	stringdir
  1396  03B2  120A  118A  2330  120A  118A  	fcall	_Lcd_Write_Char
  1397  03B7                     l1126:
  1398  03B7  3001               	movlw	1
  1399  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1400  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1401  03BA  07A9               	addwf	Lcd_Write_String@i,f
  1402  03BB  1803               	skipnc
  1403  03BC  0AAA               	incf	Lcd_Write_String@i+1,f
  1404  03BD  3000               	movlw	0
  1405  03BE  07AA               	addwf	Lcd_Write_String@i+1,f
  1406  03BF                     l1128:
  1407  03BF  0829               	movf	Lcd_Write_String@i,w
  1408  03C0  072B               	addwf	Lcd_Write_String@a,w
  1409  03C1  0084               	movwf	4
  1410  03C2  120A  118A  226F  120A  118A  	fcall	stringdir
  1411  03C7  3A00               	xorlw	0
  1412  03C8  1D03               	skipz
  1413  03C9  2BCB               	goto	u421
  1414  03CA  2BCC               	goto	u420
  1415  03CB                     u421:
  1416  03CB  2BAA               	goto	l1124
  1417  03CC                     u420:
  1418  03CC                     l93:
  1419  03CC  0008               	return
  1420  03CD                     __end_of_Lcd_Write_String:
  1421                           
  1422                           	psect	text5
  1423  0330                     __ptext5:	
  1424 ;; *************** function _Lcd_Write_Char *****************
  1425 ;; Defined at:
  1426 ;;		line 80 in file "./LCD.h"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  a               1    wreg     unsigned char 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  a               1    8[BANK0 ] unsigned char 
  1431 ;;  y               1    7[BANK0 ] unsigned char 
  1432 ;;  temp            1    6[BANK0 ] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         0       3       0       0       0
  1444 ;;      Temps:          0       1       0       0       0
  1445 ;;      Totals:         0       4       0       0       0
  1446 ;;Total ram usage:        4 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 5
  1449 ;; This function calls:
  1450 ;;		_Lcd_Port
  1451 ;; This function is called by:
  1452 ;;		_Lcd_Write_String
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456  0330                     _Lcd_Write_Char:	
  1457                           ;psect for function _Lcd_Write_Char
  1458                           
  1459                           
  1460                           ;incstack = 0
  1461                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1462                           ;Lcd_Write_Char@a stored from wreg
  1463  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0332  00A8               	movwf	Lcd_Write_Char@a
  1466  0333                     l1070:
  1467                           
  1468                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  1469  0333  0828               	movf	Lcd_Write_Char@a,w
  1470  0334  390F               	andlw	15
  1471  0335  00A5               	movwf	??_Lcd_Write_Char
  1472  0336  0825               	movf	??_Lcd_Write_Char,w
  1473  0337  00A6               	movwf	Lcd_Write_Char@temp
  1474                           
  1475                           ;./LCD.h: 84:    y = a&0xF0;
  1476  0338  0828               	movf	Lcd_Write_Char@a,w
  1477  0339  39F0               	andlw	240
  1478  033A  00A5               	movwf	??_Lcd_Write_Char
  1479  033B  0825               	movf	??_Lcd_Write_Char,w
  1480  033C  00A7               	movwf	Lcd_Write_Char@y
  1481  033D                     l1072:
  1482                           
  1483                           ;./LCD.h: 85:    RC0 = 1;
  1484  033D  1407               	bsf	7,0	;volatile
  1485  033E                     l1074:
  1486                           
  1487                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  1488  033E  0827               	movf	Lcd_Write_Char@y,w
  1489  033F  00A5               	movwf	??_Lcd_Write_Char
  1490  0340  3004               	movlw	4
  1491  0341                     u335:
  1492  0341  1003               	clrc
  1493  0342  0CA5               	rrf	??_Lcd_Write_Char,f
  1494  0343  3EFF               	addlw	-1
  1495  0344  1D03               	skipz
  1496  0345  2B41               	goto	u335
  1497  0346  0825               	movf	??_Lcd_Write_Char,w
  1498  0347  120A  118A  243A  120A  118A  	fcall	_Lcd_Port
  1499  034C                     l1076:
  1500                           
  1501                           ;./LCD.h: 87:    RC2 = 1;
  1502  034C  1283               	bcf	3,5	;RP0=0, select bank0
  1503  034D  1303               	bcf	3,6	;RP1=0, select bank0
  1504  034E  1507               	bsf	7,2	;volatile
  1505  034F                     l1078:
  1506                           
  1507                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1508  034F  300C               	movlw	12
  1509  0350  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0351  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0352  00A5               	movwf	??_Lcd_Write_Char
  1512  0353                     u707:
  1513  0353  0BA5               	decfsz	??_Lcd_Write_Char,f
  1514  0354  2B53               	goto	u707
  1515  0355  0000               	nop
  1516  0356                     l1080:
  1517                           
  1518                           ;./LCD.h: 89:    RC2 = 0;
  1519  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0358  1107               	bcf	7,2	;volatile
  1522  0359                     l1082:
  1523                           
  1524                           ;./LCD.h: 90:    Lcd_Port(temp);
  1525  0359  0826               	movf	Lcd_Write_Char@temp,w
  1526  035A  120A  118A  243A  120A  118A  	fcall	_Lcd_Port
  1527  035F                     l1084:
  1528                           
  1529                           ;./LCD.h: 91:    RC2 = 1;
  1530  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0361  1507               	bsf	7,2	;volatile
  1533  0362                     l1086:
  1534                           
  1535                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1536  0362  300C               	movlw	12
  1537  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0365  00A5               	movwf	??_Lcd_Write_Char
  1540  0366                     u717:
  1541  0366  0BA5               	decfsz	??_Lcd_Write_Char,f
  1542  0367  2B66               	goto	u717
  1543  0368  0000               	nop
  1544  0369                     l1088:
  1545                           
  1546                           ;./LCD.h: 93:    RC2 = 0;
  1547  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1548  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1549  036B  1107               	bcf	7,2	;volatile
  1550  036C                     l87:
  1551  036C  0008               	return
  1552  036D                     __end_of_Lcd_Write_Char:
  1553                           
  1554                           	psect	text6
  1555  017C                     __ptext6:	
  1556 ;; *************** function _Lcd_Set_Cursor *****************
  1557 ;; Defined at:
  1558 ;;		line 40 in file "./LCD.h"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  a               1    wreg     unsigned char 
  1561 ;;  b               1    8[BANK0 ] unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  a               1   11[BANK0 ] unsigned char 
  1564 ;;  temp            1   14[BANK0 ] unsigned char 
  1565 ;;  y               1   13[BANK0 ] unsigned char 
  1566 ;;  z               1   12[BANK0 ] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, pclath, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1576 ;;      Params:         0       1       0       0       0
  1577 ;;      Locals:         0       4       0       0       0
  1578 ;;      Temps:          0       2       0       0       0
  1579 ;;      Totals:         0       7       0       0       0
  1580 ;;Total ram usage:        7 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 6
  1583 ;; This function calls:
  1584 ;;		_Lcd_Cmd
  1585 ;; This function is called by:
  1586 ;;		_Lcd_Padrao
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591  017C                     _Lcd_Set_Cursor:	
  1592                           ;psect for function _Lcd_Set_Cursor
  1593                           
  1594                           
  1595                           ;incstack = 0
  1596                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1597                           ;Lcd_Set_Cursor@a stored from wreg
  1598  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1599  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1600  017E  00AB               	movwf	Lcd_Set_Cursor@a
  1601  017F                     l1102:
  1602                           
  1603                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  1604  017F  032B               	decf	Lcd_Set_Cursor@a,w
  1605  0180  1D03               	btfss	3,2
  1606  0181  2983               	goto	u381
  1607  0182  2984               	goto	u380
  1608  0183                     u381:
  1609  0183  29A9               	goto	l1112
  1610  0184                     u380:
  1611  0184                     l1104:
  1612                           
  1613                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  1614  0184  0828               	movf	Lcd_Set_Cursor@b,w
  1615  0185  3E7F               	addlw	127
  1616  0186  00A9               	movwf	??_Lcd_Set_Cursor
  1617  0187  0829               	movf	??_Lcd_Set_Cursor,w
  1618  0188  00AE               	movwf	Lcd_Set_Cursor@temp
  1619                           
  1620                           ;./LCD.h: 46:   z = temp>>4;
  1621  0189  082E               	movf	Lcd_Set_Cursor@temp,w
  1622  018A  00A9               	movwf	??_Lcd_Set_Cursor
  1623  018B  3004               	movlw	4
  1624  018C                     u395:
  1625  018C  1003               	clrc
  1626  018D  0CA9               	rrf	??_Lcd_Set_Cursor,f
  1627  018E  3EFF               	addlw	-1
  1628  018F  1D03               	skipz
  1629  0190  298C               	goto	u395
  1630  0191  0829               	movf	??_Lcd_Set_Cursor,w
  1631  0192  00AA               	movwf	??_Lcd_Set_Cursor+1
  1632  0193  082A               	movf	??_Lcd_Set_Cursor+1,w
  1633  0194  00AC               	movwf	Lcd_Set_Cursor@z
  1634  0195                     l1106:
  1635                           
  1636                           ;./LCD.h: 47:   y = temp & 0x0F;
  1637  0195  082E               	movf	Lcd_Set_Cursor@temp,w
  1638  0196  390F               	andlw	15
  1639  0197  00A9               	movwf	??_Lcd_Set_Cursor
  1640  0198  0829               	movf	??_Lcd_Set_Cursor,w
  1641  0199  00AD               	movwf	Lcd_Set_Cursor@y
  1642  019A                     l1108:
  1643                           
  1644                           ;./LCD.h: 48:   Lcd_Cmd(z);
  1645  019A  082C               	movf	Lcd_Set_Cursor@z,w
  1646  019B  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1647  01A0                     l1110:
  1648                           
  1649                           ;./LCD.h: 49:   Lcd_Cmd(y);
  1650  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1651  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1652  01A2  082D               	movf	Lcd_Set_Cursor@y,w
  1653  01A3  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1654                           
  1655                           ;./LCD.h: 50:  }
  1656  01A8  29D3               	goto	l81
  1657  01A9                     l1112:
  1658  01A9  3002               	movlw	2
  1659  01AA  062B               	xorwf	Lcd_Set_Cursor@a,w
  1660  01AB  1D03               	btfss	3,2
  1661  01AC  29AE               	goto	u401
  1662  01AD  29AF               	goto	u400
  1663  01AE                     u401:
  1664  01AE  29D3               	goto	l81
  1665  01AF                     u400:
  1666  01AF                     l1114:
  1667                           
  1668                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  1669  01AF  0828               	movf	Lcd_Set_Cursor@b,w
  1670  01B0  3EBF               	addlw	191
  1671  01B1  00A9               	movwf	??_Lcd_Set_Cursor
  1672  01B2  0829               	movf	??_Lcd_Set_Cursor,w
  1673  01B3  00AE               	movwf	Lcd_Set_Cursor@temp
  1674                           
  1675                           ;./LCD.h: 54:   z = temp>>4;
  1676  01B4  082E               	movf	Lcd_Set_Cursor@temp,w
  1677  01B5  00A9               	movwf	??_Lcd_Set_Cursor
  1678  01B6  3004               	movlw	4
  1679  01B7                     u415:
  1680  01B7  1003               	clrc
  1681  01B8  0CA9               	rrf	??_Lcd_Set_Cursor,f
  1682  01B9  3EFF               	addlw	-1
  1683  01BA  1D03               	skipz
  1684  01BB  29B7               	goto	u415
  1685  01BC  0829               	movf	??_Lcd_Set_Cursor,w
  1686  01BD  00AA               	movwf	??_Lcd_Set_Cursor+1
  1687  01BE  082A               	movf	??_Lcd_Set_Cursor+1,w
  1688  01BF  00AC               	movwf	Lcd_Set_Cursor@z
  1689  01C0                     l1116:
  1690                           
  1691                           ;./LCD.h: 55:   y = temp & 0x0F;
  1692  01C0  082E               	movf	Lcd_Set_Cursor@temp,w
  1693  01C1  390F               	andlw	15
  1694  01C2  00A9               	movwf	??_Lcd_Set_Cursor
  1695  01C3  0829               	movf	??_Lcd_Set_Cursor,w
  1696  01C4  00AD               	movwf	Lcd_Set_Cursor@y
  1697  01C5                     l1118:
  1698                           
  1699                           ;./LCD.h: 56:   Lcd_Cmd(z);
  1700  01C5  082C               	movf	Lcd_Set_Cursor@z,w
  1701  01C6  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1702  01CB                     l1120:
  1703                           
  1704                           ;./LCD.h: 57:   Lcd_Cmd(y);
  1705  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1706  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1707  01CD  082D               	movf	Lcd_Set_Cursor@y,w
  1708  01CE  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1709  01D3                     l81:
  1710  01D3  0008               	return
  1711  01D4                     __end_of_Lcd_Set_Cursor:
  1712                           
  1713                           	psect	text7
  1714  0490                     __ptext7:	
  1715 ;; *************** function _Lcd_Clear *****************
  1716 ;; Defined at:
  1717 ;;		line 34 in file "./LCD.h"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;		None
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, pclath, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0
  1734 ;;      Totals:         0       0       0       0       0
  1735 ;;Total ram usage:        0 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 6
  1738 ;; This function calls:
  1739 ;;		_Lcd_Cmd
  1740 ;; This function is called by:
  1741 ;;		_Lcd_Padrao
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746  0490                     _Lcd_Clear:	
  1747                           ;psect for function _Lcd_Clear
  1748                           
  1749  0490                     l1100:	
  1750                           ;incstack = 0
  1751                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1752                           
  1753                           
  1754                           ;./LCD.h: 36:  Lcd_Cmd(0);
  1755  0490  3000               	movlw	0
  1756  0491  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1757                           
  1758                           ;./LCD.h: 37:  Lcd_Cmd(1);
  1759  0496  3001               	movlw	1
  1760  0497  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1761  049C                     l75:
  1762  049C  0008               	return
  1763  049D                     __end_of_Lcd_Clear:
  1764                           
  1765                           	psect	text8
  1766  0119                     __ptext8:	
  1767 ;; *************** function _Lcd_Init *****************
  1768 ;; Defined at:
  1769 ;;		line 61 in file "./LCD.h"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       2       0       0       0
  1786 ;;      Totals:         0       2       0       0       0
  1787 ;;Total ram usage:        2 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 6
  1790 ;; This function calls:
  1791 ;;		_Lcd_Cmd
  1792 ;;		_Lcd_Port
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798  0119                     _Lcd_Init:	
  1799                           ;psect for function _Lcd_Init
  1800                           
  1801  0119                     l1160:	
  1802                           ;incstack = 0
  1803                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1804                           
  1805                           
  1806                           ;./LCD.h: 63:   Lcd_Port(0x00);
  1807  0119  3000               	movlw	0
  1808  011A  120A  118A  243A  120A  118A  	fcall	_Lcd_Port
  1809  011F                     l1162:
  1810                           
  1811                           ;./LCD.h: 64:    _delay((unsigned long)((20)*(4000000/4000.0)));
  1812  011F  301A               	movlw	26
  1813  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0122  00A9               	movwf	??_Lcd_Init+1
  1816  0123  30F7               	movlw	247
  1817  0124  00A8               	movwf	??_Lcd_Init
  1818  0125                     u727:
  1819  0125  0BA8               	decfsz	??_Lcd_Init,f
  1820  0126  2925               	goto	u727
  1821  0127  0BA9               	decfsz	??_Lcd_Init+1,f
  1822  0128  2925               	goto	u727
  1823  0129  292A               	nop2
  1824  012A                     l1164:
  1825                           
  1826                           ;./LCD.h: 65:   Lcd_Cmd(0x03);
  1827  012A  3003               	movlw	3
  1828  012B  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1829                           
  1830                           ;./LCD.h: 66:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1831  0130  3007               	movlw	7
  1832  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0133  00A9               	movwf	??_Lcd_Init+1
  1835  0134  307C               	movlw	124
  1836  0135  00A8               	movwf	??_Lcd_Init
  1837  0136                     u737:
  1838  0136  0BA8               	decfsz	??_Lcd_Init,f
  1839  0137  2936               	goto	u737
  1840  0138  0BA9               	decfsz	??_Lcd_Init+1,f
  1841  0139  2936               	goto	u737
  1842  013A  0000               	nop
  1843  013B                     l1166:
  1844                           
  1845                           ;./LCD.h: 67:   Lcd_Cmd(0x03);
  1846  013B  3003               	movlw	3
  1847  013C  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1848  0141                     l1168:
  1849                           
  1850                           ;./LCD.h: 68:  _delay((unsigned long)((11)*(4000000/4000.0)));
  1851  0141  300F               	movlw	15
  1852  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1853  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1854  0144  00A9               	movwf	??_Lcd_Init+1
  1855  0145  3047               	movlw	71
  1856  0146  00A8               	movwf	??_Lcd_Init
  1857  0147                     u747:
  1858  0147  0BA8               	decfsz	??_Lcd_Init,f
  1859  0148  2947               	goto	u747
  1860  0149  0BA9               	decfsz	??_Lcd_Init+1,f
  1861  014A  2947               	goto	u747
  1862                           
  1863                           ;./LCD.h: 69:   Lcd_Cmd(0x03);
  1864  014B  3003               	movlw	3
  1865  014C  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1866                           
  1867                           ;./LCD.h: 71:   Lcd_Cmd(0x02);
  1868  0151  3002               	movlw	2
  1869  0152  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1870                           
  1871                           ;./LCD.h: 72:   Lcd_Cmd(0x02);
  1872  0157  3002               	movlw	2
  1873  0158  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1874                           
  1875                           ;./LCD.h: 73:   Lcd_Cmd(0x08);
  1876  015D  3008               	movlw	8
  1877  015E  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1878                           
  1879                           ;./LCD.h: 74:   Lcd_Cmd(0x00);
  1880  0163  3000               	movlw	0
  1881  0164  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1882                           
  1883                           ;./LCD.h: 75:   Lcd_Cmd(0x0C);
  1884  0169  300C               	movlw	12
  1885  016A  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1886                           
  1887                           ;./LCD.h: 76:   Lcd_Cmd(0x00);
  1888  016F  3000               	movlw	0
  1889  0170  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1890                           
  1891                           ;./LCD.h: 77:   Lcd_Cmd(0x06);
  1892  0175  3006               	movlw	6
  1893  0176  120A  118A  245A  120A  118A  	fcall	_Lcd_Cmd
  1894  017B                     l84:
  1895  017B  0008               	return
  1896  017C                     __end_of_Lcd_Init:
  1897                           
  1898                           	psect	text9
  1899  045A                     __ptext9:	
  1900 ;; *************** function _Lcd_Cmd *****************
  1901 ;; Defined at:
  1902 ;;		line 25 in file "./LCD.h"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  a               1    wreg     unsigned char 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  a               1    7[BANK0 ] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         0       0       0       0       0
  1917 ;;      Locals:         0       1       0       0       0
  1918 ;;      Temps:          0       2       0       0       0
  1919 ;;      Totals:         0       3       0       0       0
  1920 ;;Total ram usage:        3 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 5
  1923 ;; This function calls:
  1924 ;;		_Lcd_Port
  1925 ;; This function is called by:
  1926 ;;		_Lcd_Clear
  1927 ;;		_Lcd_Set_Cursor
  1928 ;;		_Lcd_Init
  1929 ;;		_Lcd_Shift_Right
  1930 ;;		_Lcd_Shift_Left
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934  045A                     _Lcd_Cmd:	
  1935                           ;psect for function _Lcd_Cmd
  1936                           
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1940                           ;Lcd_Cmd@a stored from wreg
  1941  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1942  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1943  045C  00A7               	movwf	Lcd_Cmd@a
  1944  045D                     l1060:
  1945                           
  1946                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  1947  045D  1007               	bcf	7,0	;volatile
  1948  045E                     l1062:
  1949                           
  1950                           ;./LCD.h: 28:  Lcd_Port(a);
  1951  045E  0827               	movf	Lcd_Cmd@a,w
  1952  045F  120A  118A  243A  120A  118A  	fcall	_Lcd_Port
  1953  0464                     l1064:
  1954                           
  1955                           ;./LCD.h: 29:  RC2 = 1;
  1956  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0466  1507               	bsf	7,2	;volatile
  1959  0467                     l1066:
  1960                           
  1961                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  1962  0467  3006               	movlw	6
  1963  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1965  046A  00A6               	movwf	??_Lcd_Cmd+1
  1966  046B  302F               	movlw	47
  1967  046C  00A5               	movwf	??_Lcd_Cmd
  1968  046D                     u757:
  1969  046D  0BA5               	decfsz	??_Lcd_Cmd,f
  1970  046E  2C6D               	goto	u757
  1971  046F  0BA6               	decfsz	??_Lcd_Cmd+1,f
  1972  0470  2C6D               	goto	u757
  1973  0471  2C72               	nop2
  1974  0472                     l1068:
  1975                           
  1976                           ;./LCD.h: 31:         RC2 = 0;
  1977  0472  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0473  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0474  1107               	bcf	7,2	;volatile
  1980  0475                     l72:
  1981  0475  0008               	return
  1982  0476                     __end_of_Lcd_Cmd:
  1983                           
  1984                           	psect	text10
  1985  043A                     __ptext10:	
  1986 ;; *************** function _Lcd_Port *****************
  1987 ;; Defined at:
  1988 ;;		line 3 in file "./LCD.h"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  a               1    wreg     unsigned char 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  a               1    4[BANK0 ] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       0       0       0
  2003 ;;      Locals:         0       1       0       0       0
  2004 ;;      Temps:          0       0       0       0       0
  2005 ;;      Totals:         0       1       0       0       0
  2006 ;;Total ram usage:        1 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 4
  2009 ;; This function calls:
  2010 ;;		Nothing
  2011 ;; This function is called by:
  2012 ;;		_Lcd_Cmd
  2013 ;;		_Lcd_Init
  2014 ;;		_Lcd_Write_Char
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018  043A                     _Lcd_Port:	
  2019                           ;psect for function _Lcd_Port
  2020                           
  2021                           
  2022                           ;incstack = 0
  2023                           ; Regs used in _Lcd_Port: [wreg]
  2024                           ;Lcd_Port@a stored from wreg
  2025  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2026  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2027  043C  00A4               	movwf	Lcd_Port@a
  2028  043D                     l1050:
  2029                           
  2030                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2031  043D  1C24               	btfss	Lcd_Port@a,0
  2032  043E  2C40               	goto	u291
  2033  043F  2C41               	goto	u290
  2034  0440                     u291:
  2035  0440  2C43               	goto	l61
  2036  0441                     u290:
  2037  0441                     l1052:
  2038                           
  2039                           ;./LCD.h: 6:   RC4 = 1;
  2040  0441  1607               	bsf	7,4	;volatile
  2041  0442  2C44               	goto	l62
  2042  0443                     l61:	
  2043                           ;./LCD.h: 7:  else
  2044                           
  2045                           
  2046                           ;./LCD.h: 8:   RC4 = 0;
  2047  0443  1207               	bcf	7,4	;volatile
  2048  0444                     l62:
  2049                           
  2050                           ;./LCD.h: 10:  if(a & 2)
  2051  0444  1CA4               	btfss	Lcd_Port@a,1
  2052  0445  2C47               	goto	u301
  2053  0446  2C48               	goto	u300
  2054  0447                     u301:
  2055  0447  2C4A               	goto	l63
  2056  0448                     u300:
  2057  0448                     l1054:
  2058                           
  2059                           ;./LCD.h: 11:   RC5 = 1;
  2060  0448  1687               	bsf	7,5	;volatile
  2061  0449  2C4B               	goto	l64
  2062  044A                     l63:	
  2063                           ;./LCD.h: 12:  else
  2064                           
  2065                           
  2066                           ;./LCD.h: 13:   RC5 = 0;
  2067  044A  1287               	bcf	7,5	;volatile
  2068  044B                     l64:
  2069                           
  2070                           ;./LCD.h: 15:  if(a & 4)
  2071  044B  1D24               	btfss	Lcd_Port@a,2
  2072  044C  2C4E               	goto	u311
  2073  044D  2C4F               	goto	u310
  2074  044E                     u311:
  2075  044E  2C51               	goto	l65
  2076  044F                     u310:
  2077  044F                     l1056:
  2078                           
  2079                           ;./LCD.h: 16:   RC6 = 1;
  2080  044F  1707               	bsf	7,6	;volatile
  2081  0450  2C52               	goto	l66
  2082  0451                     l65:	
  2083                           ;./LCD.h: 17:  else
  2084                           
  2085                           
  2086                           ;./LCD.h: 18:   RC6 = 0;
  2087  0451  1307               	bcf	7,6	;volatile
  2088  0452                     l66:
  2089                           
  2090                           ;./LCD.h: 20:  if(a & 8)
  2091  0452  1DA4               	btfss	Lcd_Port@a,3
  2092  0453  2C55               	goto	u321
  2093  0454  2C56               	goto	u320
  2094  0455                     u321:
  2095  0455  2C58               	goto	l67
  2096  0456                     u320:
  2097  0456                     l1058:
  2098                           
  2099                           ;./LCD.h: 21:   RC7 = 1;
  2100  0456  1787               	bsf	7,7	;volatile
  2101  0457  2C59               	goto	l69
  2102  0458                     l67:	
  2103                           ;./LCD.h: 22:  else
  2104                           
  2105                           
  2106                           ;./LCD.h: 23:   RC7 = 0;
  2107  0458  1387               	bcf	7,7	;volatile
  2108  0459                     l69:
  2109  0459  0008               	return
  2110  045A                     __end_of_Lcd_Port:
  2111                           
  2112                           	psect	text11
  2113  0226                     __ptext11:	
  2114 ;; *************** function _tes *****************
  2115 ;; Defined at:
  2116 ;;		line 47 in file "newmain.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2130 ;;      Params:         0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0
  2132 ;;      Temps:          0       4       0       0       0
  2133 ;;      Totals:         0       4       0       0       0
  2134 ;;Total ram usage:        4 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 3
  2137 ;; This function calls:
  2138 ;;		i1_Lcd_Clear
  2139 ;;		i1_Lcd_Set_Cursor
  2140 ;;		i1_Lcd_Write_String
  2141 ;; This function is called by:
  2142 ;;		Interrupt level 1
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146  0226                     _tes:	
  2147                           ;psect for function _tes
  2148                           
  2149  0226                     i1l1234:
  2150                           
  2151                           ;newmain.c: 48:     if(TMR1IF){
  2152  0226  1C0C               	btfss	12,0	;volatile
  2153  0227  2A29               	goto	u49_21
  2154  0228  2A2A               	goto	u49_20
  2155  0229                     u49_21:
  2156  0229  2A44               	goto	i1l116
  2157  022A                     u49_20:
  2158  022A                     i1l1236:
  2159                           
  2160                           ;newmain.c: 49:         PIR1bits.TMR1IF = 0;
  2161  022A  100C               	bcf	12,0	;volatile
  2162  022B                     i1l1238:
  2163                           
  2164                           ;newmain.c: 50:         TMR1L = 0xDC;
  2165  022B  30DC               	movlw	220
  2166  022C  008E               	movwf	14	;volatile
  2167                           
  2168                           ;newmain.c: 51:         TMR1H = 0X0B;
  2169  022D  300B               	movlw	11
  2170  022E  008F               	movwf	15	;volatile
  2171                           
  2172                           ;newmain.c: 52:         conta++;
  2173  022F  3001               	movlw	1
  2174  0230  07FB               	addwf	_conta,f
  2175  0231  1803               	skipnc
  2176  0232  0AFC               	incf	_conta+1,f
  2177  0233  3000               	movlw	0
  2178  0234  07FC               	addwf	_conta+1,f
  2179  0235                     i1l1240:
  2180                           
  2181                           ;newmain.c: 53:         if(conta == 8){
  2182  0235  3008               	movlw	8
  2183  0236  067B               	xorwf	_conta,w
  2184  0237  047C               	iorwf	_conta+1,w
  2185  0238  1D03               	btfss	3,2
  2186  0239  2A3B               	goto	u50_21
  2187  023A  2A3C               	goto	u50_20
  2188  023B                     u50_21:
  2189  023B  2A64               	goto	i1l120
  2190  023C                     u50_20:
  2191  023C                     i1l1242:
  2192                           
  2193                           ;newmain.c: 54:             T1CONbits.TMR1ON = 0;
  2194  023C  1010               	bcf	16,0	;volatile
  2195  023D                     i1l1244:
  2196                           
  2197                           ;newmain.c: 55:             conta = 0;
  2198  023D  01FB               	clrf	_conta
  2199  023E  01FC               	clrf	_conta+1
  2200  023F                     i1l1246:
  2201                           
  2202                           ;newmain.c: 56:             aux_despejo = 1;
  2203  023F  3001               	movlw	1
  2204  0240  00B4               	movwf	_aux_despejo
  2205  0241  3000               	movlw	0
  2206  0242  00B5               	movwf	_aux_despejo+1
  2207  0243  2A64               	goto	i1l120
  2208  0244                     i1l116:	
  2209                           ;newmain.c: 60:     else if (INTCONbits.INTF)
  2210                           
  2211  0244  1C8B               	btfss	11,1	;volatile
  2212  0245  2A47               	goto	u51_21
  2213  0246  2A48               	goto	u51_20
  2214  0247                     u51_21:
  2215  0247  2A64               	goto	i1l120
  2216  0248                     u51_20:
  2217  0248                     i1l1248:
  2218                           
  2219                           ;newmain.c: 61:     {;newmain.c: 62:         INTCONbits.INTF = 0;
  2220  0248  108B               	bcf	11,1	;volatile
  2221                           
  2222                           ;newmain.c: 63:         PORTDbits.RD7 = 0;
  2223  0249  1388               	bcf	8,7	;volatile
  2224  024A                     i1l1250:
  2225                           
  2226                           ;newmain.c: 64:         Lcd_Clear();
  2227  024A  120A  118A  249D  120A  118A  	fcall	i1_Lcd_Clear
  2228                           
  2229                           ;newmain.c: 65:         Lcd_Set_Cursor(1,1);
  2230  024F  01F4               	clrf	i1Lcd_Set_Cursor@b
  2231  0250  0AF4               	incf	i1Lcd_Set_Cursor@b,f
  2232  0251  3001               	movlw	1
  2233  0252  120A  118A  21D4  120A  118A  	fcall	i1_Lcd_Set_Cursor
  2234  0257                     i1l1252:
  2235                           
  2236                           ;newmain.c: 66:         Lcd_Write_String("INTERROMPIDO...");
  2237  0257  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2238  0258  120A  118A  23F3  120A  118A  	fcall	i1_Lcd_Write_String
  2239  025D                     i1l1254:
  2240                           
  2241                           ;newmain.c: 67:         interrupcao = 1;
  2242  025D  3001               	movlw	1
  2243  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2244  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0260  00B2               	movwf	_interrupcao
  2246  0261  3000               	movlw	0
  2247  0262  00B3               	movwf	_interrupcao+1
  2248  0263  2A3F               	goto	i1l1246
  2249  0264                     i1l120:
  2250  0264  0823               	movf	??_tes+3,w
  2251  0265  00FF               	movwf	btemp+1
  2252  0266  0822               	movf	??_tes+2,w
  2253  0267  008A               	movwf	10
  2254  0268  0821               	movf	??_tes+1,w
  2255  0269  0084               	movwf	4
  2256  026A  0E20               	swapf	??_tes,w
  2257  026B  0083               	movwf	3
  2258  026C  0EFE               	swapf	btemp,f
  2259  026D  0E7E               	swapf	btemp,w
  2260  026E  0009               	retfie
  2261  026F                     __end_of_tes:
  2262                           
  2263                           	psect	intentry
  2264  0004                     __pintentry:	
  2265                           ;incstack = 0
  2266                           ; Regs used in _tes: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2267                           
  2268  0004                     interrupt_function:
  2269  007E                     saved_w	set	btemp
  2270  0004  00FE               	movwf	btemp
  2271  0005  0E03               	swapf	3,w
  2272  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0008  00A0               	movwf	??_tes
  2275  0009  0804               	movf	4,w
  2276  000A  00A1               	movwf	??_tes+1
  2277  000B  080A               	movf	10,w
  2278  000C  00A2               	movwf	??_tes+2
  2279  000D  087F               	movf	btemp+1,w
  2280  000E  00A3               	movwf	??_tes+3
  2281  000F  120A  118A  2A26   	ljmp	_tes
  2282                           
  2283                           	psect	text12
  2284  03F3                     __ptext12:	
  2285 ;; *************** function i1_Lcd_Write_String *****************
  2286 ;; Defined at:
  2287 ;;		line 96 in file "./LCD.h"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  a               1    wreg     PTR unsigned char 
  2290 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  2291 ;;		 -> STR_1(16), 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  a               1    5[COMMON] PTR unsigned char 
  2294 ;;		 -> STR_5(16), STR_4(14), STR_3(9), STR_2(10), 
  2295 ;;		 -> STR_1(16), 
  2296 ;;  i               2    6[COMMON] int 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         3       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0
  2309 ;;      Totals:         3       0       0       0       0
  2310 ;;Total ram usage:        3 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 2
  2313 ;; This function calls:
  2314 ;;		i1_Lcd_Write_Char
  2315 ;; This function is called by:
  2316 ;;		_tes
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320  03F3                     i1_Lcd_Write_String:	
  2321                           ;psect for function i1_Lcd_Write_String
  2322                           
  2323                           
  2324                           ;incstack = 0
  2325 ;; using string table level
  2326                           ; Regs used in i1_Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2327                           ;i1Lcd_Write_String@a stored from wreg
  2328  03F3  00F5               	movwf	i1Lcd_Write_String@a
  2329  03F4                     i1l1222:
  2330                           
  2331                           ;./LCD.h: 96: void Lcd_Write_String(char *a);./LCD.h: 97: {;./LCD.h: 98:  int i;;./LCD.h
      +                          : 99:  for(i=0;a[i]!='\0';i++)
  2332  03F4  01F6               	clrf	i1Lcd_Write_String@i
  2333  03F5  01F7               	clrf	i1Lcd_Write_String@i+1
  2334  03F6  2C0A               	goto	i1l1228
  2335  03F7                     i1l1224:
  2336                           
  2337                           ;./LCD.h: 100:     Lcd_Write_Char(a[i]);
  2338  03F7  0876               	movf	i1Lcd_Write_String@i,w
  2339  03F8  0775               	addwf	i1Lcd_Write_String@a,w
  2340  03F9  0084               	movwf	4
  2341  03FA  120A  118A  226F  120A  118A  	fcall	stringdir
  2342  03FF  120A  118A  236D  120A  118A  	fcall	i1_Lcd_Write_Char
  2343  0404                     i1l1226:
  2344  0404  3001               	movlw	1
  2345  0405  07F6               	addwf	i1Lcd_Write_String@i,f
  2346  0406  1803               	skipnc
  2347  0407  0AF7               	incf	i1Lcd_Write_String@i+1,f
  2348  0408  3000               	movlw	0
  2349  0409  07F7               	addwf	i1Lcd_Write_String@i+1,f
  2350  040A                     i1l1228:
  2351  040A  0876               	movf	i1Lcd_Write_String@i,w
  2352  040B  0775               	addwf	i1Lcd_Write_String@a,w
  2353  040C  0084               	movwf	4
  2354  040D  120A  118A  226F  120A  118A  	fcall	stringdir
  2355  0412  3A00               	xorlw	0
  2356  0413  1D03               	skipz
  2357  0414  2C16               	goto	u48_21
  2358  0415  2C17               	goto	u48_20
  2359  0416                     u48_21:
  2360  0416  2BF7               	goto	i1l1224
  2361  0417                     u48_20:
  2362  0417                     i1l93:
  2363  0417  0008               	return
  2364  0418                     __end_ofi1_Lcd_Write_String:
  2365                           
  2366                           	psect	text13
  2367  036D                     __ptext13:	
  2368 ;; *************** function i1_Lcd_Write_Char *****************
  2369 ;; Defined at:
  2370 ;;		line 80 in file "./LCD.h"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  a               1    wreg     unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  a               1    4[COMMON] unsigned char 
  2375 ;;  y               1    3[COMMON] unsigned char 
  2376 ;;  temp            1    2[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       0       0       0       0
  2387 ;;      Locals:         3       0       0       0       0
  2388 ;;      Temps:          1       0       0       0       0
  2389 ;;      Totals:         4       0       0       0       0
  2390 ;;Total ram usage:        4 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; Hardware stack levels required when called: 1
  2393 ;; This function calls:
  2394 ;;		i1_Lcd_Port
  2395 ;; This function is called by:
  2396 ;;		i1_Lcd_Write_String
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400  036D                     i1_Lcd_Write_Char:	
  2401                           ;psect for function i1_Lcd_Write_Char
  2402                           
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in i1_Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2406                           ;i1Lcd_Write_Char@a stored from wreg
  2407  036D  00F4               	movwf	i1Lcd_Write_Char@a
  2408  036E                     i1l1140:
  2409                           
  2410                           ;./LCD.h: 80: void Lcd_Write_Char(char a);./LCD.h: 81: {;./LCD.h: 82:    char temp,y;;./
      +                          LCD.h: 83:    temp = a&0x0F;
  2411  036E  0874               	movf	i1Lcd_Write_Char@a,w
  2412  036F  390F               	andlw	15
  2413  0370  00F1               	movwf	??i1_Lcd_Write_Char
  2414  0371  0871               	movf	??i1_Lcd_Write_Char,w
  2415  0372  00F2               	movwf	i1Lcd_Write_Char@temp
  2416                           
  2417                           ;./LCD.h: 84:    y = a&0xF0;
  2418  0373  0874               	movf	i1Lcd_Write_Char@a,w
  2419  0374  39F0               	andlw	240
  2420  0375  00F1               	movwf	??i1_Lcd_Write_Char
  2421  0376  0871               	movf	??i1_Lcd_Write_Char,w
  2422  0377  00F3               	movwf	i1Lcd_Write_Char@y
  2423  0378                     i1l1142:
  2424                           
  2425                           ;./LCD.h: 85:    RC0 = 1;
  2426  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2427  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2428  037A  1407               	bsf	7,0	;volatile
  2429  037B                     i1l1144:
  2430                           
  2431                           ;./LCD.h: 86:    Lcd_Port(y>>4);
  2432  037B  0873               	movf	i1Lcd_Write_Char@y,w
  2433  037C  00F1               	movwf	??i1_Lcd_Write_Char
  2434  037D  3004               	movlw	4
  2435  037E                     u43_25:
  2436  037E  1003               	clrc
  2437  037F  0CF1               	rrf	??i1_Lcd_Write_Char,f
  2438  0380  3EFF               	addlw	-1
  2439  0381  1D03               	skipz
  2440  0382  2B7E               	goto	u43_25
  2441  0383  0871               	movf	??i1_Lcd_Write_Char,w
  2442  0384  120A  118A  2418  120A  118A  	fcall	i1_Lcd_Port
  2443  0389                     i1l1146:
  2444                           
  2445                           ;./LCD.h: 87:    RC2 = 1;
  2446  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2447  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2448  038B  1507               	bsf	7,2	;volatile
  2449  038C                     i1l1148:
  2450                           
  2451                           ;./LCD.h: 88:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2452  038C  300D               	movlw	13
  2453  038D  00F1               	movwf	??i1_Lcd_Write_Char
  2454  038E                     u76_27:
  2455  038E  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2456  038F  2B8E               	goto	u76_27
  2457  0390                     i1l1150:
  2458                           
  2459                           ;./LCD.h: 89:    RC2 = 0;
  2460  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2461  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2462  0392  1107               	bcf	7,2	;volatile
  2463  0393                     i1l1152:
  2464                           
  2465                           ;./LCD.h: 90:    Lcd_Port(temp);
  2466  0393  0872               	movf	i1Lcd_Write_Char@temp,w
  2467  0394  120A  118A  2418  120A  118A  	fcall	i1_Lcd_Port
  2468  0399                     i1l1154:
  2469                           
  2470                           ;./LCD.h: 91:    RC2 = 1;
  2471  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2472  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2473  039B  1507               	bsf	7,2	;volatile
  2474  039C                     i1l1156:
  2475                           
  2476                           ;./LCD.h: 92:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  2477  039C  300D               	movlw	13
  2478  039D  00F1               	movwf	??i1_Lcd_Write_Char
  2479  039E                     u77_27:
  2480  039E  0BF1               	decfsz	??i1_Lcd_Write_Char,f
  2481  039F  2B9E               	goto	u77_27
  2482  03A0                     i1l1158:
  2483                           
  2484                           ;./LCD.h: 93:    RC2 = 0;
  2485  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2486  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2487  03A2  1107               	bcf	7,2	;volatile
  2488  03A3                     i1l87:
  2489  03A3  0008               	return
  2490  03A4                     __end_ofi1_Lcd_Write_Char:
  2491                           
  2492                           	psect	text14
  2493  01D4                     __ptext14:	
  2494 ;; *************** function i1_Lcd_Set_Cursor *****************
  2495 ;; Defined at:
  2496 ;;		line 40 in file "./LCD.h"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  a               1    wreg     unsigned char 
  2499 ;;  b               1    4[COMMON] unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  a               1    7[COMMON] unsigned char 
  2502 ;;  temp            1   10[COMMON] unsigned char 
  2503 ;;  y               1    9[COMMON] unsigned char 
  2504 ;;  z               1    8[COMMON] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         1       0       0       0       0
  2515 ;;      Locals:         4       0       0       0       0
  2516 ;;      Temps:          2       0       0       0       0
  2517 ;;      Totals:         7       0       0       0       0
  2518 ;;Total ram usage:        7 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 2
  2521 ;; This function calls:
  2522 ;;		i1_Lcd_Cmd
  2523 ;; This function is called by:
  2524 ;;		_tes
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528  01D4                     i1_Lcd_Set_Cursor:	
  2529                           ;psect for function i1_Lcd_Set_Cursor
  2530                           
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in i1_Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2534                           ;i1Lcd_Set_Cursor@a stored from wreg
  2535  01D4  00F7               	movwf	i1Lcd_Set_Cursor@a
  2536  01D5                     i1l1202:
  2537                           
  2538                           ;./LCD.h: 40: void Lcd_Set_Cursor(char a, char b);./LCD.h: 41: {;./LCD.h: 42:  char temp
      +                          ,z,y;;./LCD.h: 43:  if(a == 1)
  2539  01D5  0377               	decf	i1Lcd_Set_Cursor@a,w
  2540  01D6  1D03               	btfss	3,2
  2541  01D7  29D9               	goto	u44_21
  2542  01D8  29DA               	goto	u44_20
  2543  01D9                     u44_21:
  2544  01D9  29FD               	goto	i1l1212
  2545  01DA                     u44_20:
  2546  01DA                     i1l1204:
  2547                           
  2548                           ;./LCD.h: 44:  {;./LCD.h: 45:    temp = 0x80 + b - 1;
  2549  01DA  0874               	movf	i1Lcd_Set_Cursor@b,w
  2550  01DB  3E7F               	addlw	127
  2551  01DC  00F5               	movwf	??i1_Lcd_Set_Cursor
  2552  01DD  0875               	movf	??i1_Lcd_Set_Cursor,w
  2553  01DE  00FA               	movwf	i1Lcd_Set_Cursor@temp
  2554                           
  2555                           ;./LCD.h: 46:   z = temp>>4;
  2556  01DF  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2557  01E0  00F5               	movwf	??i1_Lcd_Set_Cursor
  2558  01E1  3004               	movlw	4
  2559  01E2                     u45_25:
  2560  01E2  1003               	clrc
  2561  01E3  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2562  01E4  3EFF               	addlw	-1
  2563  01E5  1D03               	skipz
  2564  01E6  29E2               	goto	u45_25
  2565  01E7  0875               	movf	??i1_Lcd_Set_Cursor,w
  2566  01E8  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  2567  01E9  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  2568  01EA  00F8               	movwf	i1Lcd_Set_Cursor@z
  2569  01EB                     i1l1206:
  2570                           
  2571                           ;./LCD.h: 47:   y = temp & 0x0F;
  2572  01EB  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2573  01EC  390F               	andlw	15
  2574  01ED  00F5               	movwf	??i1_Lcd_Set_Cursor
  2575  01EE  0875               	movf	??i1_Lcd_Set_Cursor,w
  2576  01EF  00F9               	movwf	i1Lcd_Set_Cursor@y
  2577  01F0                     i1l1208:
  2578                           
  2579                           ;./LCD.h: 48:   Lcd_Cmd(z);
  2580  01F0  0878               	movf	i1Lcd_Set_Cursor@z,w
  2581  01F1  120A  118A  2476  120A  118A  	fcall	i1_Lcd_Cmd
  2582  01F6                     i1l1210:
  2583                           
  2584                           ;./LCD.h: 49:   Lcd_Cmd(y);
  2585  01F6  0879               	movf	i1Lcd_Set_Cursor@y,w
  2586  01F7  120A  118A  2476  120A  118A  	fcall	i1_Lcd_Cmd
  2587                           
  2588                           ;./LCD.h: 50:  }
  2589  01FC  2A25               	goto	i1l81
  2590  01FD                     i1l1212:
  2591  01FD  3002               	movlw	2
  2592  01FE  0677               	xorwf	i1Lcd_Set_Cursor@a,w
  2593  01FF  1D03               	btfss	3,2
  2594  0200  2A02               	goto	u46_21
  2595  0201  2A03               	goto	u46_20
  2596  0202                     u46_21:
  2597  0202  2A25               	goto	i1l81
  2598  0203                     u46_20:
  2599  0203                     i1l1214:
  2600                           
  2601                           ;./LCD.h: 52:  {;./LCD.h: 53:   temp = 0xC0 + b - 1;
  2602  0203  0874               	movf	i1Lcd_Set_Cursor@b,w
  2603  0204  3EBF               	addlw	191
  2604  0205  00F5               	movwf	??i1_Lcd_Set_Cursor
  2605  0206  0875               	movf	??i1_Lcd_Set_Cursor,w
  2606  0207  00FA               	movwf	i1Lcd_Set_Cursor@temp
  2607                           
  2608                           ;./LCD.h: 54:   z = temp>>4;
  2609  0208  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2610  0209  00F5               	movwf	??i1_Lcd_Set_Cursor
  2611  020A  3004               	movlw	4
  2612  020B                     u47_25:
  2613  020B  1003               	clrc
  2614  020C  0CF5               	rrf	??i1_Lcd_Set_Cursor,f
  2615  020D  3EFF               	addlw	-1
  2616  020E  1D03               	skipz
  2617  020F  2A0B               	goto	u47_25
  2618  0210  0875               	movf	??i1_Lcd_Set_Cursor,w
  2619  0211  00F6               	movwf	??i1_Lcd_Set_Cursor+1
  2620  0212  0876               	movf	??i1_Lcd_Set_Cursor+1,w
  2621  0213  00F8               	movwf	i1Lcd_Set_Cursor@z
  2622  0214                     i1l1216:
  2623                           
  2624                           ;./LCD.h: 55:   y = temp & 0x0F;
  2625  0214  087A               	movf	i1Lcd_Set_Cursor@temp,w
  2626  0215  390F               	andlw	15
  2627  0216  00F5               	movwf	??i1_Lcd_Set_Cursor
  2628  0217  0875               	movf	??i1_Lcd_Set_Cursor,w
  2629  0218  00F9               	movwf	i1Lcd_Set_Cursor@y
  2630  0219                     i1l1218:
  2631                           
  2632                           ;./LCD.h: 56:   Lcd_Cmd(z);
  2633  0219  0878               	movf	i1Lcd_Set_Cursor@z,w
  2634  021A  120A  118A  2476  120A  118A  	fcall	i1_Lcd_Cmd
  2635  021F                     i1l1220:
  2636                           
  2637                           ;./LCD.h: 57:   Lcd_Cmd(y);
  2638  021F  0879               	movf	i1Lcd_Set_Cursor@y,w
  2639  0220  120A  118A  2476  120A  118A  	fcall	i1_Lcd_Cmd
  2640  0225                     i1l81:
  2641  0225  0008               	return
  2642  0226                     __end_ofi1_Lcd_Set_Cursor:
  2643                           
  2644                           	psect	text15
  2645  049D                     __ptext15:	
  2646 ;; *************** function i1_Lcd_Clear *****************
  2647 ;; Defined at:
  2648 ;;		line 34 in file "./LCD.h"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0
  2664 ;;      Temps:          0       0       0       0       0
  2665 ;;      Totals:         0       0       0       0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		i1_Lcd_Cmd
  2671 ;; This function is called by:
  2672 ;;		_tes
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676  049D                     i1_Lcd_Clear:	
  2677                           ;psect for function i1_Lcd_Clear
  2678                           
  2679  049D                     i1l1200:	
  2680                           ;incstack = 0
  2681                           ; Regs used in i1_Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2682                           
  2683                           
  2684                           ;./LCD.h: 36:  Lcd_Cmd(0);
  2685  049D  3000               	movlw	0
  2686  049E  120A  118A  2476  120A  118A  	fcall	i1_Lcd_Cmd
  2687                           
  2688                           ;./LCD.h: 37:  Lcd_Cmd(1);
  2689  04A3  3001               	movlw	1
  2690  04A4  120A  118A  2476  120A  118A  	fcall	i1_Lcd_Cmd
  2691  04A9                     i1l75:
  2692  04A9  0008               	return
  2693  04AA                     __end_ofi1_Lcd_Clear:
  2694                           
  2695                           	psect	text16
  2696  0476                     __ptext16:	
  2697 ;; *************** function i1_Lcd_Cmd *****************
  2698 ;; Defined at:
  2699 ;;		line 25 in file "./LCD.h"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;  a               1    wreg     unsigned char 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  a               1    3[COMMON] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         1       0       0       0       0
  2715 ;;      Temps:          2       0       0       0       0
  2716 ;;      Totals:         3       0       0       0       0
  2717 ;;Total ram usage:        3 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 1
  2720 ;; This function calls:
  2721 ;;		i1_Lcd_Port
  2722 ;; This function is called by:
  2723 ;;		i1_Lcd_Clear
  2724 ;;		i1_Lcd_Set_Cursor
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728  0476                     i1_Lcd_Cmd:	
  2729                           ;psect for function i1_Lcd_Cmd
  2730                           
  2731                           
  2732                           ;incstack = 0
  2733                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2734                           ;i1Lcd_Cmd@a stored from wreg
  2735  0476  00F3               	movwf	i1Lcd_Cmd@a
  2736  0477                     i1l1130:
  2737                           
  2738                           ;./LCD.h: 25: void Lcd_Cmd(char a);./LCD.h: 26: {;./LCD.h: 27:  RC0 = 0;
  2739  0477  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0478  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0479  1007               	bcf	7,0	;volatile
  2742  047A                     i1l1132:
  2743                           
  2744                           ;./LCD.h: 28:  Lcd_Port(a);
  2745  047A  0873               	movf	i1Lcd_Cmd@a,w
  2746  047B  120A  118A  2418  120A  118A  	fcall	i1_Lcd_Port
  2747  0480                     i1l1134:
  2748                           
  2749                           ;./LCD.h: 29:  RC2 = 1;
  2750  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0481  1303               	bcf	3,6	;RP1=0, select bank0
  2752  0482  1507               	bsf	7,2	;volatile
  2753  0483                     i1l1136:
  2754                           
  2755                           ;./LCD.h: 30:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2756  0483  3006               	movlw	6
  2757  0484  00F2               	movwf	??i1_Lcd_Cmd+1
  2758  0485  3030               	movlw	48
  2759  0486  00F1               	movwf	??i1_Lcd_Cmd
  2760  0487                     u78_27:
  2761  0487  0BF1               	decfsz	??i1_Lcd_Cmd,f
  2762  0488  2C87               	goto	u78_27
  2763  0489  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  2764  048A  2C87               	goto	u78_27
  2765  048B  0000               	nop
  2766  048C                     i1l1138:
  2767                           
  2768                           ;./LCD.h: 31:         RC2 = 0;
  2769  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2770  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2771  048E  1107               	bcf	7,2	;volatile
  2772  048F                     i1l72:
  2773  048F  0008               	return
  2774  0490                     __end_ofi1_Lcd_Cmd:
  2775                           
  2776                           	psect	text17
  2777  0418                     __ptext17:	
  2778 ;; *************** function i1_Lcd_Port *****************
  2779 ;; Defined at:
  2780 ;;		line 3 in file "./LCD.h"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  a               1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  a               1    0[COMMON] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2794 ;;      Params:         0       0       0       0       0
  2795 ;;      Locals:         1       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0
  2797 ;;      Totals:         1       0       0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		i1_Lcd_Cmd
  2804 ;;		i1_Lcd_Write_Char
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808  0418                     i1_Lcd_Port:	
  2809                           ;psect for function i1_Lcd_Port
  2810                           
  2811                           
  2812                           ;incstack = 0
  2813                           ; Regs used in i1_Lcd_Port: [wreg]
  2814                           ;i1Lcd_Port@a stored from wreg
  2815  0418  00F0               	movwf	i1Lcd_Port@a
  2816  0419                     i1l1090:
  2817                           
  2818                           ;./LCD.h: 3: void Lcd_Port(char a);./LCD.h: 4: {;./LCD.h: 5:  if(a & 1)
  2819  0419  1C70               	btfss	i1Lcd_Port@a,0
  2820  041A  2C1C               	goto	u34_21
  2821  041B  2C1D               	goto	u34_20
  2822  041C                     u34_21:
  2823  041C  2C21               	goto	i1l61
  2824  041D                     u34_20:
  2825  041D                     i1l1092:
  2826                           
  2827                           ;./LCD.h: 6:   RC4 = 1;
  2828  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2829  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2830  041F  1607               	bsf	7,4	;volatile
  2831  0420  2C24               	goto	i1l62
  2832  0421                     i1l61:	
  2833                           ;./LCD.h: 7:  else
  2834                           
  2835                           
  2836                           ;./LCD.h: 8:   RC4 = 0;
  2837  0421  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0422  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0423  1207               	bcf	7,4	;volatile
  2840  0424                     i1l62:
  2841                           
  2842                           ;./LCD.h: 10:  if(a & 2)
  2843  0424  1CF0               	btfss	i1Lcd_Port@a,1
  2844  0425  2C27               	goto	u35_21
  2845  0426  2C28               	goto	u35_20
  2846  0427                     u35_21:
  2847  0427  2C2A               	goto	i1l63
  2848  0428                     u35_20:
  2849  0428                     i1l1094:
  2850                           
  2851                           ;./LCD.h: 11:   RC5 = 1;
  2852  0428  1687               	bsf	7,5	;volatile
  2853  0429  2C2B               	goto	i1l64
  2854  042A                     i1l63:	
  2855                           ;./LCD.h: 12:  else
  2856                           
  2857                           
  2858                           ;./LCD.h: 13:   RC5 = 0;
  2859  042A  1287               	bcf	7,5	;volatile
  2860  042B                     i1l64:
  2861                           
  2862                           ;./LCD.h: 15:  if(a & 4)
  2863  042B  1D70               	btfss	i1Lcd_Port@a,2
  2864  042C  2C2E               	goto	u36_21
  2865  042D  2C2F               	goto	u36_20
  2866  042E                     u36_21:
  2867  042E  2C31               	goto	i1l65
  2868  042F                     u36_20:
  2869  042F                     i1l1096:
  2870                           
  2871                           ;./LCD.h: 16:   RC6 = 1;
  2872  042F  1707               	bsf	7,6	;volatile
  2873  0430  2C32               	goto	i1l66
  2874  0431                     i1l65:	
  2875                           ;./LCD.h: 17:  else
  2876                           
  2877                           
  2878                           ;./LCD.h: 18:   RC6 = 0;
  2879  0431  1307               	bcf	7,6	;volatile
  2880  0432                     i1l66:
  2881                           
  2882                           ;./LCD.h: 20:  if(a & 8)
  2883  0432  1DF0               	btfss	i1Lcd_Port@a,3
  2884  0433  2C35               	goto	u37_21
  2885  0434  2C36               	goto	u37_20
  2886  0435                     u37_21:
  2887  0435  2C38               	goto	i1l67
  2888  0436                     u37_20:
  2889  0436                     i1l1098:
  2890                           
  2891                           ;./LCD.h: 21:   RC7 = 1;
  2892  0436  1787               	bsf	7,7	;volatile
  2893  0437  2C39               	goto	i1l69
  2894  0438                     i1l67:	
  2895                           ;./LCD.h: 22:  else
  2896                           
  2897                           
  2898                           ;./LCD.h: 23:   RC7 = 0;
  2899  0438  1387               	bcf	7,7	;volatile
  2900  0439                     i1l69:
  2901  0439  0008               	return
  2902  043A                     __end_ofi1_Lcd_Port:
  2903  007E                     btemp	set	126	;btemp
  2904  007E                     wtemp0	set	126
  2905                           
  2906                           	psect	config
  2907                           
  2908                           ;Config register CONFIG @ 0x2007
  2909                           ;	Oscillator Selection bits
  2910                           ;	FOSC = HS, HS oscillator
  2911                           ;	Watchdog Timer Enable bit
  2912                           ;	WDTE = OFF, WDT disabled
  2913                           ;	Power-up Timer Enable bit
  2914                           ;	PWRTE = ON, PWRT enabled
  2915                           ;	Brown-out Reset Enable bit
  2916                           ;	BOREN = ON, BOR enabled
  2917                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2918                           ;	LVP = 0x1, unprogrammed default
  2919                           ;	Data EEPROM Memory Code Protection bit
  2920                           ;	CPD = 0x1, unprogrammed default
  2921                           ;	Flash Program Memory Write Enable bits
  2922                           ;	WRT = 0x3, unprogrammed default
  2923                           ;	In-Circuit Debugger Mode bit
  2924                           ;	DEBUG = 0x1, unprogrammed default
  2925                           ;	Flash Program Memory Code Protection bit
  2926                           ;	CP = 0x1, unprogrammed default
  2927  2007                     	org	8199
  2928  2007  3FF2               	dw	16370

Data Sizes:
    Strings     65
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80     18      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_5(CODE[16]), STR_4(CODE[14]), STR_3(CODE[9]), STR_2(CODE[10]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tes in COMMON

    _tes->i1_Lcd_Set_Cursor
    i1_Lcd_Write_String->i1_Lcd_Write_Char
    i1_Lcd_Write_Char->i1_Lcd_Port
    i1_Lcd_Set_Cursor->i1_Lcd_Cmd
    i1_Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Padrao->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _tes in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tes in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tes in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tes in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2798
                                             15 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                         _Lcd_Padrao
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _PesoCambuca
                        _PesoEstoque
 ---------------------------------------------------------------------------------
 (1) _PesoEstoque                                          6     4      2      23
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _PesoCambuca                                          6     4      2      23
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Padrao                                           0     0      0    1277
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     433
                                              9 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              5 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     734
                                              8 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              8 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              5 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _tes                                                  4     4      0     784
                                              0 BANK0      4     4      0
                        i1_Lcd_Clear
                   i1_Lcd_Set_Cursor
                 i1_Lcd_Write_String
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Write_String                                   3     3      0     268
                                              5 COMMON     3     3      0
                   i1_Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Write_Char                                     4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Set_Cursor                                     7     6      1     406
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) i1_Lcd_Clear                                          0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Padrao
     _Lcd_Clear
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _Lcd_Set_Cursor
   _Lcd_Write_String
   _PesoCambuca
   _PesoEstoque

 _tes (ROOT)
   i1_Lcd_Clear
     i1_Lcd_Cmd
       i1_Lcd_Port
   i1_Lcd_Set_Cursor
     i1_Lcd_Cmd
   i1_Lcd_Write_String
     i1_Lcd_Write_Char
       i1_Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      29       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      29      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 21 22:33:46 2022

                         pc 0002                          l61 0443                          l62 0444  
                        l63 044A                          l64 044B                          l72 0475  
                        l65 0451                          l81 01D3                          l66 0452  
                        l67 0458                          l75 049C                          l84 017B  
                        l69 0459                          l93 03CC                          l87 036C  
                        fsr 0004                         l123 032F                         l140 00E6  
                       l126 02F2                         l129 03F2                         l139 00DF  
                       _RC0 0038                         _RC2 003A                         _RC4 003C  
                       _RC5 003D                         _RC6 003E                         _RC7 003F  
                       u300 0448                         u301 0447                         u310 044F  
                       u311 044E                         u320 0456                         u400 01AF  
                       u321 0455                         u401 01AE                         u420 03CC  
                       u421 03CB                         u415 01B7                         u335 0341  
                       u520 0085                         u521 0084                         u290 0441  
                       u530 00A9                         u291 0440                         u531 00A8  
                       u380 0184                         u540 00C4                         u381 0183  
                       u541 00C3                         u550 00E6                         u607 02BA  
                       u551 00E5                         u535 00A5                         u560 00ED  
                       u617 02C4                         u561 00EC                         u395 018C  
                       u707 0353                         u627 02CE                         u717 0366  
                       u637 02D8                         u727 0125                         u647 02E2  
                       u737 0136                         u657 02F7                         u577 008F  
                       u747 0147                         u667 0301                         u587 00B4  
                       u757 046D                         u677 030B                         u597 010A  
                       u687 0315                         u697 031F                         _tes 0226  
                       fsr0 0004                        l1100 0490                        l1110 01A0  
                      l1102 017F                        l1120 01CB                        l1104 0184  
                      l1112 01A9                        l1050 043D                        l1114 01AF  
                      l1106 0195                        l1122 03A7                        l1052 0441  
                      l1060 045D                        l1116 01C0                        l1108 019A  
                      l1124 03AA                        l1300 0050                        l1054 0448  
                      l1062 045E                        l1118 01C5                        l1070 0333  
                      l1126 03B7                        l1310 005D                        l1302 0053  
                      l1056 044F                        l1064 0464                        l1160 0119  
                      l1080 0356                        l1072 033D                        l1128 03BF  
                      l1320 0074                        l1312 0062                        l1304 0054  
                      l1058 0456                        l1066 0467                        l1162 011F  
                      l1082 0359                        l1074 033E                        l1170 02F3  
                      l1330 009A                        l1322 007F                        l1314 0065  
                      l1306 0057                        l1068 0472                        l1164 012A  
                      l1084 035F                        l1076 034C                        l1172 02FA  
                      l1340 00C0                        l1332 00A9                        l1324 0085  
                      l1316 0067                        l1308 0058                        l1260 0027  
                      l1166 013B                        l1086 0362                        l1078 034F  
                      l1174 0304                        l1190 02DB                        l1182 02B6  
                      l1350 00DB                        l1342 00C4                        l1334 00AC  
                      l1326 0087                        l1318 0069                        l1270 0035  
                      l1262 002D                        l1168 0141                        l1088 0369  
                      l1176 030E                        l1184 02BD                        l1360 0102  
                      l1352 00E0                        l1344 00C6                        l1336 00BA  
                      l1328 0095                        l1280 003A                        l1272 0036  
                      l1264 002E                        l1194 03CD                        l1178 0318  
                      l1186 02C7                        l1362 0110                        l1354 00E7  
                      l1346 00CB                        l1338 00BD                        l1290 0049  
                      l1282 003D                        l1274 0037                        l1266 0031  
                      l1196 03DC                        l1188 02D1                        l1356 00ED  
                      l1348 00D5                        l1292 004A                        l1284 0040  
                      l1276 0038                        l1268 0034                        l1198 03E2  
                      l1358 00FC                        l1294 004B                        l1286 0041  
                      l1278 0039                        l1296 004C                        l1288 0046  
                      l1298 004F                        ?_tes 0070                        STR_1 0275  
                      STR_2 02A3                        STR_3 02AD                        STR_4 0295  
                      STR_5 0285                        i1l61 0421                        i1l62 0424  
                      i1l63 042A                        i1l64 042B                        i1l72 048F  
                      i1l65 0431                        i1l81 0225                        i1l66 0432  
                      i1l67 0438                        i1l75 04A9                        i1l69 0439  
                      i1l93 0417                        i1l87 03A3           ?_Lcd_Write_String 0070  
                      _main 0027                        btemp 007E                        start 0012  
        ??_Lcd_Write_String 0029             __end_of_Lcd_Cmd 0476                       ??_tes 0020  
                _Lcd_Padrao 03CD                       ?_main 0070                       i1l120 0264  
                     i1l116 0244           ?i1_Lcd_Set_Cursor 0074                       _TMR1H 000F  
                     _TMR1L 000E                       u34_20 041D                       u50_20 023C  
                     u34_21 041C                       u50_21 023B                       u35_20 0428  
                     u51_20 0248                       u35_21 0427                       u51_21 0247  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       u43_25 037E                       u36_20 042F  
                     u44_20 01DA                       u36_21 042E                       u44_21 01D9  
                     u37_20 0436                       u37_21 0435                       u45_25 01E2  
                     u46_20 0203                       u46_21 0202                       u47_25 020B  
                     u48_20 0417                       u48_21 0416                       u49_20 022A  
                     u49_21 0229                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       u76_27 038E  
                     u77_27 039E                       u78_27 0487                 ?i1_Lcd_Port 0070  
        ??i1_Lcd_Set_Cursor 0075                       _conta 007B                       _valor 0036  
                     pclath 000A                       status 0003                       wtemp0 007E  
             ??_PesoCambuca 0026            __end_of_Lcd_Init 017C            __end_of_Lcd_Port 045A  
           __initialization 0015                __end_of_main 0119               ??_PesoEstoque 0026  
                    ??_main 002F                      _ADRESH 001E                      _ADRESL 009E  
                    i1l1200 049D                      i1l1130 0477                      i1l1210 01F6  
                    i1l1202 01D5                      i1l1132 047A                      i1l1220 021F  
                    i1l1204 01DA                      i1l1212 01FD                      i1l1140 036E  
                    i1l1134 0480                      i1l1214 0203                      i1l1206 01EB  
                    i1l1150 0390                      i1l1142 0378                      i1l1222 03F4  
                    i1l1136 0483                      i1l1216 0214                      i1l1208 01F0  
                    i1l1152 0393                      i1l1144 037B                      i1l1224 03F7  
                    i1l1240 0235                      i1l1090 0419                      i1l1138 048C  
                    i1l1218 0219                      i1l1154 0399                      i1l1146 0389  
                    i1l1226 0404                      i1l1250 024A                      i1l1242 023C  
                    i1l1234 0226                      i1l1092 041D                      i1l1156 039C  
                    i1l1148 038C                      i1l1228 040A                      i1l1252 0257  
                    i1l1244 023D                      i1l1236 022A                      i1l1094 0428  
                    i1l1158 03A0                      i1l1254 025D                      i1l1246 023F  
                    i1l1238 022B                      i1l1096 042F                      i1l1248 0248  
                    i1l1098 0436           ?i1_Lcd_Write_Char 0070                   ??_Lcd_Cmd 0025  
                    _TMR1IF 0060                ?i1_Lcd_Clear 0070          ??i1_Lcd_Write_Char 0071  
         __end_ofi1_Lcd_Cmd 0490           i1Lcd_Write_Char@a 0074           i1Lcd_Write_Char@y 0073  
       __end_of_PesoCambuca 0330                 ?_Lcd_Padrao 0070         __end_of_PesoEstoque 02F3  
                    saved_w 007E             Lcd_Set_Cursor@a 002B             Lcd_Set_Cursor@b 0028  
           Lcd_Set_Cursor@y 002D             Lcd_Set_Cursor@z 002C     __end_of__initialization 0023  
         __end_of_Lcd_Clear 049D              __pcstackCOMMON 0070              _Lcd_Set_Cursor 017C  
                 ?_Lcd_Init 0070                   ?_Lcd_Port 0070                  __pbssBANK0 0032  
               _PesoCambuca 02F3                  __pmaintext 0027                 _PesoEstoque 02B6  
                __pintentry 0004      __end_of_Lcd_Set_Cursor 01D4                ??i1_Lcd_Port 0070  
                ??_Lcd_Init 0028                  ??_Lcd_Port 0024                  __stringtab 026F  
            _Lcd_Write_Char 0330                     _Lcd_Cmd 045A          __end_ofi1_Lcd_Port 043A  
           ?_Lcd_Set_Cursor 0028                     __ptext1 02B6                     __ptext2 02F3  
                   __ptext3 03CD                     __ptext4 03A4                     __ptext5 0330  
                   __ptext6 017C                     __ptext7 0490                     __ptext8 0119  
                   __ptext9 045A                   _T1CONbits 0010  __end_ofi1_Lcd_Write_String 0418  
    __end_of_Lcd_Write_Char 036D        end_of_initialization 0023                   Lcd_Port@a 0024  
           PesoCambuca@peso 0028                ??_Lcd_Padrao 002F                   i1_Lcd_Cmd 0476  
                 _PORTBbits 0006                   _PORTDbits 0008             ?_Lcd_Write_Char 0070  
         Lcd_Write_String@a 002B           Lcd_Write_String@i 0029          __end_of_Lcd_Padrao 03F3  
                 _Lcd_Clear 0490                  ?i1_Lcd_Cmd 0070            _Lcd_Write_String 03A4  
       start_initialization 0015                 __end_of_tes 026F            i1_Lcd_Set_Cursor 01D4  
              ?_PesoCambuca 0024                  ?_Lcd_Clear 0070                ?_PesoEstoque 0024  
           Lcd_Write_Char@a 0028             Lcd_Write_Char@y 0027                 __pbssCOMMON 007B  
                 ___latbits 0002               __pcstackBANK0 0020        i1Lcd_Write_Char@temp 0072  
                  ?_Lcd_Cmd 0070            ??_Lcd_Set_Cursor 0029            i1_Lcd_Write_Char 036D  
               ??i1_Lcd_Cmd 0071        i1Lcd_Set_Cursor@temp 007A                   __pstrings 026F  
         interrupt_function 0004               ??i1_Lcd_Clear 0074                    _PIE1bits 008C  
        i1_Lcd_Write_String 03F3                    Lcd_Cmd@a 0027                    _PIR1bits 000C  
               ??_Lcd_Clear 0028         ?i1_Lcd_Write_String 0070                  _ADCON0bits 001F  
               __stringbase 0274                  _ADCON1bits 009F            ??_Lcd_Write_Char 0025  
                  _Lcd_Init 0119                    _Lcd_Port 043A                 _aux_despejo 0034  
      ??i1_Lcd_Write_String 0075    __end_of_Lcd_Write_String 03CD                _peso_cambuca 003A  
       __end_ofi1_Lcd_Clear 04AA                _peso_estoque 0038          __end_of__stringtab 0275  
  __end_ofi1_Lcd_Set_Cursor 0226           i1Lcd_Set_Cursor@a 0077           i1Lcd_Set_Cursor@b 0074  
         i1Lcd_Set_Cursor@y 0079           i1Lcd_Set_Cursor@z 0078                    __ptext10 043A  
                  __ptext11 0226                    __ptext12 03F3                    __ptext13 036D  
                  __ptext14 01D4                    __ptext15 049D                    __ptext16 0476  
                  __ptext17 0418                 i1Lcd_Port@a 0070                 _interrupcao 0032  
       i1Lcd_Write_String@a 0075         i1Lcd_Write_String@i 0076                  _INTCONbits 000B  
        Lcd_Write_Char@temp 0026                    intlevel1 0000    __end_ofi1_Lcd_Write_Char 03A4  
               i1_Lcd_Clear 049D                  i1Lcd_Cmd@a 0073                   stringcode 026F  
        Lcd_Set_Cursor@temp 002E                  _OPTION_REG 0081                  i1_Lcd_Port 0418  
                  stringdir 026F                    stringtab 026F             PesoEstoque@peso 0028  
